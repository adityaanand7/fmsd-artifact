<org.dacapo.parser.SimpleCharStream:init,local1,86,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,394,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,394,<null>>,D,D>;
<org.dacapo.harness.Benchmark:enableValidationReport,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:enableValidationReport,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,411,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,411,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,24,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,44,<>> = <<org.sunflow.math.BoundingBox:toString,local1,44,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,22,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,22,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVectorArray,local1,12,<>> = <<org.sunflow.core.ParameterList:getVectorArray,local1,12,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,20,<>> = <<org.sunflow.core.accel.KDTree:build,local1,20,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,129,<>> = <<org.sunflow.SunflowAPI:create,local1,129,<null>>,E,E>;
<org.dacapo.harness.FileDigest:replaceAllFixed,local1,28,<>> = <<org.dacapo.harness.FileDigest:replaceAllFixed,local1,28,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,36,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,93,<>> = <<org.dacapo.harness.TestHarness:init,local1,93,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,local1,46,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,46,<null>>,E,E>;
<org.apache.commons.cli.OptionValidator:validateOption,parmtr,2,<>> = <<java.lang.String:charAt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.OptionValidator:validateOption,argmnt,2,<null>>,D,D>;<<java.lang.String:toCharArray,argmnt,1,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,parmtr,3,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList:getMatrix,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getVector,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,458,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,236,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,236,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,local1,13,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,local1,15,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;<<java.util.Map:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:access$100,parmtr,2,<>> = <<org.sunflow.core.LightServer:access$100,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:resolveOption,retrn,27,<>> = <<org.apache.commons.cli.Option:getOpt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getLongOpt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:resolveOption,retrn,27,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPoint,retrn,31,<>> = <<org.sunflow.core.ParameterList:getPoint,retrn,31,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,376,<>> = <<org.sunflow.RenderObjectMap:remove,local1,376,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,256,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:getBakingPrimitives,local1,14,<>> = <<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:getBakingPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,141,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,18,<>> = <<org.sunflow.RenderObjectMap:remove,local1,18,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,28,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:initialize,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:prepareJars,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:fileInScratch,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVector,retrn,3,<>> = <<org.sunflow.core.ParameterList:getVector,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList:getVector,retrn,3,<null>>,D,D>;
<org.sunflow.image.Color:mul,parmtr,3,<>> = <<org.sunflow.image.Color:mul,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,retrn,1,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:addOption,retrn,1,<null>>,D,D>;<<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setClass,local1,3,<>> = <<org.dacapo.parser.Config:setClass,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,87,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:sub,parmtr,3,<>> = <<org.sunflow.math.Point3:sub,argmnt,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2400,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2400,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2400,retrn,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,513,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,513,<null>>,D,D>;
<org.sunflow.core.InstanceList:intersectPrimitive,parmtr,2,<>> = <<org.sunflow.core.InstanceList:intersectPrimitive,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:typeName,local1,6,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:init,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:init,argmnt,1,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,133,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertRGBtoXYZ,retrn,90,<>> = <<org.sunflow.image.XYZColor:init,argmnt,1,<null>>,D,D>;<<org.sunflow.image.RGBSpace:convertRGBtoXYZ,retrn,90,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,119,<>> = <<org.sunflow.SunflowAPI:parse,local1,119,<null>>,E,E>;
<org.sunflow.Benchmark:imageUpdate,local1,52,<>> = <<org.sunflow.image.Color:toNonLinear,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,55,<>> = <<org.dacapo.parser.Config:print,local1,55,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,29,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,324,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloat,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getFloat,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,90,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,90,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,380,<>> = <<org.sunflow.image.RGBSpace:toString,local1,380,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,retrn,61,<>> = <<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,retrn,61,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:init,parmtr,3,<>> = <<org.dacapo.harness.TeeOutputStream:init,argmnt,3,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:init,argmnt,1,<null>>,D,D>;<<java.io.FilterOutputStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:processed,local1,3,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:processed,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:prepare,parmtr,1,<>> = <<org.dacapo.harness.Sunflow:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,52,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:gobble,local1,23,<>> = <<org.apache.commons.cli.PosixParser:gobble,local1,23,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,78,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,78,<null>>,E,E>;
<org.dacapo.harness.TestHarness:findClass,retrn,9,<>> = <<org.dacapo.harness.TestHarness:findClass,retrn,9,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,74,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,74,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptions,retrn,6,<>> = <<org.apache.commons.cli.Options:getOptions,retrn,6,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,216,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,16,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,16,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,611,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,611,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupShader,local1,9,<>> = <<org.sunflow.RenderObjectMap:lookupShader,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,406,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,328,<>> = <<org.sunflow.image.Color:opposite,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,155,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,retrn,49,<>> = <<org.sunflow.core.Ray:normalize,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:getRay,retrn,49,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,local1,33,<>> = <<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:valueOf,retrn,5,<>> = <<org.sunflow.core.ParameterList$InterpolationType:valueOf,retrn,5,<null>>,D,D>;
<org.sunflow.core.ShadingState:initLightSamples,local1,3,<>> = <<org.sunflow.core.ShadingState:initLightSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:initLightSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,125,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,125,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3700,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3700,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,1001,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,1001,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,local1,81,<>> = <<org.sunflow.SunflowAPI:instance,local1,81,<null>>,E,E>;
<org.sunflow.core.Geometry:init,parmtr,2,<>> = <<org.sunflow.core.Geometry:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:init,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,127,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,127,<null>>,E,E>;
<org.sunflow.core.Geometry:build,local1,34,<>> = <<org.sunflow.core.Geometry:build,local1,34,<null>>,E,E>;
<org.sunflow.math.Point3:normal,parmtr,4,<>> = <<org.sunflow.math.Point3:normal,argmnt,4,<null>>,D,D>;
<org.sunflow.Benchmark:kernelBegin,local1,12,<>> = <<org.sunflow.Benchmark:kernelBegin,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:set,retrn,1,<>> = <<org.sunflow.math.Point3:set,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:set,retrn,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,219,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,219,<null>>,E,E>;
<org.sunflow.core.LightServer$1:run,local1,82,<>> = <<org.sunflow.core.LightServer$1:run,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$1:run,callback,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:valueOf,parmtr,2,<>> = <<org.sunflow.core.ParameterList$InterpolationType:valueOf,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,parmtr,2,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,223,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,223,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,64,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,64,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,438,<>> = <<org.sunflow.core.LightServer:build,local1,438,<null>>,D,D>;
<org.dacapo.parser.Config:isKept,parmtr,1,<>> = <<org.dacapo.parser.Config:isKept,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:libraries,local1,62,<>> = <<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:libraries,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,222,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,125,<>> = <<org.sunflow.SunflowAPI:parse,local1,125,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,708,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,708,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1000,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1000,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1000,retrn,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getArgs,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getArgs,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getArgs,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:setModifier,parmtr,2,<>> = <<org.sunflow.core.ShadingState:setModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setModifier,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,635,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,468,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,468,<null>>,E,E>;
<org.sunflow.core.ShadingState:setResult,parmtr,1,<>> = <<org.sunflow.core.ShadingState:setResult,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:prepareShadingState,local1,29,<>> = <<org.sunflow.core.Instance:prepareShadingState,local1,29,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputClause,local1,237,<>> = <<org.dacapo.parser.ConfigFile:outputClause,local1,237,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadModel,local1,9,<>> = <<org.dacapo.parser.Config:setThreadModel,local1,9,<null>>,E,E>;
<org.sunflow.core.Scene:getRadiance,local1,110,<>> = <<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:traceBake,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadeBakeResult,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,72,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,72,<null>>,E,E>;
<org.sunflow.image.RGBSpace:rgbToNonLinear,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:rgbToNonLinear,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:init,parmtr,2,<>> = <<org.sunflow.image.Color:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,467,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,467,<null>>,D,D>;
<org.sunflow.math.BoundingBox:isEmpty,local1,3,<>> = <<org.sunflow.math.BoundingBox:isEmpty,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getCorner,local1,9,<>> = <<org.sunflow.math.BoundingBox:getCorner,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,266,<>> = <<org.sunflow.image.RGBSpace:toString,local1,266,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,74,<>> = <<org.sunflow.SunflowAPI:geometry,local1,74,<null>>,D,D>;
<org.sunflow.image.Color:opposite,retrn,1,<>> = <<org.sunflow.image.Color:opposite,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:opposite,retrn,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,380,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,380,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:configFile,local1,86,<>> = <<org.dacapo.parser.ConfigFile:configFile,local1,86,<null>>,E,E>;
<org.sunflow.SunflowAPI:parse,local1,28,<>> = <<org.sunflow.core.SceneParser:parse,argmnt,1,<null>>,D,D>;<<org.sunflow.core.parser.SCParser:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,327,<>> = <<org.sunflow.core.LightServer:build,local1,327,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,551,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,551,<null>>,E,E>;
<org.apache.commons.cli.Option:getLongOpt,retrn,3,<>> = <<org.apache.commons.cli.Option:getLongOpt,retrn,3,<null>>,D,D>;<<org.apache.commons.cli.Option:getLongOpt,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,parmtr,1,<>> = <<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteFile,local1,24,<>> = <<org.dacapo.harness.Benchmark:deleteFile,local1,24,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupOptions,local1,9,<>> = <<org.sunflow.RenderObjectMap:lookupOptions,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getCorner,local1,19,<>> = <<org.sunflow.math.BoundingBox:getCorner,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,97,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,97,<null>>,E,E>;
<org.dacapo.harness.Callback:isWarmup,local1,6,<>> = <<org.dacapo.harness.Callback:isWarmup,local1,6,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:init,local1,14,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,14,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,102,<>> = <<org.dacapo.harness.FileDigest:main,local1,102,<null>>,E,E>;
<org.sunflow.core.Ray:init,parmtr,1,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVector,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getVector,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,99,<>> = <<org.dacapo.harness.Callback:start,local1,99,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:setBasis,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getV,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getGeoNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getUV,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPrimitiveID,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getU,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,143,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,143,<null>>,E,E>;
<org.sunflow.core.ParameterList:getColor,local1,19,<>> = <<org.sunflow.core.ParameterList:getColor,local1,19,<null>>,E,E>;
<org.sunflow.system.SearchPath:addSearchPath,local1,37,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,478,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,478,<null>>,D,D>;
<org.sunflow.system.UI:printWarning,local1,9,<>> = <<org.sunflow.system.UI:printWarning,local1,9,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,57,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parse,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,88,<>> = <<org.apache.commons.cli.Parser:processOption,local1,88,<null>>,D,D>;
<org.sunflow.core.ParameterList:setFaceCount,parmtr,1,<>> = <<org.sunflow.core.ParameterList:setFaceCount,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getArea,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:getArea,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getExtents,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,58,<>> = <<java.lang.String:contains,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,7,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,local1,7,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:generateParseException,retrn,212,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,retrn,212,<null>>,D,D>;<<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:lineCount,local1,4,<>> = <<java.io.BufferedReader:init,argmnt,1,<null>>,D,D>;<<java.io.BufferedReader:readLine,argmnt,1,<null>>,D,D>;<<java.io.BufferedReader:close,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:main,parmtr,2,<>> = <<org.sunflow.Benchmark:main,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,660,<>> = <<org.dacapo.harness.Benchmark:validate,local1,660,<null>>,E,E>;
<org.apache.commons.cli.Parser:processProperties,local1,119,<>> = <<org.apache.commons.cli.Parser:processProperties,local1,119,<null>>,E,E>;
<org.sunflow.core.ParameterList$InterpolationType:values,local1,2,<>> = <<org.sunflow.core.ParameterList$InterpolationType:values,local1,2,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:jj_consume_token,retrn,3,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,retrn,3,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2500,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2500,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2500,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,734,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:sampled,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,89,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1048,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1048,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,108,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,386,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,386,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,96,<>> = <<java.lang.Enum:name,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,574,<>> = <<org.sunflow.core.Scene:render,local1,574,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,768,<>> = <<org.sunflow.core.accel.KDTree:build,local1,768,<null>>,E,E>;
<org.sunflow.SunflowAPI:lookupModifier,retrn,7,<>> = <<org.sunflow.SunflowAPI:lookupModifier,retrn,7,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloats,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addFloats,argmnt,2,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:allowRefractionBounced,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:allowRefractionBounced,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,25,<>> = <<org.dacapo.harness.Benchmark:prepareJars,local1,25,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,298,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,298,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceReflection,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceReflection,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getBytes,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,49,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,49,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformTransposeV,retrn,2,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformTransposeV,retrn,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,492,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,492,<null>>,D,D>;
<org.sunflow.image.Color:div,retrn,11,<>> = <<org.sunflow.image.Color:div,retrn,11,<null>>,D,D>;
<org.sunflow.core.camera.PinholeLens:getRay,retrn,45,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.camera.PinholeLens:getRay,retrn,45,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,39,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,39,<null>>,D,D>;
<org.dacapo.parser.Config:parse,retrn,6,<>> = <<org.dacapo.parser.Config:parse,retrn,6,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,168,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,168,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:init,local1,60,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:calculatePhotons,parmtr,3,<>> = <<org.sunflow.core.Scene:calculatePhotons,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,549,<>> = <<org.sunflow.core.LightServer:build,local1,549,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,146,<>> = <<java.lang.ClassLoader:getResourceAsStream,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:remove,local1,34,<>> = <<org.sunflow.util.FastHashMap:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,529,<>> = <<org.sunflow.image.RGBSpace:toString,local1,529,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,89,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,89,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:benchmarks,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:benchmarks,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,603,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,603,<null>>,D,D>;
<org.sunflow.image.Color:set,retrn,1,<>> = <<org.sunflow.image.Color:set,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:set,retrn,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflectionPhoton,local1,18,<>> = <<org.sunflow.core.LightServer:traceReflectionPhoton,local1,18,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,60,<>> = <<org.sunflow.core.LightServer:showStats,local1,60,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$500,retrn,4,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$500,retrn,4,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1800,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1800,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,local1,74,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addPoints,local1,32,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:blend,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:blend,retrn,2,<null>>,D,D>;
<org.apache.commons.cli.UnrecognizedOptionException:init,parmtr,1,<>> = <<org.apache.commons.cli.UnrecognizedOptionException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.UnrecognizedOptionException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupLight,retrn,7,<>> = <<org.sunflow.SunflowAPI:lookupLight,retrn,7,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,32,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,32,<null>>,D,D>;
<org.apache.commons.cli.Options:getRequiredOptions,parmtr,1,<>> = <<org.apache.commons.cli.Options:getRequiredOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3700,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3700,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3700,retrn,3,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$2300,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$2300,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getFloats,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,128,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,79,<>> = <<org.apache.commons.cli.Parser:parse,local1,79,<null>>,D,D>;
<org.codehaus.janino.Scanner$ScanException:init,parmtr,2,<>> = <<org.codehaus.janino.Scanner$ScanException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.Scanner$ScanException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getCenter,local1,7,<>> = <<org.sunflow.math.BoundingBox:getCenter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Options:update,local1,41,<>> = <<org.sunflow.core.Options:update,local1,41,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,77,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,188,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,188,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:init,local1,16,<>> = <<org.apache.commons.cli.MissingArgumentException:init,local1,16,<null>>,D,D>;
<org.sunflow.core.ParameterList:getIntArray,local1,16,<>> = <<org.sunflow.core.ParameterList:getIntArray,local1,16,<null>>,E,E>;
<org.sunflow.Benchmark:kernelEnd,parmtr,1,<>> = <<org.sunflow.Benchmark:kernelEnd,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,242,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,240,<>> = <<org.sunflow.core.Instance:update,local1,240,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,27,<>> = <<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,27,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,parmtr,3,<>> = <<org.dacapo.parser.ParseException:init,argmnt,3,<null>>,D,D>;<<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:init,parmtr,2,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:init,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:updateScene,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Scene:setInstanceLists,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:setLightList,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:iterate,parmtr,1,<>> = <<org.dacapo.harness.Sunflow:iterate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,120,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:sub,parmtr,2,<>> = <<org.sunflow.image.Color:sub,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:clinit,local1,2,<>> = <<org.sunflow.core.accel.KDTree:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getTexCoord,local1,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getTexCoord,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:generateSigmaTable,retrn,25,<>> = <<org.sunflow.math.QMC:generateSigmaTable,retrn,25,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,parmtr,4,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,4,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,48,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:init,parmtr,3,<>> = <<org.apache.commons.cli.Option:init,argmnt,3,<null>>,D,D>;<<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:openLog,local1,3,<>> = <<org.dacapo.harness.TeeOutputStream:openLog,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeePrintStream:openLog,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,43,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,157,<>> = <<org.sunflow.SunflowAPI:parameter,local1,157,<null>>,E,E>;
<org.sunflow.util.FastHashMap$Entry:isRemoved,local1,3,<>> = <<org.sunflow.util.FastHashMap$Entry:isRemoved,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,162,<>> = <<org.sunflow.math.QMC:clinit,local1,162,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,182,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,182,<null>>,E,E>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,91,<>> = <<org.dacapo.harness.Benchmark:extractFileResource,local1,91,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,135,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,135,<null>>,E,E>;
<org.sunflow.system.UI$Module:clinit,local1,178,<>> = <<org.sunflow.system.UI$Module:clinit,local1,178,<null>>,E,E>;
<org.sunflow.Benchmark:imageUpdate,parmtr,1,<>> = <<org.sunflow.Benchmark:imageUpdate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,268,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,268,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupCamera,parmtr,1,<>> = <<org.sunflow.SunflowAPI:lookupCamera,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:rgbToLinear,local1,3,<>> = <<org.sunflow.image.RGBSpace:rgbToLinear,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:start,parmtr,1,<>> = <<org.dacapo.harness.Callback:start,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,31,<>> = <<org.dacapo.harness.Callback:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:sub,parmtr,3,<>> = <<org.sunflow.image.Color:sub,argmnt,3,<null>>,D,D>;
<org.sunflow.Benchmark:print,parmtr,2,<>> = <<org.sunflow.Benchmark:print,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:getDesc,parmtr,2,<>> = <<org.dacapo.parser.Config:getDesc,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addBoolean,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addBoolean,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,732,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,732,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,local1,52,<>> = <<org.sunflow.core.ShadingState:diffuse,local1,52,<null>>,D,D>;
<org.apache.commons.cli.Parser:processArgs,local1,53,<>> = <<org.apache.commons.cli.Parser:processArgs,local1,53,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,356,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,356,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,retrn,7,<>> = <<org.dacapo.parser.Config:getSize,retrn,7,<null>>,D,D>;
<org.sunflow.SunflowAPI:addIncludeSearchPath,parmtr,1,<>> = <<org.sunflow.SunflowAPI:addIncludeSearchPath,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parse,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,797,<>> = <<org.sunflow.core.accel.KDTree:build,local1,797,<null>>,E,E>;
<org.dacapo.harness.DacapoClassLoader:loadClass,retrn,17,<>> = <<org.dacapo.harness.DacapoClassLoader:loadClass,retrn,17,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,14,<>> = <<java.net.URL:getFile,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,68,<>> = <<org.sunflow.SunflowAPI:geometry,local1,68,<null>>,E,E>;
<org.sunflow.core.LightServer:showStats,local1,66,<>> = <<org.sunflow.core.LightServer:showStats,local1,66,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,250,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,250,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,80,<>> = <<org.sunflow.image.Color:clinit,local1,80,<null>>,E,E>;
<org.apache.commons.cli.Option:getValue,retrn,2,<>> = <<org.apache.commons.cli.Option:getValue,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Option:getValue,retrn,2,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,75,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,127,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,41,<>> = <<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getPrimitiveID,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getPrimitiveID,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:kernelMain,local1,2,<>> = <<org.sunflow.Benchmark$BenchmarkScene:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:values,retrn,5,<>> = <<org.dacapo.harness.Callback$Mode:values,retrn,5,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,340,<>> = <<java.util.List:contains,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,57,<>> = <<org.sunflow.core.Camera:update,local1,57,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:newLog,local1,1,<>> = <<org.dacapo.harness.TeeOutputStream:newLog,local1,1,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,4,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,4,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,21,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,7,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,341,<>> = <<org.sunflow.system.UI$Module:clinit,local1,341,<null>>,E,E>;
<org.sunflow.math.Matrix4:transform,local1,26,<>> = <<org.sunflow.math.Matrix4:transform,local1,26,<null>>,D,D>;
<org.dacapo.parser.Config:getLines,local1,10,<>> = <<org.dacapo.parser.Config:getLines,local1,10,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteFile,parmtr,2,<>> = <<java.io.File:isDirectory,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:deleteFile,argmnt,2,<null>>,D,D>;<<java.io.File:delete,argmnt,1,<null>>,D,D>;<<java.io.File:getName,argmnt,1,<null>>,D,D>;<<java.io.File:exists,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,128,<>> = <<org.dacapo.harness.FileDigest:main,local1,128,<null>>,E,E>;
<org.sunflow.core.ShadingState:createPhotonState,parmtr,3,<>> = <<org.sunflow.core.ShadingState:createPhotonState,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,30,<>> = <<org.apache.commons.cli.Option:getOpt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValuesList,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getLongOpt,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,1141,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,1141,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,121,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,local1,121,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getMethodology,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getMethodology,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,3,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:Done,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:Done,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,108,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:removeModifier,local1,25,<>> = <<org.sunflow.core.Instance:removeModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformNormalObjectToWorld,parmtr,1,<>> = <<org.sunflow.core.Instance:transformNormalObjectToWorld,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:findClass,parmtr,1,<>> = <<org.dacapo.harness.TestHarness:findClass,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrixArray,local1,8,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getMatrixArray,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,local1,54,<>> = <<org.sunflow.core.Instance:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:isEmpty,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:isEmpty,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:init,parmtr,2,<>> = <<org.sunflow.core.Camera:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,578,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,578,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,237,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,237,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:readChar,local1,75,<>> = <<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:FillBuff,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:init,parmtr,3,<>> = <<org.apache.commons.cli.Option:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getWindow,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getWindow,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:init,local1,143,<>> = <<org.sunflow.image.RGBSpace:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,476,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,476,<null>>,E,E>;
<org.dacapo.harness.Benchmark:initialize,local1,1,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,1,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,760,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,760,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,115,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,115,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,60,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,60,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,local1,18,<>> = <<org.dacapo.parser.SimpleCharStream:getBeginLine,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:GetImage,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:getBeginColumn,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:getEndLine,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:getEndColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,local1,180,<>> = <<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,2,<>> = <<java.io.BufferedReader:init,argmnt,1,<null>>,D,D>;<<java.io.BufferedReader:readLine,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,143,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,143,<null>>,D,D>;
<org.sunflow.math.Matrix4:init,parmtr,1,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,parmtr,1,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:version,local1,35,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,6,<>> = <<org.dacapo.harness.FileDigest:main,local1,6,<null>>,E,E>;
<org.sunflow.RenderObjectMap:lookupInstance,local1,13,<>> = <<org.sunflow.RenderObjectMap:lookupInstance,local1,13,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,55,<>> = <<org.dacapo.parser.TokenMgrError:LexicalError,local1,55,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,362,<>> = <<org.sunflow.core.LightServer:build,local1,362,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,68,<>> = <<org.dacapo.harness.Benchmark:fileInScratch,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:initialize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,416,<>> = <<org.sunflow.core.LightServer:build,local1,416,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,3,<>> = <<org.sunflow.RenderObjectMap:updateScene,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:render,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:hasOption,local1,8,<>> = <<org.apache.commons.cli.CommandLine:hasOption,local1,8,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,156,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,156,<null>>,D,D>;
<org.apache.commons.cli.ParseException:init,parmtr,1,<>> = <<org.apache.commons.cli.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:traceShadow,local1,15,<>> = <<org.sunflow.core.LightSample:traceShadow,local1,15,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,209,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,209,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,parmtr,1,<>> = <<org.dacapo.harness.TestHarness:dump,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:getNumPrimitives,local1,3,<>> = <<org.sunflow.core.PrimitiveList:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,147,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getThreads,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Token:toString,retrn,3,<>> = <<org.dacapo.parser.Token:toString,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:toString,retrn,3,<null>>,D,D>;<<org.dacapo.parser.Token:toString,callback,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,48,<>> = <<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,retrn,185,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,retrn,185,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,349,<>> = <<org.sunflow.RenderObjectMap:remove,local1,349,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputClause,local1,182,<>> = <<org.dacapo.parser.ConfigFile:digestOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:outputClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,50,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,42,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,42,<null>>,E,E>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,81,<>> = <<org.sunflow.core.accel.NullAccelerator:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,81,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,333,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,333,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1047,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1047,<null>>,D,D>;
<org.sunflow.math.Vector3:dot,parmtr,3,<>> = <<org.sunflow.math.Vector3:dot,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:setSmallTriangles,local1,21,<>> = <<org.sunflow.core.primitive.TriangleMesh:setSmallTriangles,local1,21,<null>>,E,E>;
<org.sunflow.math.QMC:clinit,local1,213,<>> = <<org.sunflow.math.QMC:clinit,local1,213,<null>>,D,D>;
<org.sunflow.core.ShadingState:storePhoton,parmtr,4,<>> = <<org.sunflow.core.ShadingState:storePhoton,argmnt,4,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteTree,local1,55,<>> = <<org.dacapo.harness.Benchmark:deleteTree,local1,55,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,63,<>> = <<org.dacapo.harness.CommandLineArgs:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:defineCallback,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,800,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,800,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,255,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,255,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,543,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,364,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,364,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,808,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,808,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,178,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,178,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,185,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:toString,parmtr,1,<>> = <<org.sunflow.math.Point3:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,21,<>> = <<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,21,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,39,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,39,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,125,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,125,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:enableOutput,local1,3,<>> = <<org.dacapo.harness.TeeOutputStream:enableOutput,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeePrintStream:enableOutput,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,234,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,469,<>> = <<org.dacapo.parser.ParseException:initialise,local1,469,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,parmtr,1,<>> = <<org.dacapo.parser.Config:describeSizes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:pad,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,180,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,180,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:init,parmtr,4,<>> = <<org.dacapo.parser.Config$ThreadModel:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config$ThreadModel:init,argmnt,4,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,3,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,parmtr,2,<>> = <<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceShadow,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceFinalGather,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getBasis,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:findClass,local1,3,<>> = <<org.dacapo.harness.TestHarness:findClass,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,135,<>> = <<org.sunflow.SunflowAPI:create,local1,135,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,local1,37,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getDigest,parmtr,3,<>> = <<org.dacapo.parser.Config:getDigest,argmnt,3,<null>>,D,D>;
<org.sunflow.math.BoundingBox:contains,local1,4,<>> = <<org.sunflow.math.BoundingBox:contains,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,174,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,174,<null>>,E,E>;
<org.apache.commons.cli.Options:getOption,local1,35,<>> = <<java.util.Map:get,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:getOption,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:init,parmtr,1,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,local1,7,<>> = <<java.io.InputStreamReader:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,parmtr,2,<>> = <<org.dacapo.harness.DacapoClassLoader:create,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.SunflowAPI:parameter,local1,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,602,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,58,<>> = <<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,58,<null>>,E,E>;
<org.sunflow.RenderObjectMap:updateScene,local1,157,<>> = <<org.sunflow.core.Instance:getBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:enlargeUlps,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:enlargeUlps,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,173,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer$SmallBucketThread:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,213,<>> = <<org.sunflow.SunflowAPI:render,local1,213,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,712,<>> = <<org.dacapo.harness.Benchmark:validate,local1,712,<null>>,E,E>;
<Harness:makeHarnessClassLoader,retrn,2,<>> = <<java.lang.Thread:getContextClassLoader,argmnt,1,<null>>,D,D>;<<Harness:makeHarnessClassLoader,retrn,2,<null>>,D,D>;<<Harness:makeHarnessClassLoader,retrn,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,637,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,2,<>> = <<java.util.Locale:init,argmnt,1,<null>>,D,D>;<<java.util.Locale:setDefault,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,57,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,57,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,local1,6,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,local1,6,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,79,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,29,<>> = <<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,29,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,local1,3,<>> = <<java.util.HashMap:get,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:init,local1,3,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:update,local1,79,<>> = <<org.sunflow.core.shader.GlassShader:update,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,58,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,58,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,102,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,102,<null>>,E,E>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,110,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVector,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getVector,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,retrn,11,<>> = <<org.sunflow.core.ShadingState:occlusion,retrn,11,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileFromInputStream,local1,11,<>> = <<java.io.BufferedOutputStream:init,argmnt,1,<null>>,D,D>;<<java.io.BufferedOutputStream:write,argmnt,1,<null>>,D,D>;<<java.io.BufferedOutputStream:close,argmnt,1,<null>>,D,D>;<<java.io.BufferedOutputStream:flush,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:remove,local1,46,<>> = <<org.sunflow.util.FastHashMap:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getBasis,retrn,3,<>> = <<org.sunflow.core.ShadingState:getBasis,retrn,3,<null>>,D,D>;<<org.sunflow.core.ShadingState:getBasis,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:resolveOption,local1,38,<>> = <<org.apache.commons.cli.CommandLine:resolveOption,local1,38,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,300,<>> = <<org.sunflow.image.RGBSpace:toString,local1,300,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,20,<>> = <<org.sunflow.RenderObjectMap:update,local1,20,<null>>,E,E>;
<org.sunflow.SunflowAPI:instance,local1,23,<>> = <<org.sunflow.SunflowAPI:instance,local1,23,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:ReInit,parmtr,2,<>> = <<org.dacapo.parser.ConfigFileTokenManager:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,7,<>> = <<org.sunflow.RenderObjectMap:update,local1,7,<null>>,D,D>;
<org.sunflow.core.Geometry:build,local1,83,<>> = <<org.sunflow.core.Geometry:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.NullAccelerator:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,local1,52,<>> = <<org.sunflow.core.LightServer:traceRefraction,local1,52,<null>>,D,D>;
<org.dacapo.harness.Sunflow:iterate,local1,7,<>> = <<org.dacapo.harness.Sunflow:iterate,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:unQuote,retrn,16,<>> = <<org.dacapo.parser.ConfigFile:unQuote,retrn,16,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,66,<>> = <<org.sunflow.core.Camera:update,local1,66,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,950,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,950,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:hasNext,local1,10,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:hasNext,local1,10,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,local1,39,<>> = <<org.sunflow.math.Matrix4:transform,local1,39,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,9,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,12,<>> = <<org.sunflow.math.BoundingBox:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:updateLeaf,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:updateLeaf,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,572,<>> = <<org.sunflow.core.LightServer:build,local1,572,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$2100,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2100,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,262,<>> = <<org.sunflow.SunflowAPI:create,local1,262,<null>>,D,D>;
<org.sunflow.core.Options:update,parmtr,3,<>> = <<org.sunflow.core.Options:update,argmnt,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getNumSamples,local1,3,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getNumSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addPoints,parmtr,4,<>> = <<org.sunflow.core.ParameterList:addPoints,argmnt,4,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,122,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,32,<>> = <<org.sunflow.math.BoundingBox:getMaximum,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMinimum,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,172,<>> = <<org.sunflow.core.RenderObject:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:update,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,24,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1036,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1036,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,17,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:resolveIncludeFilename,parmtr,1,<>> = <<org.sunflow.SunflowAPI:resolveIncludeFilename,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformNormalObjectToWorld,local1,21,<>> = <<org.sunflow.math.Matrix4:transformTransposeV,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformNormalObjectToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,114,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,54,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,54,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,104,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Memory:bytesToString,retrn,79,<>> = <<org.sunflow.system.Memory:bytesToString,retrn,79,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,66,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,66,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,949,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,949,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileInScratch,local1,2,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:getPath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:scale,local1,3,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:scale,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,parmtr,3,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,3,<null>>,D,D>;
<org.sunflow.system.Timer:toString,local1,22,<>> = <<org.sunflow.system.Timer:toString,local1,22,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,parmtr,2,<>> = <<org.dacapo.parser.Config:getSize,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,parmtr,4,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,argmnt,4,<null>>,D,D>;<<org.dacapo.harness.TestHarness:findClass,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:init,parmtr,1,<>> = <<org.sunflow.core.primitive.Sphere:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,240,<>> = <<org.dacapo.parser.ParseException:initialise,local1,240,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,129,<>> = <<org.dacapo.parser.Config:describeSizes,local1,129,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,489,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,local1,6,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,local1,6,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getThreadFactor,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getThreadFactor,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,3,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,149,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,149,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,104,<>> = <<org.sunflow.RenderObjectMap:update,local1,104,<null>>,E,E>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,7040,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,7040,<null>>,E,E>;
<org.apache.commons.cli.Option:setRequired,parmtr,1,<>> = <<org.apache.commons.cli.Option:setRequired,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,93,<>> = <<org.sunflow.image.Color:clinit,local1,93,<null>>,E,E>;
<org.dacapo.parser.Config:getDigest,retrn,11,<>> = <<org.dacapo.parser.Config:getDigest,retrn,11,<null>>,D,D>;
<org.dacapo.parser.Config:getDigest,local1,8,<>> = <<org.dacapo.parser.Config:getDigest,local1,8,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,69,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,69,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,113,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,113,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_ntk,local1,26,<>> = <<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,180,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,180,<null>>,E,E>;
<org.codehaus.janino.util.CausedException:init,parmtr,1,<>> = <<org.codehaus.janino.util.CausedException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:initCause,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$OutputFile:hasBytes,parmtr,1,<>> = <<org.dacapo.parser.Config$OutputFile:hasBytes,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,122,<>> = <<org.sunflow.system.UI$Module:clinit,local1,122,<null>>,E,E>;
<org.apache.commons.cli.Parser:parse,retrn,7,<>> = <<org.apache.commons.cli.Parser:parse,retrn,7,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,838,<>> = <<org.dacapo.harness.Benchmark:validate,local1,838,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:getBakingPrimitives,parmtr,1,<>> = <<org.sunflow.core.primitive.Sphere:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getBinary,local1,6,<>> = <<java.io.BufferedInputStream:init,argmnt,1,<null>>,D,D>;<<java.io.BufferedInputStream:close,argmnt,1,<null>>,D,D>;<<java.io.BufferedInputStream:read,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupShader,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:lookupShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,507,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,507,<null>>,D,D>;
<org.sunflow.core.ParameterList:getBoolean,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getBoolean,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadFactor,parmtr,1,<>> = <<org.dacapo.parser.Config:getThreadFactor,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:init,parmtr,2,<>> = <<org.codehaus.janino.util.LocatedException:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,34,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,17,<>> = <<org.sunflow.SunflowAPI:geometry,local1,17,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,40,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,40,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,local1,78,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getRay,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,6,<>> = <<java.net.URL:openStream,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileFromInputStream,local1,2,<>> = <<java.io.FileOutputStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Memory:bytesToString,local1,19,<>> = <<org.sunflow.system.Memory:bytesToString,local1,19,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,221,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,local1,221,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,303,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,303,<null>>,E,E>;
<org.sunflow.core.shader.DiffuseShader:update,parmtr,3,<>> = <<org.sunflow.core.shader.DiffuseShader:update,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,2,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:init,local1,29,<>> = <<org.dacapo.parser.Config:init,argmnt,1,<null>>,D,D>;<<java.util.HashMap:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3300,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3300,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3300,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,139,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:update,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:taskCancel,local1,8,<>> = <<org.sunflow.system.UI:taskCancel,local1,8,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,319,<>> = <<org.dacapo.parser.ParseException:initialise,local1,319,<null>>,D,D>;
<org.sunflow.core.LightSample:traceShadow,local1,31,<>> = <<org.sunflow.core.LightSample:traceShadow,local1,31,<null>>,E,E>;
<org.dacapo.harness.TeePrintStream:init,parmtr,3,<>> = <<org.dacapo.harness.TeePrintStream:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,80,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,80,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformPX,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformPX,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,60,<>> = <<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,60,<null>>,E,E>;
<org.dacapo.harness.Benchmark:preIteration,local1,55,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,3,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:store,argmnt,1,<null>>,E,E>;
<org.dacapo.harness.Callback:start,local1,5,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:removeModifier,local1,3,<>> = <<org.sunflow.core.Instance:removeModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,local1,51,<>> = <<org.sunflow.core.Options:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,local1,57,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,57,<null>>,E,E>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,2,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,1,<>> = <<org.sunflow.core.LightServer$1:run,local1,1,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,local1,33,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,164,<>> = <<org.sunflow.core.Scene:getThreadPriority,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getThreads,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,parmtr,2,<>> = <<org.dacapo.harness.TestHarness:rmdir,argmnt,2,<null>>,D,D>;<<java.io.File:list,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,120,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,parmtr,3,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,72,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,72,<null>>,E,E>;
<org.apache.commons.cli.Options:getOptionGroup,local1,3,<>> = <<java.util.Map:get,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:getOptionGroup,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:normal,parmtr,3,<>> = <<org.sunflow.math.Point3:normal,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.FileDigest:replaceAllFixed,local1,35,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,90,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,90,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,380,<>> = <<org.dacapo.harness.TestHarness:main,local1,380,<null>>,D,D>;
<org.sunflow.core.ShadingState:getCosND,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getCosND,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$ParameterType:init,argmnt,1,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,114,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addTexCoords,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addTexCoords,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,26,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,26,<null>>,E,E>;
<org.dacapo.parser.Config:hasLines,local1,7,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getPoint,retrn,3,<>> = <<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,retrn,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,706,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setKeep,parmtr,1,<>> = <<org.dacapo.parser.Config:setKeep,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,local1,58,<>> = <<org.dacapo.parser.ConfigFile:outputFile,local1,58,<null>>,D,D>;
<org.dacapo.harness.Sunflow:iterate,local1,3,<>> = <<java.lang.reflect.Method:invoke,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Sunflow:iterate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,100,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,parmtr,1,<>> = <<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Options:addOptionGroup,local1,65,<>> = <<org.apache.commons.cli.Options:addOptionGroup,local1,65,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,22,<>> = <<org.dacapo.harness.Callback:init,local1,22,<null>>,E,E>;
<org.sunflow.Benchmark:imageUpdate,parmtr,6,<>> = <<org.sunflow.Benchmark:imageUpdate,argmnt,6,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,153,<>> = <<org.sunflow.SunflowAPI:create,local1,153,<null>>,E,E>;
<org.sunflow.core.Instance:hasGeometry,parmtr,2,<>> = <<org.sunflow.core.Instance:hasGeometry,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteTree,local1,66,<>> = <<org.dacapo.harness.Benchmark:deleteTree,local1,66,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,237,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getArgs,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getArgs,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,21,<>> = <<org.dacapo.harness.Benchmark:preIteration,local1,21,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:UpdateLineColumn,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:UpdateLineColumn,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetImage,local1,18,<>> = <<org.dacapo.parser.SimpleCharStream:GetImage,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,872,<>> = <<org.sunflow.core.accel.KDTree:build,local1,872,<null>>,D,D>;
<org.dacapo.parser.Token:getValue,parmtr,1,<>> = <<org.dacapo.parser.Token:getValue,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,139,<>> = <<java.lang.reflect.Constructor:newInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,local1,24,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3300,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3300,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,local1,14,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.util.IntArray:init,local1,9,<>> = <<org.sunflow.util.IntArray:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,87,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,retrn,13,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,retrn,13,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,36,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,166,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,202,<>> = <<java.io.FileInputStream:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAddStates,local1,3,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAddStates,local1,3,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,184,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:threadModel,local1,61,<>> = <<org.dacapo.parser.ConfigFile:threadModel,local1,61,<null>>,E,E>;
<org.sunflow.RenderObjectMap:remove,local1,332,<>> = <<org.sunflow.core.Instance:hasGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,991,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,108,<>> = <<org.sunflow.system.UI$Module:clinit,local1,108,<null>>,E,E>;
<org.dacapo.harness.FileDigest:getText,parmtr,4,<>> = <<org.dacapo.harness.FileDigest:getText,argmnt,4,<null>>,D,D>;<<java.io.File:getAbsolutePath,argmnt,1,<null>>,D,D>;<<java.io.File:getPath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,114,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,114,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,46,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,44,<>> = <<java.util.jar.JarFile:entries,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPoint,local1,19,<>> = <<org.sunflow.core.ParameterList:getPoint,local1,19,<null>>,E,E>;
<org.sunflow.core.ParameterList:isValidParameter,local1,37,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,37,<null>>,D,D>;
<org.sunflow.core.ParameterList:addStringArray,local1,6,<>> = <<org.sunflow.core.ParameterList:addStringArray,local1,6,<null>>,E,E>;
<org.dacapo.parser.Config:describe,parmtr,3,<>> = <<org.dacapo.parser.Config:describe,argmnt,3,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromW,local1,172,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,355,<>> = <<org.sunflow.RenderObjectMap:remove,local1,355,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,3,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,377,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:toString,local1,24,<>> = <<org.sunflow.math.Point3:toString,local1,24,<null>>,D,D>;
<org.sunflow.core.ShadingState:correctShadingNormal,local1,3,<>> = <<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:correctShadingNormal,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:multiply,retrn,656,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:multiply,retrn,656,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,31,<>> = <<org.sunflow.core.Instance:update,local1,31,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceDiffusePhoton,local1,15,<>> = <<org.sunflow.core.ShadingState:traceDiffusePhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceDiffusePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,425,<>> = <<org.sunflow.core.LightServer:build,local1,425,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getString,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,143,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,143,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,parmtr,2,<>> = <<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.DiffuseShader:scatterPhoton,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:storePhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getGeoNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getBasis,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceDiffusePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,780,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,780,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,29,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,29,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:init,parmtr,2,<>> = <<org.dacapo.parser.TokenMgrError:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,9,<>> = <<org.sunflow.core.Instance:update,local1,9,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,344,<>> = <<org.dacapo.harness.Benchmark:validate,local1,344,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getBoolValue,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getBoolValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,185,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,185,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:init,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatArray,retrn,18,<>> = <<org.sunflow.core.ParameterList:getFloatArray,retrn,18,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,local1,69,<>> = <<org.sunflow.core.LightServer:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,92,<>> = <<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:camera,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:getNumPrimitives,local1,3,<>> = <<org.sunflow.core.InstanceList:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,54,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:mkdir,argmnt,1,<null>>,D,D>;<<java.io.File:exists,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjCanMove_0,local1,41,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCanMove_0,local1,41,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,985,<>> = <<org.sunflow.core.accel.KDTree:build,local1,985,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,73,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,73,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,487,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,487,<null>>,E,E>;
<org.apache.commons.cli.MissingArgumentException:init,parmtr,1,<>> = <<org.apache.commons.cli.MissingArgumentException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.ParseException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:init,parmtr,1,<>> = <<org.sunflow.Benchmark$BenchmarkScene:init,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark$BenchmarkScene:build,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:init,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:render,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1185,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1185,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,75,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,75,<null>>,D,D>;
<org.dacapo.parser.Config$1:clinit,local1,29,<>> = <<org.dacapo.parser.Config$1:clinit,local1,29,<null>>,E,E>;
<org.dacapo.parser.Config:getSize,local1,34,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,retrn,258,<>> = <<org.apache.commons.cli.PosixParser:flatten,retrn,258,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,62,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:kernelEnd,local1,164,<>> = <<org.sunflow.Benchmark:kernelEnd,local1,164,<null>>,E,E>;
<org.sunflow.Benchmark:print,parmtr,3,<>> = <<org.sunflow.Benchmark:print,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:gobble,parmtr,1,<>> = <<org.apache.commons.cli.PosixParser:gobble,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$200,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$200,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,20,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,45,<>> = <<java.lang.reflect.Constructor:newInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,88,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,88,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,42,<>> = <<org.sunflow.core.accel.KDTree:build,local1,42,<null>>,D,D>;
<org.sunflow.core.Camera:getCameraToWorld,parmtr,1,<>> = <<org.sunflow.core.Camera:getCameraToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,102,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,102,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getInformation,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getInformation,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,28,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransformY,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformY,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,243,<>> = <<org.dacapo.harness.TestHarness:main,local1,243,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:remove,local1,2,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:remove,local1,2,<null>>,E,E>;
<org.sunflow.RenderObjectMap:put,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:setBytes,parmtr,3,<>> = <<org.dacapo.parser.Config:setBytes,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,94,<>> = <<org.sunflow.core.LightServer:showStats,local1,94,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,parmtr,1,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:camera,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:options,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark$BenchmarkScene:sphere,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:shader,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:instance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:threadModel,local1,104,<>> = <<org.dacapo.parser.ConfigFile:threadModel,local1,104,<null>>,E,E>;
<org.sunflow.SunflowAPI:light,local1,17,<>> = <<org.sunflow.SunflowAPI:light,local1,17,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:dot,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:stopIteration,local1,30,<>> = <<org.dacapo.harness.Benchmark:stopIteration,local1,30,<null>>,E,E>;
<org.sunflow.core.Ray:getPoint,parmtr,1,<>> = <<org.sunflow.core.Ray:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPoint,local1,18,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,456,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,456,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,93,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,518,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,518,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,53,<>> = <<org.sunflow.SunflowAPI:geometry,local1,53,<null>>,D,D>;
<org.dacapo.parser.Config:getArgs,local1,4,<>> = <<org.dacapo.parser.Config:getArgs,local1,4,<null>>,D,D>;
<org.sunflow.image.Color:blend,parmtr,3,<>> = <<org.sunflow.image.Color:blend,argmnt,3,<null>>,D,D>;
<org.sunflow.system.Timer:toString,local1,130,<>> = <<org.sunflow.system.Timer:toString,local1,130,<null>>,D,D>;
<org.sunflow.core.LightServer:traceDiffusePhoton,local1,21,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceDiffusePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getPoint,local1,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,473,<>> = <<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,108,<>> = <<org.sunflow.core.accel.KDTree:build,local1,108,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupInstance,parmtr,2,<>> = <<org.sunflow.SunflowAPI:lookupInstance,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,243,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,retrn,55,<>> = <<org.sunflow.core.LightServer:traceRefraction,retrn,55,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,291,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,291,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,6,<>> = <<org.dacapo.harness.TestHarness:dump,local1,6,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,190,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:identifier,retrn,13,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:identifier,retrn,13,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:identifier,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,parmtr,3,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,argmnt,3,<null>>,D,D>;
<org.sunflow.system.Memory:bytesToString,local1,13,<>> = <<org.sunflow.system.Memory:bytesToString,local1,13,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,317,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,317,<null>>,E,E>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,41,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,41,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,175,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,175,<null>>,D,D>;
<org.sunflow.image.Color:setRGBE,local1,2,<>> = <<org.sunflow.image.Color:setRGBE,local1,2,<null>>,E,E>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,2,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.Options:update,local1,36,<>> = <<org.sunflow.core.Options:update,local1,36,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,182,<>> = <<org.sunflow.core.Scene:render,local1,182,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,164,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,164,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getVector,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getVector,argmnt,1,<null>>,D,D>;
<org.sunflow.core.IntersectionState:init,local1,10,<>> = <<org.sunflow.core.IntersectionState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:update,parmtr,3,<>> = <<org.sunflow.core.Geometry:update,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Options:toString,local1,2,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:faceforward,local1,70,<>> = <<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,20,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,20,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,parmtr,2,<>> = <<org.sunflow.system.SearchPath:addSearchPath,argmnt,2,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:print,local1,8,<>> = <<org.sunflow.system.ui.ConsoleInterface:print,local1,8,<null>>,D,D>;
<org.sunflow.core.Instance:getModifier,parmtr,1,<>> = <<org.sunflow.core.Instance:getModifier,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,2,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:mkdir,argmnt,1,<null>>,D,D>;<<java.io.File:exists,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,263,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:parse,parmtr,2,<>> = <<org.dacapo.parser.Config:parse,argmnt,2,<null>>,D,D>;<<java.net.URL:openStream,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,21,<>> = <<org.dacapo.harness.Sunflow:preIteration,argmnt,1,<null>>,D,D>;<<java.lang.reflect.Constructor:newInstance,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2900,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2900,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,453,<>> = <<org.dacapo.harness.Benchmark:validate,local1,453,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,990,<>> = <<org.sunflow.core.accel.KDTree:build,local1,990,<null>>,E,E>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,6,<>> = <<java.util.concurrent.PriorityBlockingQueue:poll,argmnt,1,<null>>,D,D>;<<java.util.concurrent.PriorityBlockingQueue:isEmpty,argmnt,1,<null>>,D,D>;<<java.util.concurrent.PriorityBlockingQueue:put,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:FillBuff,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:FillBuff,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:backup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,10,<>> = <<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,10,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,61,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,67,<>> = <<org.sunflow.core.Instance:updateBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,258,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,258,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:init,local1,9,<>> = <<org.apache.commons.cli.Option:init,local1,9,<null>>,D,D>;
<org.sunflow.system.Timer:toString,retrn,21,<>> = <<org.sunflow.system.Timer:toString,retrn,21,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,29,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,139,<>> = <<org.sunflow.core.Scene:traceBake,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPoint,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getPoint,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionObject,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:setDumpMode,parmtr,3,<>> = <<org.sunflow.core.accel.KDTree:setDumpMode,argmnt,3,<null>>,E,E>;
<org.sunflow.system.ui.ConsoleInterface:taskStop,parmtr,1,<>> = <<org.sunflow.system.ui.ConsoleInterface:taskStop,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,189,<>> = <<org.sunflow.Benchmark:init,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark:kernelEnd,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark:kernelBegin,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark:kernelMain,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:remove,local1,62,<>> = <<org.sunflow.util.FastHashMap:remove,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,276,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,276,<null>>,E,E>;
<org.sunflow.math.Matrix4:rotateY,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:rotateY,retrn,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,local1,65,<>> = <<org.sunflow.core.ShadingState:diffuse,local1,65,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceDiffusePhoton,local1,3,<>> = <<org.sunflow.core.PhotonStore:allowDiffuseBounced,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceDiffusePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloat,local1,7,<>> = <<org.sunflow.core.ParameterList:getFloat,local1,7,<null>>,D,D>;
<org.sunflow.system.UI:printDetailed,parmtr,3,<>> = <<org.sunflow.system.UI:printDetailed,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,180,<>> = <<org.dacapo.harness.TestHarness:main,local1,180,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,410,<>> = <<org.sunflow.core.LightServer:build,local1,410,<null>>,E,E>;
<org.dacapo.parser.Config:print,local1,314,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:getOptions,retrn,3,<>> = <<org.apache.commons.cli.Parser:getOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getOptions,retrn,3,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1093,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1093,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,69,<>> = <<java.util.List:get,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,150,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,2,<>> = <<org.dacapo.parser.Config:describe,argmnt,2,<null>>,D,D>;<<java.io.PrintStream:println,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,41,<>> = <<org.sunflow.image.Color:clinit,local1,41,<null>>,E,E>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,1,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,1,<null>>,D,D>;<<java.net.URLClassLoader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.util.IntArray:init,local1,8,<>> = <<org.sunflow.util.IntArray:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,137,<>> = <<org.sunflow.math.QMC:clinit,local1,137,<null>>,D,D>;
<org.dacapo.parser.Config:checkExists,local1,10,<>> = <<org.dacapo.parser.Config:checkExists,local1,10,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,133,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,133,<null>>,E,E>;
<org.sunflow.core.Ray:init,parmtr,1,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:toString,retrn,38,<>> = <<org.sunflow.math.Vector3:toString,retrn,38,<null>>,D,D>;
<org.dacapo.parser.Config$1:clinit,local1,11,<>> = <<org.dacapo.parser.Config$1:clinit,local1,11,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,95,<>> = <<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.photonmap.CausticPhotonMap:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromWV,local1,25,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,785,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,retrn,73,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,retrn,73,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,7604,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,7604,<null>>,E,E>;
<org.dacapo.harness.TeePrintStream:init,parmtr,2,<>> = <<org.dacapo.harness.TeePrintStream:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getTrianglePoints,local1,3,<>> = <<org.sunflow.core.ShadingState:getTrianglePoints,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,147,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptionGroup,parmtr,2,<>> = <<org.apache.commons.cli.Options:getOptionGroup,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:init,parmtr,3,<>> = <<org.dacapo.harness.Benchmark:init,argmnt,3,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getInt,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromWV,retrn,2,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:makeFromWV,retrn,2,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,260,<>> = <<org.dacapo.parser.ParseException:add_escapes,local1,260,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloat,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addFloat,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetImage,retrn,13,<>> = <<java.lang.String:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:GetImage,retrn,13,<null>>,D,D>;
<org.sunflow.SunflowAPI:remove,parmtr,1,<>> = <<org.sunflow.SunflowAPI:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:rgbToLinear,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:rgbToLinear,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setExists,parmtr,3,<>> = <<org.dacapo.parser.Config:setExists,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,14,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,14,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,parmtr,4,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,4,<null>>,D,D>;<<org.sunflow.util.IntArray:add,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:set,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,81,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getLongOpt,parmtr,1,<>> = <<org.apache.commons.cli.Option:getLongOpt,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:setType,parmtr,2,<>> = <<org.apache.commons.cli.Option:setType,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:setType,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:isValidSize,local1,7,<>> = <<org.dacapo.parser.Config:getSizes,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:isValidSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,65,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,65,<null>>,D,D>;
<org.sunflow.image.Color:sub,parmtr,3,<>> = <<org.sunflow.image.Color:sub,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,58,<>> = <<org.dacapo.parser.Config:describe,local1,58,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadFactor,local1,73,<>> = <<org.dacapo.parser.Config$Size:setThreadLimit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,484,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,484,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,39,<>> = <<org.dacapo.harness.Sunflow:init,local1,39,<null>>,D,D>;
<org.dacapo.harness.Sunflow:validate,local1,52,<>> = <<org.dacapo.harness.Sunflow:validate,local1,52,<null>>,D,D>;
<org.dacapo.parser.Config$Size:getOutputFile,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,247,<>> = <<org.sunflow.system.UI$Module:clinit,local1,247,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,72,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,72,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,384,<>> = <<org.sunflow.core.ShadingState:specularPhong,local1,384,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:unHex,retrn,10,<>> = <<org.dacapo.parser.ConfigFile:unHex,retrn,10,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromWV,local1,12,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:enlargeUlps,local1,87,<>> = <<org.sunflow.math.BoundingBox:enlargeUlps,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:addValueForProcessing,parmtr,1,<>> = <<org.apache.commons.cli.Option:addValueForProcessing,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:processValue,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shaderOverride,parmtr,1,<>> = <<org.sunflow.SunflowAPI:shaderOverride,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupShader,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,47,<>> = <<org.sunflow.SunflowAPI:compile,local1,47,<null>>,E,E>;
<org.sunflow.core.LightSample:isValid,local1,10,<>> = <<org.sunflow.core.LightSample:isValid,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:init,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getBounds,retrn,7,<>> = <<org.sunflow.core.Scene:getBounds,retrn,7,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,46,<>> = <<org.sunflow.core.ShadingState:specularPhong,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,166,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,166,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:access$000,parmtr,2,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:access$000,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,56,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,56,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI$PointLightStore:init,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:div,retrn,1,<>> = <<org.sunflow.math.Vector3:div,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:div,retrn,1,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,130,<>> = <<org.sunflow.image.Color:clinit,local1,130,<null>>,E,E>;
<org.sunflow.Benchmark:print,local1,17,<>> = <<org.sunflow.Benchmark:print,local1,17,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:access$200,parmtr,3,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:access$200,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:digestOption,local1,131,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:digestOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:init,local1,7,<>> = <<org.apache.commons.cli.CommandLine:init,argmnt,1,<null>>,D,D>;<<java.util.LinkedList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,local1,34,<>> = <<org.sunflow.SunflowAPI:shader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,211,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,22,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:setShader,parmtr,2,<>> = <<org.sunflow.core.ShadingState:setShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setShader,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,6,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,6,<null>>,E,E>;
<org.dacapo.harness.TeeOutputStream:enableOutput,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:enableOutput,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,145,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,145,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupCamera,local1,9,<>> = <<org.sunflow.RenderObjectMap:lookupCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,143,<>> = <<org.sunflow.Benchmark:init,local1,143,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,local1,68,<>> = <<org.sunflow.SunflowAPI:shader,local1,68,<null>>,E,E>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,local1,7,<>> = <<org.sunflow.util.FastHashMap:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:clear,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2100,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2100,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2100,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,229,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:values,local1,2,<>> = <<org.sunflow.system.UI$PrintLevel:values,local1,2,<null>>,E,E>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,36,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,36,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:access$1500,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1500,retrn,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:unQuote,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:unQuote,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Parser:init,parmtr,1,<>> = <<org.apache.commons.cli.Parser:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:stopIteration,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:stopIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:revertClassLoader,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,239,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceShadow,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceShadow,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,222,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,222,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,53,<>> = <<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describeSizes,argmnt,1,<null>>,D,D>;<<java.util.HashMap:get,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:pad,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$2000,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$2000,retrn,3,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:access$2000,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,192,<>> = <<org.dacapo.harness.FileDigest:main,local1,192,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromWV,local1,44,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:rotate,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:rotate,retrn,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,retrn,777,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.RenderObject:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:tesselate,retrn,777,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,150,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,150,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,local1,11,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:options,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,203,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:getRadiance,parmtr,2,<>> = <<org.sunflow.core.ShadingState:includeLights,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:getRadiance,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:isBehind,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,61,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,61,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addBoolean,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:preIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:postIterationCleanup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,154,<>> = <<org.dacapo.harness.TestHarness:main,local1,154,<null>>,D,D>;
<Harness:makeHarnessClassLoader,retrn,14,<>> = <<Harness:makeHarnessClassLoader,retrn,14,<null>>,D,D>;<<Harness:makeHarnessClassLoader,retrn,14,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:createMessage,parmtr,2,<>> = <<org.apache.commons.cli.MissingOptionException:createMessage,argmnt,2,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;<<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,124,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:access$300,retrn,3,<>> = <<org.sunflow.core.primitive.TriangleMesh:access$300,argmnt,2,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:access$300,retrn,3,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,199,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,129,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,129,<null>>,E,E>;
<org.dacapo.harness.Digest:init,parmtr,1,<>> = <<org.dacapo.harness.Digest:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,70,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,70,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,536,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,536,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,34,<>> = <<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,566,<>> = <<org.sunflow.core.Shader:getRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,42,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,42,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPoint,retrn,3,<>> = <<org.sunflow.core.ParameterList:getPoint,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList:getPoint,retrn,3,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,325,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:getBuildNickName,local1,2,<>> = <<org.dacapo.harness.TestHarness:getBuildNickName,local1,2,<null>>,E,E>;
<org.dacapo.parser.Config$Size:setDesc,parmtr,2,<>> = <<org.dacapo.parser.Config$Size:setDesc,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config$Size:setDesc,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:shadingCache,local1,12,<>> = <<org.sunflow.core.LightServer:shadingCache,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,1,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,1,<null>>,E,E>;
<org.sunflow.system.UI:printWarning,parmtr,4,<>> = <<org.sunflow.system.UI:printWarning,argmnt,4,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,294,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,294,<null>>,E,E>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,parmtr,1,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:remove,local1,47,<>> = <<org.sunflow.util.FastHashMap:remove,local1,47,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,105,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,local1,10,<>> = <<java.lang.Thread:getContextClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,parmtr,1,<>> = <<org.sunflow.Benchmark$BenchmarkScene:sphere,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:instance,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformP,parmtr,2,<>> = <<org.sunflow.math.Matrix4:transformP,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:getToken,retrn,34,<>> = <<org.dacapo.parser.ConfigFile:getToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getToken,retrn,34,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,67,<>> = <<org.sunflow.image.Color:clinit,local1,67,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,1037,<>> = <<org.sunflow.core.LightSample:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:traceShadow,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:setRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:setShadowRay,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,local1,70,<>> = <<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,local1,70,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,19,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,285,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,285,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,477,<>> = <<org.sunflow.core.accel.KDTree:build,local1,477,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getCallback,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2700,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2700,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,parmtr,1,<>> = <<org.dacapo.parser.Config:printThreadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadLimit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadCount,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,233,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,4,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadFactor,parmtr,2,<>> = <<org.dacapo.parser.Config:setThreadFactor,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,parmtr,2,<>> = <<org.dacapo.harness.Sunflow:preIteration,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:findClass,local1,6,<>> = <<org.dacapo.harness.TestHarness:findClass,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,210,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,210,<null>>,D,D>;
<org.sunflow.core.InstanceList:getNumPrimitives,parmtr,1,<>> = <<org.sunflow.core.InstanceList:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:modifier,local1,23,<>> = <<org.sunflow.SunflowAPI:modifier,local1,23,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:clinit,local1,15,<>> = <<org.dacapo.harness.Callback$Mode:clinit,local1,15,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,348,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,348,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,local1,6,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,local1,6,<null>>,E,E>;
<org.apache.commons.cli.Options:addOption,parmtr,2,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:next,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:inc,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:next,callback,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,52,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,557,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,557,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileInScratch,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:fileInScratch,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,235,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:clinit,local1,40,<>> = <<org.dacapo.harness.Callback$Mode:clinit,local1,40,<null>>,E,E>;
<org.sunflow.core.LightServer:shadePhoton,parmtr,1,<>> = <<org.sunflow.core.LightServer:shadePhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getPhotonShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:intersectPrimitive,local1,7,<>> = <<org.sunflow.core.InstanceList:intersectPrimitive,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:intersect,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:addValue,local1,2,<>> = <<org.apache.commons.cli.Option:addValue,local1,2,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:getToken,retrn,6,<>> = <<org.dacapo.parser.ConfigFile:getToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getToken,retrn,6,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,parmtr,2,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Option:getLongOpt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasLongOpt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:isRequired,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,local1,99,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,5,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describe,argmnt,5,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,292,<>> = <<org.dacapo.parser.Config$OutputFile:hasDigest,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,57,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPointArray,retrn,18,<>> = <<org.sunflow.core.ParameterList:getPointArray,retrn,18,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,retrn,36,<>> = <<org.sunflow.SunflowAPI:compile,retrn,36,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa8_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa8_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa9_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:next,local1,12,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:next,callback,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVector,local1,19,<>> = <<org.sunflow.core.ParameterList:getVector,local1,19,<null>>,E,E>;
<org.sunflow.core.ShadingState$LightSampleIterator:hasNext,local1,3,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:hasNext,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:hasNext,callback,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:radix12,local1,9,<>> = <<org.sunflow.core.accel.KDTree:radix12,local1,9,<null>>,D,D>;
<org.sunflow.core.Scene:getCamera,retrn,3,<>> = <<org.sunflow.core.Scene:getCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getCamera,retrn,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,parmtr,1,<>> = <<org.sunflow.core.ShadingState:occlusion,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:occlusion,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,parmtr,2,<>> = <<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ParseException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Geometry:init,parmtr,2,<>> = <<org.sunflow.core.Geometry:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:createFinalGatherState,parmtr,3,<>> = <<org.sunflow.core.ShadingState:createFinalGatherState,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Options:update,local1,3,<>> = <<org.sunflow.util.FastHashMap:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Options:update,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,210,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,217,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,151,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,151,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapVW,local1,9,<>> = <<org.sunflow.math.OrthoNormalBasis:swapVW,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:swapVW,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,785,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,785,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatArray,local1,12,<>> = <<org.sunflow.core.ParameterList:getFloatArray,local1,12,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertXYZtoRGB,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:convertXYZtoRGB,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,821,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,72,<>> = <<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,local1,346,<>> = <<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,387,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,387,<null>>,E,E>;
<org.sunflow.core.ShadingState:traceRefraction,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceRefraction,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,local1,29,<>> = <<java.lang.String:replace,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.image.RGBSpace:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,671,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,671,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,50,<>> = <<org.sunflow.system.ui.ConsoleInterface:taskUpdate,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:enlargeUlps,local1,6,<>> = <<org.sunflow.math.BoundingBox:enlargeUlps,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,264,<>> = <<org.sunflow.RenderObjectMap:remove,local1,264,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,local1,13,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getGlobalRadiance,retrn,18,<>> = <<org.sunflow.core.LightServer:getGlobalRadiance,retrn,18,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,6,<>> = <<org.dacapo.harness.TestHarness:rmdir,local1,6,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,parmtr,2,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.NullAccelerator:build,parmtr,1,<>> = <<org.sunflow.core.accel.NullAccelerator:build,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptionGroup,parmtr,1,<>> = <<org.apache.commons.cli.Options:getOptionGroup,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasDigest,local1,8,<>> = <<org.dacapo.parser.Config$OutputFile:hasDigest,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,parmtr,2,<>> = <<org.dacapo.parser.Config:addOutputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:outputFile,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,local1,66,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,parmtr,2,<>> = <<org.codehaus.janino.util.CausedException:initCause,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:initCause,argmnt,2,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:initCause,callback,2,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,142,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,45,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,502,<>> = <<org.sunflow.core.LightServer:build,local1,502,<null>>,E,E>;
<org.sunflow.core.ParameterList:isValidParameter,parmtr,3,<>> = <<org.sunflow.core.ParameterList:isValidParameter,argmnt,3,<null>>,D,D>;<<java.lang.Enum:name,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:replaceAllFixed,local1,59,<>> = <<org.dacapo.harness.FileDigest:replaceAllFixed,local1,59,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:UpdateLineColumn,local1,171,<>> = <<org.dacapo.parser.SimpleCharStream:UpdateLineColumn,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:init,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,37,<>> = <<org.dacapo.harness.Benchmark:preIteration,local1,37,<null>>,E,E>;
<org.dacapo.parser.Config:getSize,local1,18,<>> = <<org.dacapo.parser.Config:getSize,local1,18,<null>>,E,E>;
<org.sunflow.system.UI$Module:clinit,local1,292,<>> = <<org.sunflow.system.UI$Module:clinit,local1,292,<null>>,E,E>;
<org.dacapo.parser.Config:getSize,local1,49,<>> = <<org.dacapo.parser.Config:getSize,local1,49,<null>>,D,D>;
<org.sunflow.core.camera.PinholeLens:update,parmtr,2,<>> = <<org.sunflow.core.camera.PinholeLens:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloat,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,214,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,214,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,344,<>> = <<org.sunflow.math.QMC:clinit,local1,344,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,21,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,21,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,parmtr,1,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,local1,24,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,139,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,3,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:isNan,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:isInf,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,63,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,63,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,153,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,153,<null>>,E,E>;
<org.apache.commons.cli.Options:addOption,local1,6,<>> = <<org.apache.commons.cli.Options:addOption,local1,6,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,533,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflectionPhoton,parmtr,1,<>> = <<org.sunflow.core.LightServer:traceReflectionPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,2,<>> = <<org.sunflow.math.QMC:clinit,local1,2,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,818,<>> = <<org.dacapo.harness.Benchmark:validate,local1,818,<null>>,E,E>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,110,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,110,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,74,<>> = <<java.lang.String:endsWith,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,77,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,77,<null>>,E,E>;
<org.dacapo.harness.Benchmark:deleteTree,local1,8,<>> = <<org.dacapo.harness.Benchmark:deleteTree,local1,8,<null>>,E,E>;
<org.dacapo.harness.Benchmark:postIterationCleanup,local1,26,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:update,parmtr,1,<>> = <<org.sunflow.core.shader.MirrorShader:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:next,retrn,3,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:next,retrn,3,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,26,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.UnrecognizedOptionException:init,parmtr,2,<>> = <<org.apache.commons.cli.UnrecognizedOptionException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,298,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getWindow,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getWindow,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,415,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,415,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$4100,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$4100,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:access$000,parmtr,2,<>> = <<org.sunflow.core.LightServer:access$000,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,231,<>> = <<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$100,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$100,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,110,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,110,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,604,<>> = <<org.sunflow.core.accel.KDTree:build,local1,604,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,2,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,2,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,249,<>> = <<org.sunflow.Benchmark:init,local1,249,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:flatten,parmtr,1,<>> = <<org.apache.commons.cli.PosixParser:flatten,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:gobble,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:burstToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processOptionToken,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:replaceAllFixed,parmtr,3,<>> = <<org.dacapo.harness.FileDigest:replaceAllFixed,argmnt,3,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,93,<>> = <<java.lang.String:replace,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,local1,43,<>> = <<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,local1,36,<>> = <<org.codehaus.janino.util.CausedException:initCause,local1,36,<null>>,E,E>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,100,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,100,<null>>,D,D>;
<org.dacapo.parser.Config:addDesc,local1,3,<>> = <<org.dacapo.parser.Config:addDesc,argmnt,1,<null>>,D,D>;<<java.util.HashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,351,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,351,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:makeOption,parmtr,4,<>> = <<org.dacapo.harness.CommandLineArgs:makeOption,argmnt,4,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,408,<>> = <<org.dacapo.harness.TestHarness:main,local1,408,<null>>,E,E>;
<org.dacapo.parser.TokenMgrError:LexicalError,retrn,108,<>> = <<org.dacapo.parser.TokenMgrError:LexicalError,retrn,108,<null>>,D,D>;
<org.sunflow.system.Timer:toString,local1,119,<>> = <<org.sunflow.system.Timer:toString,local1,119,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,parmtr,2,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,parmtr,3,<>> = <<org.dacapo.parser.Config:printThreadModel,argmnt,3,<null>>,D,D>;
<org.sunflow.math.Vector3:decode,retrn,10,<>> = <<org.sunflow.math.Vector3:decode,retrn,10,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,59,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:validate,local1,19,<>> = <<org.dacapo.harness.Sunflow:validate,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,39,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,39,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,129,<>> = <<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,parmtr,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,argmnt,3,<null>>,D,D>;<<org.sunflow.SunflowAPI:light,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:shader,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:instance,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,40,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getCameraToWorld,local1,24,<>> = <<org.sunflow.core.ShadingState:getCameraToWorld,local1,24,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:size,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,7,<>> = <<org.sunflow.RenderObjectMap:remove,local1,7,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,parmtr,2,<>> = <<org.sunflow.SunflowAPI:camera,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,756,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,756,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:init,parmtr,2,<>> = <<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,local1,18,<>> = <<java.io.InputStreamReader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,1153,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,1153,<null>>,D,D>;
<org.apache.commons.cli.Parser:checkRequiredOptions,local1,19,<>> = <<org.apache.commons.cli.Parser:checkRequiredOptions,local1,19,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$1600,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$1600,argmnt,2,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,local1,58,<>> = <<org.codehaus.janino.util.CausedException:initCause,local1,58,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:access$1500,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1500,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getColor,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,427,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,local1,48,<>> = <<org.dacapo.harness.Benchmark:run,local1,48,<null>>,E,E>;
<org.sunflow.core.ShadingState:createDiffuseBounceState,local1,8,<>> = <<org.sunflow.core.ShadingState:createDiffuseBounceState,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,168,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,168,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,207,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getColor,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getColor,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:set,parmtr,2,<>> = <<org.sunflow.system.UI:set,argmnt,2,<null>>,E,E>;
<org.sunflow.core.Geometry:tesselate,parmtr,1,<>> = <<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,136,<>> = <<org.sunflow.system.UI$Module:clinit,local1,136,<null>>,E,E>;
<org.dacapo.harness.Benchmark:augmentSystemProperties,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:augmentSystemProperties,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createPhotonState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:createPhotonState,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,parmtr,2,<>> = <<org.sunflow.core.ShadingState:includeSpecular,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.MirrorShader:getRadiance,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getCosND,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceReflection,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:normal,retrn,104,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:normal,retrn,104,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,226,<>> = <<org.sunflow.core.LightServer:showStats,local1,226,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:imageUpdate,local1,55,<>> = <<org.sunflow.Benchmark:imageUpdate,local1,55,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,817,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,817,<null>>,D,D>;
<org.sunflow.core.ParameterList:getStringArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getStringArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,local1,107,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,719,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,719,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,292,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:get,local1,47,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createDiffuseBounceState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:createDiffuseBounceState,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,103,<>> = <<org.apache.commons.cli.OptionGroup:setSelected,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.OptionGroup:isRequired,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,771,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,771,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,775,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,286,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,286,<null>>,D,D>;
<org.sunflow.SunflowAPI:addTextureSearchPath,parmtr,1,<>> = <<org.sunflow.SunflowAPI:addTextureSearchPath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,3,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,local1,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,8,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,8,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,124,<>> = <<org.dacapo.parser.Config:describeSizes,local1,124,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,17,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,17,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,288,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,288,<null>>,E,E>;
<org.apache.commons.cli.Parser:processOption,parmtr,1,<>> = <<org.apache.commons.cli.Parser:processOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getRequiredOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:processArgs,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,168,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,local1,3,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,28,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,28,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:printStackTrace,parmtr,1,<>> = <<org.codehaus.janino.util.CausedException:printStackTrace,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:printStackTrace,callback,1,<null>>,D,D>;<<java.lang.Throwable:printStackTrace,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getBoolean,local1,16,<>> = <<org.sunflow.core.ParameterList:getBoolean,local1,16,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:access$400,retrn,3,<>> = <<org.sunflow.core.primitive.TriangleMesh:access$400,argmnt,2,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:access$400,retrn,3,<null>>,D,D>;
<org.codehaus.janino.Scanner$ScanException:init,parmtr,1,<>> = <<org.codehaus.janino.Scanner$ScanException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,147,<>> = <<org.sunflow.core.Scene:getRadiance,local1,147,<null>>,D,D>;
<org.dacapo.harness.Digest:toString,retrn,61,<>> = <<org.dacapo.harness.Digest:toString,retrn,61,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,71,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,71,<null>>,E,E>;
<org.sunflow.image.Color:toString,local1,5,<>> = <<org.sunflow.image.Color:toString,local1,5,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,171,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,98,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,45,<>> = <<org.apache.commons.cli.Option:clone,local1,45,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,240,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,240,<null>>,E,E>;
<org.sunflow.core.Ray:transform,parmtr,2,<>> = <<org.sunflow.math.Matrix4:transformVZ,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformPZ,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformPY,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:transform,argmnt,2,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformVY,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformPX,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformVX,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,162,<>> = <<org.dacapo.parser.Config:describe,local1,162,<null>>,E,E>;
<org.codehaus.janino.util.CausedException:init,parmtr,2,<>> = <<org.codehaus.janino.util.CausedException:init,argmnt,2,<null>>,D,D>;<<java.lang.Throwable:getMessage,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,62,<>> = <<org.sunflow.core.Geometry:tesselate,local1,62,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$000,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$000,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,222,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,222,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:setFilterScratch,parmtr,2,<>> = <<org.dacapo.parser.Config:setFilterScratch,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,retrn,494,<>> = <<org.dacapo.parser.ParseException:initialise,retrn,494,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,263,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,retrn,2,<>> = <<java.util.Properties:init,argmnt,1,<null>>,D,D>;<<java.util.Properties:put,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionProperties,retrn,2,<null>>,D,D>;
<org.dacapo.parser.Config$Size:getThreadLimit,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:getThreadLimit,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:findClass,local1,1,<>> = <<org.dacapo.harness.TestHarness:findClass,local1,1,<null>>,E,E>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addIntegerArray,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:toString,local1,34,<>> = <<org.sunflow.math.Vector3:toString,local1,34,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:threadModel,local1,88,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:threadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,30,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,parmtr,3,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,3,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$Sample:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:print,local1,36,<>> = <<org.sunflow.Benchmark:print,local1,36,<null>>,E,E>;
<org.dacapo.parser.Config:setExists,parmtr,1,<>> = <<org.dacapo.parser.Config:setExists,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,409,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,409,<null>>,E,E>;
<org.sunflow.RenderObjectMap:update,parmtr,4,<>> = <<org.sunflow.RenderObjectMap:update,argmnt,4,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,4,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,4,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1900,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1900,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,73,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,73,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupShader,retrn,7,<>> = <<org.sunflow.SunflowAPI:lookupShader,retrn,7,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,149,<>> = <<org.sunflow.core.Camera:update,local1,149,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVectorArray,local1,8,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getVectorArray,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupGeometry,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:lookupGeometry,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getValue,parmtr,1,<>> = <<org.apache.commons.cli.Option:getValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasNoValues,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:setRadiance,local1,12,<>> = <<org.sunflow.core.LightSample:setRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,405,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,405,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa11_0,local1,22,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa11_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:init,parmtr,2,<>> = <<org.sunflow.system.SearchPath:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:init,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,206,<>> = <<org.sunflow.system.UI$Module:clinit,local1,206,<null>>,E,E>;
<org.dacapo.parser.Config:setJars,parmtr,1,<>> = <<org.dacapo.parser.Config:setJars,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,235,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,235,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,250,<>> = <<org.sunflow.core.LightSource:getPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,77,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,77,<null>>,D,D>;
<org.dacapo.parser.Config$1:clinit,local1,26,<>> = <<org.dacapo.parser.Config$1:clinit,local1,26,<null>>,E,E>;
<org.sunflow.core.ShadingState:traceReflectionPhoton,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceReflectionPhoton,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,794,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,794,<null>>,E,E>;
<org.codehaus.janino.CompileException:init,parmtr,3,<>> = <<org.codehaus.janino.CompileException:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$200,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$200,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$200,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getU,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getU,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:version,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:version,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,146,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,146,<null>>,E,E>;
<org.sunflow.core.ParameterList:init,local1,7,<>> = <<org.sunflow.core.ParameterList:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:kernelEnd,local1,170,<>> = <<org.sunflow.Benchmark:kernelEnd,local1,170,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:update,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:update,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:setBasis,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.Sphere:prepareShadingState,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getUV,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getGeoNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1400,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1400,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1400,retrn,3,<null>>,D,D>;
<org.apache.commons.cli.Options:hasOption,local1,8,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;<<java.util.Map:containsKey,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:version,parmtr,1,<>> = <<org.dacapo.harness.TeePrintStream:version,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:modifier,parmtr,1,<>> = <<org.sunflow.SunflowAPI:modifier,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:addSize,parmtr,2,<>> = <<org.dacapo.parser.Config:addSize,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,158,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:addOutputFile,parmtr,2,<>> = <<org.dacapo.parser.Config$Size:addOutputFile,argmnt,2,<null>>,D,D>;
<org.sunflow.math.MathUtils:init,parmtr,1,<>> = <<org.sunflow.math.MathUtils:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputClause,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:outputClause,argmnt,2,<null>>,D,D>;<<org.dacapo.parser.Config:setKeep,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setLines,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setExists,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setBytes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setDigest,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,919,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,919,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,17,<>> = <<org.dacapo.harness.Callback:complete,local1,17,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,local1,116,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,callback,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,617,<>> = <<org.sunflow.core.accel.KDTree:build,local1,617,<null>>,D,D>;
<org.dacapo.parser.Config:addSize,parmtr,3,<>> = <<org.dacapo.parser.Config:addSize,argmnt,3,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$000,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$000,retrn,3,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:access$000,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printUsage,local1,2,<>> = <<org.apache.commons.cli.HelpFormatter:printHelp,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.HelpFormatter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,local1,22,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,621,<>> = <<org.sunflow.core.LightServer:showStats,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$500,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$500,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI:taskCanceled,local1,14,<>> = <<org.sunflow.system.UI:taskCanceled,local1,14,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,527,<>> = <<org.sunflow.core.LightServer:build,local1,527,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,278,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:hasOption,local1,3,<>> = <<java.util.List:contains,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,88,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,88,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,15,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,22,<>> = <<org.sunflow.core.Instance:getModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformWorldToObject,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformVectorObjectToWorld,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformNormalObjectToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:access$300,parmtr,7,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$300,argmnt,7,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,local1,255,<>> = <<org.apache.commons.cli.PosixParser:flatten,local1,255,<null>>,D,D>;
<org.sunflow.core.Scene:setCamera,parmtr,2,<>> = <<org.sunflow.core.Scene:setCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:setCamera,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark:init,parmtr,1,<>> = <<org.sunflow.Benchmark:init,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1200,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1200,retrn,3,<null>>,D,D>;
<org.dacapo.harness.FileDigest:replaceAllFixed,local1,50,<>> = <<org.dacapo.harness.FileDigest:replaceAllFixed,local1,50,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupShader,parmtr,1,<>> = <<org.sunflow.SunflowAPI:lookupShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getBasis,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getBasis,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,parmtr,4,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,4,<null>>,D,D>;<<org.sunflow.core.LightServer$Sample:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransformZ,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformZ,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,122,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:getAbsolutePath,argmnt,1,<null>>,D,D>;<<java.io.File:exists,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1050,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1050,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteTree,local1,30,<>> = <<org.dacapo.harness.Benchmark:deleteTree,local1,30,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,182,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,182,<null>>,E,E>;
<org.sunflow.core.primitive.Sphere:getNumPrimitives,parmtr,1,<>> = <<org.sunflow.core.primitive.Sphere:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:getOption,parmtr,1,<>> = <<org.apache.commons.cli.MissingArgumentException:getOption,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,parmtr,3,<>> = <<org.dacapo.harness.Benchmark:unpackZipStream,argmnt,3,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:next,retrn,3,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:next,retrn,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,239,<>> = <<org.sunflow.SunflowAPI:create,local1,239,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:longInt,local1,13,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:longInt,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addIntegerArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addIntegerArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:init,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:init,argmnt,1,<null>>,D,D>;<<java.io.FilterOutputStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:newLog,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,1,<null>>,E,E>;
<org.sunflow.Benchmark:kernelEnd,local1,12,<>> = <<org.sunflow.Benchmark:kernelEnd,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,18,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,18,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,2,<>> = <<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;<<java.util.List:toArray,argmnt,1,<null>>,D,D>;<<java.util.List:isEmpty,argmnt,1,<null>>,D,D>;<<java.util.List:addAll,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addTexCoords,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addTexCoords,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,509,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,509,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,609,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,74,<>> = <<org.dacapo.parser.Config$ThreadModel:describe,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:print,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,121,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,121,<null>>,E,E>;
<org.sunflow.core.ShadingState:setRay,parmtr,2,<>> = <<org.sunflow.core.ShadingState:setRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setRay,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,9,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,9,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,488,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,parmtr,2,<>> = <<org.sunflow.image.Color:blend,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,296,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,296,<null>>,E,E>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,72,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,24,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.camera.PinholeLens:getRay,parmtr,1,<>> = <<org.sunflow.core.camera.PinholeLens:getRay,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,98,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:init,parmtr,2,<>> = <<org.sunflow.system.UI$PrintLevel:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_consume_token,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:generateParseException,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,local1,7,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,local1,7,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:print,local1,2,<>> = <<org.sunflow.system.ui.ConsoleInterface:print,local1,2,<null>>,E,E>;
<org.dacapo.harness.TeeOutputStream:version,local1,42,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:loadClass,parmtr,1,<>> = <<org.dacapo.harness.DacapoClassLoader:loadClass,argmnt,1,<null>>,D,D>;<<java.net.URLClassLoader:findLoadedClass,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.DacapoClassLoader:loadClass,callback,1,<null>>,D,D>;<<java.net.URLClassLoader:findClass,argmnt,1,<null>>,D,D>;<<java.net.URLClassLoader:loadClass,argmnt,1,<null>>,D,D>;<<java.net.URLClassLoader:resolveClass,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,261,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,261,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,2,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,9,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,9,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,376,<>> = <<org.sunflow.util.IntArray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:trim,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,312,<>> = <<org.dacapo.parser.ParseException:initialise,local1,312,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,136,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,136,<null>>,E,E>;
<org.sunflow.system.SearchPath:resolvePath,local1,152,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:getAbsolutePath,argmnt,1,<null>>,D,D>;<<java.io.File:exists,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:processValue,parmtr,2,<>> = <<java.lang.String:indexOf,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:processValue,argmnt,2,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,179,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,179,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,236,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,236,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:createMessage,retrn,88,<>> = <<org.apache.commons.cli.MissingOptionException:createMessage,retrn,88,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:enableOutput,parmtr,1,<>> = <<org.dacapo.harness.TeePrintStream:enableOutput,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,545,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,545,<null>>,D,D>;
<org.sunflow.core.ShadingState:getTrianglePoints,local1,53,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getTrianglePoints,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:libraries,local1,14,<>> = <<org.dacapo.parser.ConfigFile:libraries,local1,14,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,866,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:mid,parmtr,2,<>> = <<org.sunflow.math.Point3:mid,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:trace,parmtr,3,<>> = <<org.sunflow.core.Scene:trace,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:getURL,local1,23,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,101,<>> = <<org.sunflow.core.LightServer:showStats,local1,101,<null>>,E,E>;
<org.sunflow.util.IntArray:getSize,parmtr,1,<>> = <<org.sunflow.util.IntArray:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,21,<>> = <<java.util.jar.JarFile:init,argmnt,1,<null>>,D,D>;<<java.util.jar.JarFile:getManifest,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,170,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,170,<null>>,D,D>;
<org.dacapo.harness.Benchmark:getURL,local1,32,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,114,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,122,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:updateInner,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:updateInner,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:unQuote,local1,3,<>> = <<org.dacapo.parser.ConfigFile:unQuote,argmnt,2,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,parmtr,2,<>> = <<org.sunflow.SunflowAPI:render,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,124,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,124,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,41,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,41,<null>>,D,D>;
<org.dacapo.parser.Config:getArgs,local1,7,<>> = <<java.lang.Object:clone,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,30,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,30,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,530,<>> = <<org.sunflow.core.Scene:render,local1,530,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:resolveOption,local1,8,<>> = <<org.apache.commons.cli.CommandLine:resolveOption,argmnt,1,<null>>,D,D>;<<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:update,parmtr,3,<>> = <<org.sunflow.core.Camera:update,argmnt,3,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,334,<>> = <<org.sunflow.system.UI$Module:clinit,local1,334,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopAtPos,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa2_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:createNode,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:createNode,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,249,<>> = <<org.sunflow.SunflowAPI:create,local1,249,<null>>,E,E>;
<org.sunflow.core.ShadingState:includeLights,parmtr,1,<>> = <<org.sunflow.core.ShadingState:includeLights,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,12,<>> = <<java.lang.ClassLoader:getResource,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:init,parmtr,1,<>> = <<org.sunflow.core.shader.GlassShader:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,240,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,240,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$500,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$500,retrn,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,112,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,112,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,288,<>> = <<org.dacapo.harness.TestHarness:main,local1,288,<null>>,E,E>;
<org.sunflow.core.Scene:traceShadow,parmtr,3,<>> = <<org.sunflow.core.Scene:traceShadow,argmnt,3,<null>>,D,D>;<<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,23,<>> = <<org.sunflow.SunflowAPI:camera,local1,23,<null>>,D,D>;
<org.sunflow.core.Scene:setShaderOverride,local1,3,<>> = <<org.sunflow.core.Scene:setShaderOverride,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:setShaderOverride,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,parmtr,3,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:store,argmnt,3,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,299,<>> = <<org.sunflow.system.UI$Module:clinit,local1,299,<null>>,E,E>;
<org.sunflow.Benchmark:main,local1,7,<>> = <<org.sunflow.Benchmark:main,local1,7,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$2800,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2800,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,retrn,289,<>> = <<org.dacapo.parser.TokenMgrError:addEscapes,retrn,289,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,81,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,81,<null>>,D,D>;<<org.sunflow.core.bucket.ColumnBucketOrder:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupInstance,local1,3,<>> = <<org.sunflow.RenderObjectMap:lookupInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:init,parmtr,1,<>> = <<org.sunflow.core.Geometry:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,118,<>> = <<org.apache.commons.cli.Parser:parse,local1,118,<null>>,E,E>;
<org.dacapo.harness.Benchmark:initialize,local1,44,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,44,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,187,<>> = <<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,53,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,53,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,640,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getNumPrimitives,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,80,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,argmnt,1,<null>>,D,D>;<<java.util.concurrent.PriorityBlockingQueue:init,argmnt,1,<null>>,D,D>;<<java.util.concurrent.PriorityBlockingQueue:add,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:access$100,retrn,3,<>> = <<org.sunflow.util.FastHashMap$Entry:access$100,retrn,3,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:access$100,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileFromInputStream,parmtr,3,<>> = <<org.dacapo.harness.Benchmark:fileFromInputStream,argmnt,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,137,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:getAbsoluteFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getStringArray,retrn,3,<>> = <<org.sunflow.core.ParameterList:getStringArray,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList:getStringArray,retrn,3,<null>>,D,D>;
<org.sunflow.system.UI:printWarning,local1,13,<>> = <<org.sunflow.system.UI:printWarning,local1,13,<null>>,E,E>;
<org.dacapo.harness.Sunflow:init,local1,76,<>> = <<org.dacapo.harness.Sunflow:init,local1,76,<null>>,E,E>;
<org.sunflow.core.LightServer:traceDiffusePhoton,parmtr,3,<>> = <<org.sunflow.core.LightServer:traceDiffusePhoton,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Geometry:update,local1,7,<>> = <<org.sunflow.core.Geometry:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,126,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,126,<null>>,E,E>;
<org.sunflow.core.Geometry:init,parmtr,1,<>> = <<org.sunflow.core.Geometry:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,72,<>> = <<org.sunflow.core.LightServer:showStats,local1,72,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,3,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,local1,1,<null>>,E,E>;
<org.sunflow.core.ParameterList:getString,retrn,31,<>> = <<org.sunflow.core.ParameterList:getString,retrn,31,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.core.ParameterList:addStringArray,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:isValidSize,local1,10,<>> = <<java.util.Collection:contains,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_2,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_2,local1,1,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,310,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,310,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionObject,retrn,7,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,retrn,7,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,121,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,121,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,338,<>> = <<org.sunflow.image.RGBSpace:toString,local1,338,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,415,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,704,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,704,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,3,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,381,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,381,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,73,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,73,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:SkipLexicalActions,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:SkipLexicalActions,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupGeometry,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:lookupGeometry,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupShader,parmtr,2,<>> = <<org.sunflow.SunflowAPI:lookupShader,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,224,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,224,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,92,<>> = <<org.dacapo.harness.FileDigest:main,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,476,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPrimitiveBound,local1,88,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVectorArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getVectorArray,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:init,parmtr,1,<>> = <<org.sunflow.core.Scene:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:init,local1,134,<>> = <<org.sunflow.image.RGBSpace:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,137,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:values,retrn,5,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:values,retrn,5,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,129,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,650,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,650,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflectionPhoton,parmtr,4,<>> = <<org.sunflow.core.LightServer:traceReflectionPhoton,argmnt,4,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,77,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,1671,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,1671,<null>>,D,D>;
<org.sunflow.util.IntArray:add,local1,30,<>> = <<org.sunflow.util.IntArray:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:update,parmtr,3,<>> = <<org.sunflow.core.shader.MirrorShader:update,argmnt,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$800,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$800,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$800,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,parmtr,2,<>> = <<org.sunflow.SunflowAPI:shader,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:setOptionalArg,parmtr,1,<>> = <<org.apache.commons.cli.Option:setOptionalArg,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getArgList,retrn,6,<>> = <<org.dacapo.harness.CommandLineArgs:getArgList,retrn,6,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,parmtr,2,<>> = <<org.sunflow.math.Matrix4:transformPZ,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformPY,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,argmnt,2,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformPX,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,29,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,30,<>> = <<org.apache.commons.cli.Parser:processProperties,local1,30,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:getWorldBounds,retrn,51,<>> = <<org.sunflow.core.Geometry:getWorldBounds,retrn,51,<null>>,D,D>;
<org.sunflow.Benchmark:kernelEnd,local1,179,<>> = <<org.sunflow.Benchmark:kernelEnd,local1,179,<null>>,E,E>;
<org.sunflow.RenderObjectMap:put,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getParsedOptionValue,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getParsedOptionValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:resolveOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,168,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,168,<null>>,E,E>;
<org.sunflow.RenderObjectMap:remove,local1,240,<>> = <<org.sunflow.RenderObjectMap:remove,local1,240,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,337,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,337,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,98,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processArgs,local1,91,<>> = <<org.apache.commons.cli.Parser:processArgs,local1,91,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:addArg,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:addArg,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,121,<>> = <<org.sunflow.core.Instance:update,local1,121,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa7_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa7_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa8_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,local1,85,<>> = <<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:shader,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:init,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:rotateX,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:rotateX,retrn,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,7,<>> = <<org.sunflow.SunflowAPI:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:setCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:setBakingInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:removeShader,parmtr,2,<>> = <<org.sunflow.core.Instance:removeShader,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,143,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:print,local1,29,<>> = <<org.sunflow.Benchmark:print,local1,29,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getFloats,retrn,2,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getFloats,retrn,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,892,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,892,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,285,<>> = <<org.sunflow.system.UI$Module:clinit,local1,285,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:buildTree,local1,840,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,467,<>> = <<org.sunflow.core.accel.KDTree:build,local1,467,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,113,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,113,<null>>,E,E>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,155,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,155,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,318,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,318,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,local1,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addMatrices,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addMatrices,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getGeometry,parmtr,1,<>> = <<org.sunflow.core.Instance:getGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloat,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getFloat,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getValues,parmtr,1,<>> = <<org.apache.commons.cli.Option:getValues,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasNoValues,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,263,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,263,<null>>,E,E>;
<org.sunflow.system.UI:clinit,local1,2,<>> = <<org.sunflow.system.UI:clinit,local1,2,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:validate,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:fileInScratch,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,23,<>> = <<org.sunflow.Benchmark:main,local1,23,<null>>,E,E>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,104,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getSilent,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getSilent,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getVerbose,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,24,<>> = <<org.dacapo.harness.TestHarness:main,local1,24,<null>>,E,E>;
<org.sunflow.RenderObjectMap:updateScene,local1,222,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,222,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:init,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:inc,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:readable,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,147,<>> = <<org.dacapo.parser.Config:describe,local1,147,<null>>,D,D>;
<org.sunflow.core.Scene:traceShadow,parmtr,2,<>> = <<org.sunflow.core.Scene:traceShadow,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:string,retrn,13,<>> = <<org.dacapo.parser.ConfigFile:string,retrn,13,<null>>,D,D>;
<org.sunflow.core.ParameterList:addMatrices,local1,14,<>> = <<org.sunflow.core.ParameterList:addMatrices,local1,14,<null>>,E,E>;
<org.sunflow.SunflowAPI:instance,local1,34,<>> = <<org.sunflow.SunflowAPI:instance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasDigest,parmtr,3,<>> = <<org.dacapo.parser.Config:hasDigest,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.Config:main,local1,16,<>> = <<org.dacapo.parser.Config:main,local1,16,<null>>,E,E>;
<org.sunflow.RenderObjectMap:updateScene,local1,266,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,266,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,941,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,247,<>> = <<org.sunflow.RenderObjectMap:remove,local1,247,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:getToken,local1,31,<>> = <<org.dacapo.parser.ConfigFile:getToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:getNextToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,local1,66,<>> = <<org.sunflow.SunflowAPI:instance,local1,66,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,470,<>> = <<org.sunflow.core.LightServer:build,local1,470,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,234,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,22,<>> = <<java.lang.Object:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:getPrimitiveBound,parmtr,1,<>> = <<org.sunflow.core.primitive.Sphere:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:init,parmtr,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,36,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceReflection,retrn,9,<>> = <<org.sunflow.core.ShadingState:traceReflection,retrn,9,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,32,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,824,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransformY,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformY,argmnt,2,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,176,<>> = <<org.sunflow.core.AccelerationStructureFactory:create,retrn,176,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,local1,20,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,212,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,212,<null>>,D,D>;
<org.sunflow.core.ShadingState:getModifier,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,parmtr,1,<>> = <<org.sunflow.core.LightServer:traceRefraction,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadeHit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,parmtr,2,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:build,argmnt,2,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,186,<>> = <<org.sunflow.SunflowAPI:lookupCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:render,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupOptions,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptionGroups,retrn,2,<>> = <<java.util.HashSet:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:getOptionGroups,retrn,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:init,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,460,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,460,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,2,<>> = <<org.dacapo.harness.Callback:start,local1,2,<null>>,E,E>;
<org.sunflow.core.ParameterList:getPoint,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getPoint,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:setValueSeparator,parmtr,1,<>> = <<org.apache.commons.cli.Option:setValueSeparator,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,parmtr,1,<>> = <<org.apache.commons.cli.Option:toString,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArgs,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArg,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:toString,callback,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,279,<>> = <<org.dacapo.harness.Callback:runAgain,local1,279,<null>>,D,D>;
<org.apache.commons.cli.Util:stripLeadingHyphens,retrn,23,<>> = <<org.apache.commons.cli.Util:stripLeadingHyphens,retrn,23,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,494,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,494,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getScratchDir,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getScratchDir,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,818,<>> = <<org.sunflow.core.shader.GlassShader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addMatrices,local1,20,<>> = <<org.sunflow.core.ParameterList:addMatrices,local1,20,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,49,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,49,<null>>,E,E>;
<org.sunflow.core.ShadingState:init,parmtr,3,<>> = <<org.sunflow.core.ShadingState:init,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,callback,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersect,parmtr,4,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersect,argmnt,4,<null>>,D,D>;<<org.sunflow.core.IntersectionState:setIntersection,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,54,<>> = <<org.sunflow.system.UI$Module:clinit,local1,54,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,436,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,149,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,149,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,373,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,373,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,3,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,parmtr,3,<>> = <<org.dacapo.harness.DacapoClassLoader:create,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateBVH2,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateBVH2,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,492,<>> = <<org.sunflow.core.LightServer:build,local1,492,<null>>,E,E>;
<org.sunflow.SunflowAPI:clinit,local1,2,<>> = <<org.sunflow.SunflowAPI:clinit,local1,2,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getValidateOutput,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getValidateOutput,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,16,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,16,<null>>,E,E>;
<org.sunflow.math.Matrix4:scale,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:scale,retrn,2,<null>>,D,D>;
<org.sunflow.core.Ray:dot,parmtr,2,<>> = <<org.sunflow.core.Ray:dot,argmnt,2,<null>>,D,D>;
<org.sunflow.math.Vector3:decode,retrn,3,<>> = <<org.sunflow.math.Vector3:decode,argmnt,3,<null>>,D,D>;<<org.sunflow.math.Vector3:decode,retrn,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,88,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOption,retrn,25,<>> = <<org.apache.commons.cli.Options:getOption,retrn,25,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,local1,11,<>> = <<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,local1,11,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.filter.FilterFactory:get,parmtr,2,<>> = <<org.sunflow.core.filter.FilterFactory:get,argmnt,2,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,118,<>> = <<org.sunflow.Benchmark:init,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark:kernelMain,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetImage,local1,74,<>> = <<java.lang.String:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,148,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,148,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,93,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,632,<>> = <<org.sunflow.core.Scene:render,local1,632,<null>>,E,E>;
<org.sunflow.core.Scene:setInstanceLists,parmtr,1,<>> = <<org.sunflow.core.Scene:setInstanceLists,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,local1,24,<>> = <<org.codehaus.janino.util.LocatedException:getMessage,local1,24,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,89,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,89,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,618,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,618,<null>>,D,D>;
<org.sunflow.core.ShadingState:getIrradiance,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getIrradiance,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,local1,7,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,28,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,28,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,681,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,681,<null>>,E,E>;
<org.sunflow.core.LightServer:showStats,local1,116,<>> = <<org.sunflow.core.LightServer:showStats,local1,116,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,1,<>> = <<org.dacapo.harness.TestHarness:main,local1,1,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:jj_la1_init_1,local1,4,<>> = <<org.dacapo.parser.ConfigFile:jj_la1_init_1,local1,4,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,40,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,40,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,81,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,114,<>> = <<org.dacapo.harness.Callback:init,local1,114,<null>>,E,E>;
<org.sunflow.core.filter.FilterFactory:init,parmtr,1,<>> = <<org.sunflow.core.filter.FilterFactory:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,retrn,116,<>> = <<org.sunflow.core.ShadingState:setRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getRadiance,retrn,116,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:setBakingInstance,parmtr,1,<>> = <<org.sunflow.core.Scene:setBakingInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:init,parmtr,1,<>> = <<org.sunflow.system.ui.ConsoleInterface:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,74,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,438,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,438,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,120,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,120,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,26,<>> = <<org.sunflow.RenderObjectMap:update,local1,26,<null>>,D,D>;
<org.apache.commons.cli.Option:getKey,parmtr,1,<>> = <<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,15,<>> = <<org.apache.commons.cli.Parser:processOption,local1,15,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$3800,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3800,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,128,<>> = <<java.lang.Thread:join,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:remove,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceRefraction,retrn,66,<>> = <<org.sunflow.core.ShadingState:traceRefraction,retrn,66,<null>>,D,D>;
<org.sunflow.Benchmark:taskStart,parmtr,2,<>> = <<org.sunflow.Benchmark:taskStart,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,493,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,argmnt,2,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,parmtr,2,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,argmnt,2,<null>>,D,D>;<<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;<<java.lang.String:split,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$100,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:access$100,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadCount,local1,6,<>> = <<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,local1,74,<>> = <<org.sunflow.SunflowAPI:light,local1,74,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,147,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,147,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,334,<>> = <<org.sunflow.image.Color:exp,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptions,retrn,19,<>> = <<org.apache.commons.cli.CommandLine:getOptions,retrn,19,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,118,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,28,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,28,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateLeaf,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateLeaf,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:get,parmtr,2,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,2,<null>>,D,D>;<<java.lang.Object:hashCode,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,7,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,7,<null>>,E,E>;
<org.apache.commons.cli.Parser:processOption,local1,32,<>> = <<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,3,<>> = <<org.sunflow.core.PrimitiveList:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,345,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,345,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,78,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,78,<null>>,D,D>;
<org.sunflow.core.Geometry:getBakingPrimitives,retrn,26,<>> = <<org.sunflow.core.Geometry:getBakingPrimitives,retrn,26,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,193,<>> = <<org.sunflow.SunflowAPI:create,local1,193,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:getEndColumn,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:getEndColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$InterpolationType:init,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,401,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Util:stripLeadingAndTrailingQuotes,retrn,2,<>> = <<org.apache.commons.cli.Util:stripLeadingAndTrailingQuotes,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Util:stripLeadingAndTrailingQuotes,retrn,2,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;<<java.lang.String:endsWith,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,55,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,55,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:typeName,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:typeName,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,477,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,477,<null>>,D,D>;
<org.sunflow.math.Matrix4:asColMajor,retrn,4,<>> = <<org.sunflow.math.Matrix4:asColMajor,retrn,4,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,41,<>> = <<org.sunflow.image.RGBSpace:toString,local1,41,<null>>,D,D>;
<org.sunflow.system.UI:printDetailed,local1,18,<>> = <<org.sunflow.system.UI:printDetailed,local1,18,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:init,parmtr,1,<>> = <<org.sunflow.core.shader.DiffuseShader:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$1:clinit,local1,41,<>> = <<org.dacapo.parser.Config$1:clinit,local1,41,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:ReInit,local1,37,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,384,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,384,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,parmtr,3,<>> = <<org.sunflow.core.LightServer:traceRefraction,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,parmtr,4,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,argmnt,4,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,local1,105,<>> = <<org.dacapo.parser.ConfigFile:outputFile,local1,105,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,298,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,298,<null>>,E,E>;
<org.sunflow.math.Vector3:length,parmtr,1,<>> = <<org.sunflow.math.Vector3:length,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1600,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1600,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1600,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:addTextureSearchPath,parmtr,2,<>> = <<org.sunflow.SunflowAPI:addTextureSearchPath,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,21,<>> = <<org.sunflow.core.Scene:render,local1,21,<null>>,E,E>;
<org.sunflow.core.IntersectionState:setIntersection,local1,4,<>> = <<org.sunflow.core.IntersectionState:setIntersection,argmnt,1,<null>>,D,D>;<<org.sunflow.core.IntersectionState:setIntersection,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,parmtr,3,<>> = <<org.sunflow.SunflowAPI:render,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa7_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa7_0,local1,1,<null>>,E,E>;
<org.apache.commons.cli.Parser:parse,parmtr,4,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,4,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,local1,32,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,618,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,618,<null>>,D,D>;
<org.sunflow.math.BoundingBox:intersects,parmtr,2,<>> = <<org.sunflow.math.BoundingBox:intersects,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,122,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,122,<null>>,D,D>;
<org.sunflow.util.FastHashMap:remove,local1,24,<>> = <<org.sunflow.util.FastHashMap:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:access$000,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$000,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,parmtr,1,<>> = <<org.sunflow.core.LightServer:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:lookupShadingCache,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadePhoton,local1,15,<>> = <<org.sunflow.core.Shader:scatterPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,331,<>> = <<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,243,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,244,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,244,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,349,<>> = <<org.dacapo.harness.Callback:runAgain,local1,349,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:buildTree,parmtr,13,<>> = <<org.sunflow.core.accel.KDTree:buildTree,argmnt,13,<null>>,D,D>;<<org.sunflow.core.accel.KDTree$BuildStats:updateLeaf,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree$BuildStats:updateInner,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:taskStop,local1,2,<>> = <<org.sunflow.system.UI:taskStop,local1,2,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,298,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addIntegerArray,local1,16,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,152,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,423,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,1010,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:storePhoton,parmtr,3,<>> = <<org.sunflow.core.ShadingState:storePhoton,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,retrn,19,<>> = <<java.lang.Class:getMethod,argmnt,1,<null>>,D,D>;<<java.lang.Class:getConstructor,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Sunflow:init,retrn,19,<null>>,D,D>;<<org.dacapo.harness.Sunflow:init,retrn,19,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,local1,19,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:intersect,local1,17,<>> = <<org.sunflow.core.Instance:intersect,argmnt,3,<null>>,D,D>;<<org.sunflow.core.Geometry:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,13,<>> = <<java.lang.Class:forName,argmnt,4,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Sunflow:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,58,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,58,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,135,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,102,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,102,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,15,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getParsedOptionValue,retrn,37,<>> = <<org.apache.commons.cli.CommandLine:getParsedOptionValue,retrn,37,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,744,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,37,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,37,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,695,<>> = <<org.sunflow.core.accel.KDTree:build,local1,695,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:init,local1,25,<>> = <<org.sunflow.core.display.FileDisplay:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,parmtr,4,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,4,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,181,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,181,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$900,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$900,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$900,argmnt,2,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,107,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,107,<null>>,E,E>;
<org.sunflow.core.ParameterList:addIntegerArray,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addIntegerArray,argmnt,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,287,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$600,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$600,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,114,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,114,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,119,<>> = <<org.sunflow.SunflowAPI:compile,local1,119,<null>>,D,D>;
<org.apache.commons.cli.Parser:getRequiredOptions,retrn,3,<>> = <<org.apache.commons.cli.Parser:getRequiredOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getRequiredOptions,retrn,3,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,31,<>> = <<org.sunflow.Benchmark:main,local1,31,<null>>,E,E>;
<org.sunflow.core.gi.GIEngineFactory:create,local1,124,<>> = <<org.sunflow.core.gi.GIEngineFactory:create,local1,124,<null>>,E,E>;
<org.sunflow.core.ParameterList:addInteger,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addInteger,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:clinit,local1,2,<>> = <<org.dacapo.parser.Config$ThreadModel:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.Instance:transformVectorObjectToWorld,retrn,25,<>> = <<org.sunflow.core.Instance:transformVectorObjectToWorld,retrn,25,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:prepare,local1,22,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getValue,parmtr,1,<>> = <<org.apache.commons.cli.Option:getValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasNoValues,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getMethodology,local1,20,<>> = <<org.dacapo.harness.CommandLineArgs:getMethodology,local1,20,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,101,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,101,<null>>,D,D>;
<org.apache.commons.cli.Parser:setOptions,parmtr,1,<>> = <<org.apache.commons.cli.Parser:setOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,local1,29,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,682,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,682,<null>>,D,D>;
<org.dacapo.harness.Sunflow:validate,local1,48,<>> = <<org.dacapo.harness.Sunflow:validate,local1,48,<null>>,E,E>;
<org.apache.commons.cli.Parser:processProperties,parmtr,2,<>> = <<org.apache.commons.cli.Parser:processProperties,argmnt,2,<null>>,D,D>;<<java.util.Properties:propertyNames,argmnt,1,<null>>,D,D>;<<java.util.Properties:getProperty,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printInfo,parmtr,4,<>> = <<org.sunflow.system.UI:printInfo,argmnt,4,<null>>,D,D>;
<org.dacapo.parser.Config:filterScratch,local1,8,<>> = <<org.dacapo.parser.Config:filterScratch,local1,8,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,31,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:trace,parmtr,2,<>> = <<org.sunflow.core.Scene:trace,argmnt,2,<null>>,D,D>;
<org.sunflow.system.Timer:toString,local1,111,<>> = <<org.sunflow.system.Timer:toString,local1,111,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:init,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,409,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addStringArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addStringArray,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:createState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:createState,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,558,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,558,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,261,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,261,<null>>,E,E>;
<org.dacapo.harness.Benchmark:preIteration,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:preIteration,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,95,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,297,<>> = <<org.sunflow.SunflowAPI:create,local1,297,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,449,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:getNumPrimitives,parmtr,1,<>> = <<org.sunflow.core.InstanceList:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,360,<>> = <<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,81,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$CacheEntry:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,local1,52,<>> = <<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildTask:init,local1,32,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersect,parmtr,2,<>> = <<org.sunflow.core.Ray:isInside,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersect,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:init,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addTexCoords,local1,19,<>> = <<org.sunflow.core.ParameterList:addTexCoords,local1,19,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorObjectToWorld,retrn,9,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformVectorObjectToWorld,retrn,9,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,50,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,local1,50,<null>>,D,D>;
<org.sunflow.core.ParameterList:addPoints,local1,19,<>> = <<org.sunflow.core.ParameterList:addPoints,local1,19,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,137,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,137,<null>>,E,E>;
<org.sunflow.system.Memory:bytesToString,local1,75,<>> = <<org.sunflow.system.Memory:bytesToString,local1,75,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,local1,34,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:outputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:outputClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.camera.PinholeLens:update,parmtr,3,<>> = <<org.sunflow.core.camera.PinholeLens:update,argmnt,3,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,100,<>> = <<Harness:makeHarnessClassLoader,local1,100,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:bernstein,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:bernsteinDeriv,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVectorArray,retrn,18,<>> = <<org.sunflow.core.ParameterList:getVectorArray,retrn,18,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromW,retrn,2,<>> = <<org.sunflow.math.OrthoNormalBasis:makeFromW,retrn,2,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,local1,6,<>> = <<org.sunflow.core.gi.InstantGI$PointLight:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,566,<>> = <<org.sunflow.core.LightServer:build,local1,566,<null>>,E,E>;
<org.sunflow.math.OrthoNormalBasis:untransformY,local1,4,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformY,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,81,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,81,<null>>,D,D>;
<org.sunflow.core.ParameterList:addVectors,local1,32,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:init,parmtr,2,<>> = <<org.dacapo.parser.Config$Size:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config$Size:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getCameraToWorld,local1,3,<>> = <<org.sunflow.core.LightServer:getScene,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getCameraToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:init,parmtr,2,<>> = <<org.sunflow.Benchmark$BenchmarkScene:init,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark$BenchmarkScene:init,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getBound,local1,51,<>> = <<org.sunflow.math.BoundingBox:getBound,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,118,<>> = <<org.dacapo.harness.FileDigest:getText,local1,118,<null>>,D,D>;
<org.apache.commons.cli.Parser:getRequiredOptions,parmtr,1,<>> = <<org.apache.commons.cli.Parser:getRequiredOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getInt,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getInt,argmnt,2,<null>>,D,D>;
<org.sunflow.image.Color:blend,retrn,12,<>> = <<org.sunflow.image.Color:blend,retrn,12,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteTree,local1,27,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,610,<>> = <<org.dacapo.harness.TestHarness:main,local1,610,<null>>,E,E>;
<org.dacapo.harness.Sunflow:init,local1,53,<>> = <<org.dacapo.harness.Sunflow:init,local1,53,<null>>,D,D>;
<org.apache.commons.cli.Options:toString,local1,22,<>> = <<org.apache.commons.cli.Options:toString,local1,22,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,446,<>> = <<org.dacapo.harness.TestHarness:main,local1,446,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:main,local1,48,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,214,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,88,<>> = <<org.sunflow.core.accel.KDTree:build,local1,88,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,250,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,250,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,local1,37,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,local1,37,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,local1,44,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:setSmallTriangles,local1,12,<>> = <<org.sunflow.core.primitive.TriangleMesh:setSmallTriangles,local1,12,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,134,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,134,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,22,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,896,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,304,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,304,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,106,<>> = <<org.sunflow.RenderObjectMap:remove,local1,106,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,93,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,93,<null>>,D,D>;
<org.dacapo.parser.Config:getDesc,local1,3,<>> = <<org.dacapo.parser.Config:getDesc,argmnt,1,<null>>,D,D>;<<java.util.HashMap:get,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,67,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,local1,67,<null>>,D,D>;
<org.dacapo.parser.Config:getDigest,parmtr,2,<>> = <<org.dacapo.parser.Config:getDigest,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark:imageFill,parmtr,6,<>> = <<org.sunflow.Benchmark:imageFill,argmnt,6,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransformX,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformX,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,80,<>> = <<org.sunflow.core.Instance:update,local1,80,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,744,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,744,<null>>,E,E>;
<org.sunflow.math.BoundingBox:init,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransformZ,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformZ,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,679,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,679,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,126,<>> = <<org.dacapo.parser.ConfigFile:sizeClause,local1,126,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,96,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,96,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,193,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,193,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$000,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$000,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$000,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,123,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,123,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,187,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,187,<null>>,D,D>;<<java.lang.Thread:start,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,2,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3500,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3500,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI:printDetailed,local1,13,<>> = <<org.sunflow.system.UI:printDetailed,local1,13,<null>>,E,E>;
<org.sunflow.core.ShadingState:init,parmtr,1,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:isTextFile,parmtr,2,<>> = <<org.dacapo.parser.Config:isTextFile,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:main,local1,29,<>> = <<org.sunflow.image.RGBSpace:main,local1,29,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_2,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_2,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopAtPos,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa6_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa6_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa7_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:div,retrn,4,<>> = <<org.sunflow.image.Color:div,argmnt,4,<null>>,D,D>;<<org.sunflow.image.Color:div,retrn,4,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,retrn,7,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,retrn,7,<null>>,D,D>;
<org.sunflow.core.ParameterList:getStringArray,retrn,31,<>> = <<org.sunflow.core.ParameterList:getStringArray,retrn,31,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceFinalGather,retrn,9,<>> = <<org.sunflow.core.ShadingState:traceFinalGather,retrn,9,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,640,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,640,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,4,<>> = <<org.sunflow.core.primitive.Sphere:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:faceforward,local1,7,<>> = <<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,15,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,15,<null>>,D,D>;
<org.apache.commons.cli.Parser:setOptions,local1,13,<>> = <<org.apache.commons.cli.Parser:setOptions,local1,13,<null>>,D,D>;
<org.dacapo.parser.Config:hasBytes,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,481,<>> = <<org.sunflow.image.RGBSpace:toString,local1,481,<null>>,D,D>;
<org.sunflow.core.LightServer:shadePhoton,parmtr,3,<>> = <<org.sunflow.core.LightServer:shadePhoton,argmnt,3,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,162,<>> = <<org.sunflow.RenderObjectMap:remove,local1,162,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,parmtr,2,<>> = <<org.sunflow.core.accel.KDTree:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:build,argmnt,2,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getPrimitiveBound,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$4000,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$4000,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$4000,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Geometry:build,local1,55,<>> = <<org.sunflow.core.Geometry:build,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:hex,retrn,13,<>> = <<org.dacapo.parser.ConfigFile:hex,retrn,13,<null>>,D,D>;
<org.sunflow.util.IntArray:get,parmtr,1,<>> = <<org.sunflow.util.IntArray:get,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:get,retrn,64,<>> = <<org.sunflow.util.FastHashMap:get,retrn,64,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,31,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,514,<>> = <<org.sunflow.image.RGBSpace:toString,local1,514,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,22,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,266,<>> = <<org.dacapo.parser.TokenMgrError:addEscapes,local1,266,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,3,<null>>,D,D>;
<org.sunflow.math.Point3:toString,local1,5,<>> = <<org.sunflow.math.Point3:toString,local1,5,<null>>,D,D>;
<org.sunflow.Benchmark:kernelMain,parmtr,1,<>> = <<org.sunflow.Benchmark:kernelMain,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getExtents,local1,3,<>> = <<org.sunflow.math.BoundingBox:getExtents,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,276,<>> = <<org.sunflow.math.QMC:clinit,local1,276,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1200,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1200,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getInts,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,63,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,63,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,local1,14,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,126,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printWarning,local1,18,<>> = <<org.sunflow.system.UI:printWarning,local1,18,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,parmtr,1,<>> = <<org.dacapo.harness.Sunflow:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,140,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,140,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:digestOption,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:digestOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addTexCoords,local1,36,<>> = <<org.sunflow.core.ParameterList:addTexCoords,local1,36,<null>>,E,E>;
<org.sunflow.core.Scene:traceBake,parmtr,3,<>> = <<org.sunflow.core.Scene:traceBake,argmnt,3,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,retrn,13,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,retrn,13,<null>>,D,D>;
<org.sunflow.core.ParameterList:addString,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addString,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:loadClass,local1,1,<>> = <<org.dacapo.harness.DacapoClassLoader:loadClass,local1,1,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,184,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,96,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,553,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,457,<>> = <<org.sunflow.core.accel.KDTree:build,local1,457,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,53,<>> = <<org.dacapo.harness.FileDigest:main,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,192,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,192,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,626,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,626,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceGlossy,retrn,9,<>> = <<org.sunflow.core.ShadingState:traceGlossy,retrn,9,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,131,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,131,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:getToken,retrn,15,<>> = <<org.dacapo.parser.ConfigFile:getToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getToken,retrn,15,<null>>,D,D>;
<org.dacapo.parser.Config:print,parmtr,2,<>> = <<org.dacapo.parser.Config:print,argmnt,2,<null>>,D,D>;<<java.io.PrintStream:println,argmnt,1,<null>>,D,D>;<<java.io.PrintStream:print,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:clear,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:clear,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:getWorldBounds,retrn,19,<>> = <<org.sunflow.core.Geometry:getWorldBounds,retrn,19,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,retrn,35,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,retrn,35,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$400,retrn,4,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$400,retrn,4,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,696,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,696,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,557,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,557,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,328,<>> = <<org.sunflow.SunflowAPI:create,local1,328,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,603,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Options:init,parmtr,1,<>> = <<org.sunflow.core.Options:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:getWorldBounds,parmtr,2,<>> = <<org.sunflow.math.Matrix4:transform,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.Sphere:getWorldBounds,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,76,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,76,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,80,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,80,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:configOption,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:configOption,argmnt,2,<null>>,D,D>;<<org.dacapo.parser.Config:setThreadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setClass,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:halton,local1,164,<>> = <<org.sunflow.math.QMC:halton,local1,164,<null>>,E,E>;
<org.sunflow.core.LightSample:isValid,parmtr,1,<>> = <<org.sunflow.core.LightSample:isValid,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,115,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,115,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,69,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,103,<>> = <<org.sunflow.SunflowAPI:compile,local1,103,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$4100,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$4100,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$4100,retrn,3,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,parmtr,1,<>> = <<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:init,local1,40,<>> = <<org.apache.commons.cli.Options:init,argmnt,1,<null>>,D,D>;<<java.util.HashMap:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,local1,31,<>> = <<org.dacapo.harness.Benchmark:run,local1,31,<null>>,E,E>;
<org.sunflow.system.UI$Module:clinit,local1,15,<>> = <<org.sunflow.system.UI$Module:clinit,local1,15,<null>>,E,E>;
<org.sunflow.core.Instance:update,local1,210,<>> = <<org.sunflow.core.Instance:update,local1,210,<null>>,D,D>;
<org.sunflow.core.ShadingState:setBasis,parmtr,1,<>> = <<org.sunflow.core.ShadingState:setBasis,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,35,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,35,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,local1,42,<>> = <<java.lang.String:replace,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,63,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,166,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,local1,10,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Memory:bytesToString,retrn,55,<>> = <<org.sunflow.system.Memory:bytesToString,retrn,55,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,146,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceTransparency,local1,29,<>> = <<org.sunflow.core.ShadingState:traceTransparency,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,782,<>> = <<org.sunflow.image.Color:getRGB,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,parmtr,2,<>> = <<org.sunflow.SunflowAPI:geometry,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:hasNext,local1,7,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:hasNext,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:hasNext,callback,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,1,<>> = <<org.dacapo.parser.ConfigFile:main,local1,1,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,536,<>> = <<org.sunflow.core.LightServer:build,local1,536,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,15,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,15,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,334,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,334,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,40,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,9,<>> = <<org.dacapo.harness.Callback:init,local1,9,<null>>,E,E>;
<org.sunflow.system.SearchPath:resolvePath,retrn,16,<>> = <<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:resolvePath,retrn,16,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,local1,91,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,local1,91,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,67,<>> = <<org.apache.commons.cli.Parser:parse,local1,67,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,local1,35,<>> = <<org.apache.commons.cli.PosixParser:burstToken,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeBakeResult,local1,15,<>> = <<org.sunflow.core.LightServer:shadeBakeResult,local1,15,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,3,<>> = <<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,3,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,28,<>> = <<org.dacapo.harness.Sunflow:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,505,<>> = <<org.sunflow.core.Scene:render,local1,505,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1156,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1156,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,346,<>> = <<org.dacapo.parser.Config$OutputFile:hasDigest,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,66,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,66,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAddStates,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAddStates,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:sub,retrn,1,<>> = <<org.sunflow.image.Color:sub,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:sub,retrn,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,146,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,901,<>> = <<org.sunflow.core.tesselatable.Teapot:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getKey,retrn,3,<>> = <<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getKey,retrn,3,<null>>,D,D>;
<org.dacapo.parser.Config:hasBytes,local1,8,<>> = <<org.dacapo.parser.Config$OutputFile:hasBytes,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,729,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,729,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:makeOption,parmtr,2,<>> = <<org.dacapo.harness.CommandLineArgs:makeOption,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,parmtr,2,<>> = <<org.sunflow.SunflowAPI:light,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,257,<>> = <<org.sunflow.image.RGBSpace:toString,local1,257,<null>>,D,D>;
<org.sunflow.image.Color:setRGBE,retrn,1,<>> = <<org.sunflow.image.Color:setRGBE,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:setRGBE,retrn,1,<null>>,D,D>;
<org.sunflow.core.Instance:intersect,parmtr,2,<>> = <<org.sunflow.core.Instance:intersect,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceRefractionPhoton,local1,72,<>> = <<org.sunflow.core.ShadingState:traceRefractionPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceRefractionPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Solvers:solveQuadric,retrn,81,<>> = <<org.sunflow.math.Solvers:solveQuadric,retrn,81,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,148,<>> = <<java.io.File:getAbsolutePath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getIntArray,local1,7,<>> = <<org.sunflow.core.ParameterList:getIntArray,local1,7,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,10,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,3,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Sunflow:iterate,parmtr,2,<>> = <<org.dacapo.harness.Sunflow:iterate,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,15,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,15,<null>>,E,E>;
<org.sunflow.core.Scene:setInstanceLists,local1,15,<>> = <<org.sunflow.core.Scene:setInstanceLists,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:init,local1,13,<>> = <<org.sunflow.core.shader.GlassShader:init,local1,13,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,288,<>> = <<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:values,local1,2,<>> = <<org.sunflow.core.ParameterList$ParameterType:values,local1,2,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,231,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,231,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,323,<>> = <<org.sunflow.image.RGBSpace:toString,local1,323,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,54,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,54,<null>>,E,E>;
<org.sunflow.Benchmark:access$200,parmtr,2,<>> = <<org.sunflow.Benchmark:access$200,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorWorldToObject,retrn,25,<>> = <<org.sunflow.core.Instance:transformVectorWorldToObject,retrn,25,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,24,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:next,retrn,14,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:next,retrn,14,<null>>,D,D>;
<org.dacapo.parser.Config$Size:init,local1,37,<>> = <<org.dacapo.parser.Config$Size:init,local1,37,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,68,<>> = <<java.lang.Object:toString,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.CompileException:init,parmtr,2,<>> = <<org.codehaus.janino.CompileException:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,672,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.Scanner$ScanException:init,parmtr,4,<>> = <<org.codehaus.janino.Scanner$ScanException:init,argmnt,4,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,local1,32,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,15,<>> = <<org.sunflow.image.Color:getAverage,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:flipU,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:flipU,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,76,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,607,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,607,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,46,<>> = <<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.GIEngine:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,25,<>> = <<java.lang.Runtime:availableProcessors,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,312,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,312,<null>>,E,E>;
<org.sunflow.core.ShadingState:getInstance,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getTargetVar,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getTargetVar,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,374,<>> = <<org.sunflow.core.Scene:render,local1,374,<null>>,E,E>;
<org.sunflow.core.Instance:updateBounds,local1,11,<>> = <<org.sunflow.core.Instance:updateBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getSizes,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getSizes,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:setRadiance,parmtr,3,<>> = <<org.sunflow.core.LightSample:setRadiance,argmnt,3,<null>>,D,D>;<<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,1,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,1,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_3,local1,4,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_3,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getDesc,parmtr,1,<>> = <<org.dacapo.parser.Config:getDesc,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1500,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1500,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$400,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$400,argmnt,2,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,438,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,438,<null>>,E,E>;
<org.dacapo.parser.Config$Size:init,parmtr,4,<>> = <<org.dacapo.parser.Config$Size:init,argmnt,4,<null>>,D,D>;<<java.util.Vector:toArray,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,303,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,303,<null>>,E,E>;
<org.sunflow.system.UI$Module:clinit,local1,164,<>> = <<org.sunflow.system.UI$Module:clinit,local1,164,<null>>,E,E>;
<org.dacapo.parser.Config:getSizes,parmtr,1,<>> = <<org.dacapo.parser.Config:getSizes,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,209,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,209,<null>>,E,E>;
<org.sunflow.SunflowAPI:render,local1,82,<>> = <<org.sunflow.SunflowAPI:render,local1,82,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,32,<>> = <<org.sunflow.image.RGBSpace:toString,local1,32,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:init,parmtr,1,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceGlossy,local1,61,<>> = <<org.sunflow.core.LightServer:traceGlossy,local1,61,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,367,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:setInstanceLists,parmtr,2,<>> = <<org.sunflow.core.Scene:setInstanceLists,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:addIncludeSearchPath,parmtr,2,<>> = <<org.sunflow.SunflowAPI:addIncludeSearchPath,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,680,<>> = <<org.dacapo.harness.Benchmark:validate,local1,680,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,parmtr,2,<>> = <<java.lang.String:charAt,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.TokenMgrError:addEscapes,argmnt,2,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,803,<>> = <<org.dacapo.harness.Benchmark:validate,local1,803,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,539,<>> = <<org.sunflow.core.Scene:render,local1,539,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,parmtr,3,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,3,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,3,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,192,<>> = <<org.sunflow.system.UI$Module:clinit,local1,192,<null>>,E,E>;
<org.dacapo.harness.Callback:start,local1,66,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildTask:init,local1,11,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:traceBake,local1,16,<>> = <<org.sunflow.core.Scene:traceBake,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructure:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,local1,42,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,3,<null>>,D,D>;
<org.sunflow.image.Color:toNonLinear,retrn,1,<>> = <<org.sunflow.image.Color:toNonLinear,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:toNonLinear,retrn,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,113,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,113,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,451,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,172,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,217,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,local1,3,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoord,retrn,3,<>> = <<org.sunflow.core.ParameterList:getTexCoord,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList:getTexCoord,retrn,3,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:build,parmtr,1,<>> = <<org.sunflow.Benchmark$BenchmarkScene:build,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:options,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,174,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,174,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,790,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,56,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,56,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,498,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,436,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,28,<>> = <<java.lang.String:getBytes,argmnt,1,<null>>,D,D>;<<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceGlossy,retrn,55,<>> = <<org.sunflow.core.LightServer:traceGlossy,retrn,55,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,75,<>> = <<org.sunflow.SunflowAPI:camera,local1,75,<null>>,E,E>;
<org.sunflow.math.OrthoNormalBasis:untransform,retrn,3,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,3,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:untransform,retrn,3,<null>>,D,D>;
<org.sunflow.system.UI:formatOutput,parmtr,2,<>> = <<org.sunflow.system.UI:formatOutput,argmnt,2,<null>>,D,D>;<<java.lang.Enum:name,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:enableValidationReport,local1,1,<>> = <<org.dacapo.harness.Benchmark:enableValidationReport,local1,1,<null>>,E,E>;
<org.dacapo.parser.Config$ThreadModel:valueOf,parmtr,2,<>> = <<org.dacapo.parser.Config$ThreadModel:valueOf,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,12,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:access$200,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:access$200,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,local1,20,<>> = <<org.sunflow.core.LightServer:traceRefraction,local1,20,<null>>,E,E>;
<org.sunflow.core.LightServer:calculatePhotons,local1,196,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,196,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,retrn,130,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,retrn,130,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPower,local1,3,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPower,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getIntValue,local1,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getIntValue,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,88,<>> = <<org.sunflow.core.SceneParser:parse,argmnt,1,<null>>,D,D>;<<org.sunflow.core.parser.TriParser:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceFinalGather,local1,22,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceFinalGather,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:distanceTo,parmtr,1,<>> = <<org.sunflow.math.Point3:distanceTo,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,parmtr,3,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,3,<null>>,D,D>;<<org.sunflow.image.Color:getMax,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,72,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,72,<null>>,E,E>;
<org.sunflow.core.ParameterList:getTexCoord,local1,7,<>> = <<org.sunflow.core.ParameterList:getTexCoord,local1,7,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,73,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,local1,73,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefractionPhoton,parmtr,2,<>> = <<org.sunflow.core.LightServer:traceRefractionPhoton,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRefractionDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,171,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,171,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,local1,84,<>> = <<org.dacapo.parser.ConfigFile:outputFile,local1,84,<null>>,E,E>;
<org.apache.commons.cli.UnrecognizedOptionException:getOption,retrn,3,<>> = <<org.apache.commons.cli.UnrecognizedOptionException:getOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.UnrecognizedOptionException:getOption,retrn,3,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:next,parmtr,1,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:next,callback,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,28,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,28,<null>>,E,E>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,163,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,163,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPrimitiveBound,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,589,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,419,<>> = <<org.sunflow.image.Color:exp,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:unHex,local1,3,<>> = <<org.dacapo.parser.ConfigFile:unHex,argmnt,2,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:lineCount,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:lineCount,argmnt,2,<null>>,D,D>;
<org.sunflow.math.Matrix4:rotateZ,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:rotateZ,retrn,2,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:clinit,local1,65,<>> = <<org.dacapo.parser.Config$ThreadModel:clinit,local1,65,<null>>,E,E>;
<org.dacapo.harness.TeeOutputStream:version,local1,27,<>> = <<org.dacapo.harness.TeeOutputStream:version,local1,27,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,58,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:toString,local1,14,<>> = <<org.sunflow.math.Point3:toString,local1,14,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,133,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.core.filter.FilterFactory:get,retrn,29,<>> = <<org.sunflow.core.filter.GaussianFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.FilterFactory:get,retrn,29,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,local1,7,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:shader,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,240,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,local1,73,<>> = <<org.sunflow.util.FastHashMap:put,local1,73,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,467,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,467,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addInteger,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Digest:create,retrn,4,<>> = <<org.dacapo.harness.Digest:create,retrn,4,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,259,<>> = <<org.sunflow.system.UI$Module:clinit,local1,259,<null>>,E,E>;
<org.sunflow.core.ShadingState:traceRefraction,local1,60,<>> = <<org.sunflow.core.ShadingState:traceRefraction,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceRefraction,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,660,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,660,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflectionPhoton,parmtr,3,<>> = <<org.sunflow.core.LightServer:traceReflectionPhoton,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,103,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,103,<null>>,E,E>;
<org.dacapo.parser.Config:addSize,local1,7,<>> = <<org.dacapo.parser.Config$Size:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,254,<>> = <<org.apache.commons.cli.Parser:parse,local1,254,<null>>,D,D>;
<org.sunflow.core.InstanceList:getWorldBounds,retrn,2,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:getWorldBounds,retrn,2,<null>>,D,D>;<<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,827,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:print,parmtr,2,<>> = <<org.sunflow.system.ui.ConsoleInterface:print,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,50,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,local1,12,<>> = <<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:getPrimitiveBound,parmtr,1,<>> = <<org.sunflow.core.InstanceList:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$100,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$100,retrn,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,54,<>> = <<org.sunflow.core.ShadingState:specularPhong,argmnt,1,<null>>,D,D>;
<org.sunflow.core.filter.FilterFactory:get,retrn,48,<>> = <<org.sunflow.core.filter.MitchellFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.FilterFactory:get,retrn,48,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,15,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,15,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:intersect,local1,694,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,694,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,210,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,argmnt,2,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,local1,25,<>> = <<org.dacapo.harness.Benchmark:run,local1,25,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,285,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,285,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLight:init,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLight:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI$PointLight:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:update,parmtr,2,<>> = <<org.sunflow.core.shader.MirrorShader:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getColor,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:init,parmtr,2,<>> = <<org.dacapo.parser.Config:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:addSample,parmtr,1,<>> = <<org.sunflow.core.ShadingState:addSample,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,470,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.BoxFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Filter:getSize,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:init,parmtr,1,<>> = <<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getBound,local1,59,<>> = <<org.sunflow.math.BoundingBox:getBound,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflection,local1,20,<>> = <<org.sunflow.core.LightServer:traceReflection,local1,20,<null>>,E,E>;
<org.sunflow.core.Ray:init,parmtr,1,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,8,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupGeometry,retrn,7,<>> = <<org.sunflow.SunflowAPI:lookupGeometry,retrn,7,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,318,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,318,<null>>,E,E>;
<org.sunflow.Benchmark:kernelEnd,local1,154,<>> = <<org.sunflow.Benchmark:kernelEnd,local1,154,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,local1,206,<>> = <<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:outputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,parmtr,2,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,argmnt,2,<null>>,D,D>;<<org.sunflow.util.IntArray:add,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:asRowMajor,parmtr,1,<>> = <<org.sunflow.math.Matrix4:asRowMajor,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,442,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,442,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getTargetVar,local1,10,<>> = <<org.dacapo.harness.CommandLineArgs:getTargetVar,local1,10,<null>>,D,D>;
<org.dacapo.harness.TestHarness:isValidThreadCount,local1,3,<>> = <<org.dacapo.parser.Config:getThreadLimit,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:isValidThreadCount,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadCount,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,11,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:reset,local1,49,<>> = <<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:add,local1,10,<>> = <<java.util.List:add,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:add,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOptionGroup,parmtr,2,<>> = <<org.apache.commons.cli.Options:addOptionGroup,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.OptionGroup:getOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.OptionGroup:isRequired,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,113,<>> = <<org.sunflow.SunflowAPI:compile,local1,113,<null>>,E,E>;
<org.sunflow.core.ShadingState:createPhotonState,parmtr,6,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createPhotonState,argmnt,6,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,85,<>> = <<org.sunflow.util.IntArray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:trim,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:sub,parmtr,3,<>> = <<org.sunflow.math.Vector3:sub,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.Config:parse,local1,1,<>> = <<org.dacapo.parser.Config:parse,local1,1,<null>>,E,E>;
<org.sunflow.image.Color:isInf,parmtr,1,<>> = <<org.sunflow.image.Color:isInf,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:mid,retrn,4,<>> = <<org.sunflow.math.Point3:mid,argmnt,4,<null>>,D,D>;<<org.sunflow.math.Point3:mid,retrn,4,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceFinalGather,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceFinalGather,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,local1,31,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceRefraction,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,21,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,4,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:addDesc,parmtr,1,<>> = <<org.dacapo.parser.Config:addDesc,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:clinit,local1,2,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,2,<null>>,E,E>;
<org.dacapo.parser.Config$Size:setDesc,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:setDesc,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:intersect,local1,267,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,267,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,112,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,241,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,241,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,local1,179,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,local1,179,<null>>,D,D>;
<org.sunflow.core.Instance:transformNormalWorldToObject,retrn,25,<>> = <<org.sunflow.core.Instance:transformNormalWorldToObject,retrn,25,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,364,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,364,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:clinit,local1,29,<>> = <<org.dacapo.harness.Callback$Mode:clinit,local1,29,<null>>,E,E>;
<org.dacapo.parser.Config:setFilterScratch,local1,7,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:build,local1,40,<>> = <<org.sunflow.core.Geometry:build,local1,40,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$2100,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$2100,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:hasNext,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:hasNext,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:hasNext,callback,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,219,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:unpackZipStream,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3400,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3400,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3400,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,60,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,60,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:access$300,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:access$300,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjAddStates,local1,17,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjAddStates,local1,17,<null>>,E,E>;
<org.sunflow.core.LightServer:initLightSamples,parmtr,2,<>> = <<org.sunflow.core.LightServer:initLightSamples,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPoint,local1,16,<>> = <<org.sunflow.core.ParameterList:getPoint,local1,16,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,173,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,187,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;<<org.sunflow.core.BucketOrder:getBucketSequence,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$900,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$900,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getStringValue,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,parmtr,3,<>> = <<org.dacapo.harness.Benchmark:unpackZipFileResource,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getVerbose,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getVerbose,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Ray:transform,retrn,1,<>> = <<org.sunflow.core.Ray:transform,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:transform,retrn,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,65,<>> = <<org.dacapo.harness.Sunflow:init,local1,65,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getMinimum,retrn,3,<>> = <<org.sunflow.math.BoundingBox:getMinimum,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMinimum,retrn,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,158,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,158,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,local1,52,<>> = <<org.sunflow.core.ParameterList:clear,local1,52,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:init,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:init,argmnt,2,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:init,callback,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,70,<>> = <<org.dacapo.harness.Benchmark:validate,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:hasDigest,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:hasLines,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:filterScratch,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:hasBytes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:checkExists,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getOutputs,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getBytes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getDigest,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getLines,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:isTextFile,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,79,<>> = <<org.dacapo.harness.Callback:runAgain,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,145,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,145,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,324,<>> = <<org.sunflow.core.Scene:render,local1,324,<null>>,E,E>;
<org.sunflow.util.FastHashMap$Entry:getKey,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$Entry:getKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,192,<>> = <<org.sunflow.core.gi.InstantGI:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,275,<>> = <<org.sunflow.SunflowAPI:create,local1,275,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,2,<>> = <<org.sunflow.core.accel.KDTree:build,local1,2,<null>>,E,E>;
<org.dacapo.harness.DacapoClassLoader:create,local1,127,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,127,<null>>,D,D>;
<org.dacapo.harness.Callback:init,parmtr,2,<>> = <<org.dacapo.harness.Callback:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:init,argmnt,2,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getDebug,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getWindow,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getMethodology,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,935,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,437,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Filter:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,43,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,43,<null>>,D,D>;
<org.sunflow.core.LightServer:getIrradiance,parmtr,2,<>> = <<org.sunflow.core.LightServer:getIrradiance,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,26,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,26,<null>>,E,E>;
<org.sunflow.math.Matrix4:fromBasis,local1,26,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,parmtr,1,<>> = <<org.sunflow.core.ShadingState:occlusion,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceShadow,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getBasis,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:init,parmtr,2,<>> = <<org.sunflow.math.Vector3:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,517,<>> = <<org.dacapo.harness.TestHarness:main,local1,517,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:getId,parmtr,1,<>> = <<org.apache.commons.cli.Option:getId,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,retrn,32,<>> = <<org.sunflow.core.LightServer:getRadiance,retrn,32,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getResult,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setResult,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVectorArray,local1,4,<>> = <<org.sunflow.core.ParameterList:getVectorArray,local1,4,<null>>,E,E>;
<org.sunflow.image.Color:clinit,local1,15,<>> = <<org.sunflow.image.Color:clinit,local1,15,<null>>,E,E>;
<org.sunflow.core.Scene:render,local1,558,<>> = <<org.sunflow.math.BoundingBox:getExtents,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,22,<>> = <<java.lang.String:charAt,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.FileDigest:main,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,local1,14,<>> = <<org.apache.commons.cli.Option:equals,local1,14,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,274,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,274,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$200,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$200,retrn,3,<null>>,D,D>;
<org.dacapo.harness.DacapoException:init,parmtr,1,<>> = <<org.dacapo.harness.DacapoException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,local1,47,<>> = <<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:getWorldBounds,local1,33,<>> = <<org.sunflow.core.InstanceList:getWorldBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceTransparency,local1,3,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:setRadiance,parmtr,2,<>> = <<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:setRadiance,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,7,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<Harness:main,parmtr,2,<>> = <<Harness:main,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getMaxIterations,local1,10,<>> = <<org.dacapo.harness.CommandLineArgs:getMaxIterations,local1,10,<null>>,D,D>;
<org.sunflow.core.Geometry:getBakingPrimitives,parmtr,1,<>> = <<org.sunflow.core.Geometry:getBakingPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,136,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,136,<null>>,D,D>;
<org.sunflow.system.UI:taskCanceled,local1,8,<>> = <<org.sunflow.system.UI:taskCanceled,local1,8,<null>>,E,E>;
<org.sunflow.math.BoundingBox:include,local1,7,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,2,<null>>,D,D>;
<org.sunflow.system.Memory:bytesToString,retrn,23,<>> = <<org.sunflow.system.Memory:bytesToString,retrn,23,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,110,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,110,<null>>,E,E>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,81,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,715,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Ray:init,parmtr,1,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceRefractionPhoton,local1,3,<>> = <<org.sunflow.core.ShadingState:traceRefractionPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PhotonStore:allowRefractionBounced,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,parmtr,1,<>> = <<org.dacapo.harness.Callback:complete,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,local1,124,<>> = <<org.apache.commons.cli.PosixParser:burstToken,local1,124,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,385,<>> = <<org.sunflow.util.IntArray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:trim,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:init,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,57,<>> = <<java.lang.Enum:name,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:toString,callback,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,parmtr,3,<>> = <<org.sunflow.SunflowAPI:light,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,35,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,35,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,370,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformTransposeVX,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformTransposeVX,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getPreserve,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getPreserve,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,1,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$600,parmtr,4,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$600,argmnt,4,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,local1,16,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.IntersectionState:getStackTop,local1,3,<>> = <<org.sunflow.core.IntersectionState:getStackTop,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,3,<>> = <<org.dacapo.harness.Benchmark:initialize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,parmtr,2,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,parmtr,3,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,argmnt,3,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,151,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,151,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,78,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,78,<null>>,E,E>;
<org.sunflow.SunflowAPI:update,parmtr,2,<>> = <<org.sunflow.SunflowAPI:update,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,81,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:init,parmtr,2,<>> = <<org.sunflow.core.InstanceList:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,234,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,local1,154,<>> = <<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,local1,154,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,155,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,14,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,14,<null>>,E,E>;
<org.sunflow.math.BoundingBox:intersects,local1,7,<>> = <<org.sunflow.math.BoundingBox:intersects,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPrimitiveBound,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,169,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,169,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,local1,25,<>> = <<org.apache.commons.cli.Option:toString,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addTexCoords,local1,13,<>> = <<org.sunflow.core.ParameterList:addTexCoords,local1,13,<null>>,E,E>;
<org.apache.commons.cli.UnrecognizedOptionException:getOption,parmtr,1,<>> = <<org.apache.commons.cli.UnrecognizedOptionException:getOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,371,<>> = <<java.lang.Thread:join,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,17,<>> = <<org.sunflow.SunflowAPI:geometry,local1,17,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,8,<>> = <<org.sunflow.core.accel.KDTree:build,local1,8,<null>>,D,D>;
<org.dacapo.harness.TestHarness:bmInfo,local1,3,<>> = <<org.dacapo.harness.TestHarness:bmInfo,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;
<org.sunflow.core.filter.FilterFactory:get,retrn,11,<>> = <<org.sunflow.core.filter.BoxFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.FilterFactory:get,retrn,11,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,713,<>> = <<org.sunflow.core.accel.KDTree:build,local1,713,<null>>,E,E>;
<org.sunflow.RenderObjectMap:update,local1,80,<>> = <<org.sunflow.RenderObjectMap:update,local1,80,<null>>,E,E>;
<org.dacapo.parser.Config:setThreadLimit,parmtr,2,<>> = <<org.dacapo.parser.Config:setThreadLimit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getString,local1,19,<>> = <<org.sunflow.core.ParameterList:getString,local1,19,<null>>,E,E>;
<org.sunflow.SunflowAPI:getCurrentFrame,parmtr,1,<>> = <<org.sunflow.SunflowAPI:getCurrentFrame,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertXYZtoRGB,retrn,68,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<org.sunflow.image.RGBSpace:convertXYZtoRGB,retrn,68,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrix,local1,16,<>> = <<org.sunflow.core.ParameterList:getMatrix,local1,16,<null>>,E,E>;
<org.apache.commons.cli.Options:getRequiredOptions,retrn,3,<>> = <<org.apache.commons.cli.Options:getRequiredOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:getRequiredOptions,retrn,3,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,422,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:hasNoValues,local1,3,<>> = <<java.util.List:isEmpty,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasNoValues,argmnt,1,<null>>,D,D>;
<org.sunflow.util.IntArray:init,parmtr,1,<>> = <<org.sunflow.util.IntArray:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:init,local1,12,<>> = <<org.codehaus.janino.util.CausedException:init,local1,12,<null>>,D,D>;
<org.apache.commons.cli.Parser:setOptions,local1,8,<>> = <<org.apache.commons.cli.Parser:setOptions,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:kernelEnd,local1,142,<>> = <<org.sunflow.Benchmark:kernelEnd,local1,142,<null>>,E,E>;
<org.sunflow.core.Instance:transformVectorObjectToWorld,parmtr,1,<>> = <<org.sunflow.core.Instance:transformVectorObjectToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertXYZtoRGB,parmtr,2,<>> = <<org.sunflow.image.RGBSpace:convertXYZtoRGB,argmnt,2,<null>>,D,D>;<<org.sunflow.image.XYZColor:getZ,argmnt,1,<null>>,D,D>;<<org.sunflow.image.XYZColor:getY,argmnt,1,<null>>,D,D>;<<org.sunflow.image.XYZColor:getX,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,113,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,113,<null>>,E,E>;
<org.sunflow.core.ShadingState:getLightServer,retrn,3,<>> = <<org.sunflow.core.ShadingState:getLightServer,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getLightServer,retrn,3,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,16,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,16,<null>>,E,E>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,160,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,160,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,150,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupModifier,local1,3,<>> = <<org.sunflow.SunflowAPI:lookupModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:lookupModifier,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:parse,retrn,10,<>> = <<org.dacapo.parser.Config:parse,retrn,10,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,143,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,143,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,29,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,29,<null>>,E,E>;
<org.sunflow.core.ShadingState:getRasterX,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getRasterX,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,55,<>> = <<java.util.jar.Attributes:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,14,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,14,<null>>,E,E>;
<org.sunflow.core.LightServer:showStats,local1,191,<>> = <<org.sunflow.core.LightServer:showStats,local1,191,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:build,local1,6,<>> = <<org.sunflow.Benchmark$BenchmarkScene:build,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:intersects,local1,32,<>> = <<org.sunflow.math.BoundingBox:intersects,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3100,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3100,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:init,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,local1,4,<>> = <<org.sunflow.SunflowAPI:options,local1,4,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,parmtr,3,<>> = <<org.sunflow.core.shader.DiffuseShader:scatterPhoton,argmnt,3,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getPhotonShader,retrn,24,<>> = <<org.sunflow.core.LightServer:getPhotonShader,retrn,24,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,300,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,300,<null>>,E,E>;
<org.sunflow.core.Scene:trace,local1,47,<>> = <<org.sunflow.core.AccelerationStructure:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoord,retrn,31,<>> = <<org.sunflow.core.ParameterList:getTexCoord,retrn,31,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,311,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:getKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:init,local1,3,<>> = <<org.sunflow.core.tesselatable.Teapot:init,local1,3,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,44,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:dumpObj,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,parmtr,7,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,7,<null>>,D,D>;
<org.dacapo.parser.Config$1:clinit,local1,1,<>> = <<org.dacapo.parser.Config$1:clinit,local1,1,<null>>,E,E>;
<org.sunflow.system.Timer:end,parmtr,1,<>> = <<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,1147,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,1147,<null>>,D,D>;
<org.sunflow.core.ShadingState:createGlossyBounceState,parmtr,3,<>> = <<org.sunflow.core.ShadingState:createGlossyBounceState,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.NullAccelerator:build,parmtr,2,<>> = <<org.sunflow.core.accel.NullAccelerator:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.NullAccelerator:build,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,5,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,670,<>> = <<org.dacapo.harness.TestHarness:main,local1,670,<null>>,E,E>;
<org.sunflow.image.Color:blend,parmtr,3,<>> = <<org.sunflow.image.Color:blend,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:init,parmtr,1,<>> = <<org.apache.commons.cli.MissingOptionException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.ParseException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:modifier,parmtr,3,<>> = <<org.sunflow.SunflowAPI:modifier,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,471,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,504,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,504,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,1135,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,1135,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,4784,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,4784,<null>>,E,E>;
<org.apache.commons.cli.Options:addOptionGroup,local1,20,<>> = <<org.apache.commons.cli.Options:addOptionGroup,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:setRadiance,local1,4,<>> = <<org.sunflow.core.LightSample:setRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,parmtr,5,<>> = <<org.sunflow.core.ShadingState:occlusion,argmnt,5,<null>>,D,D>;
<org.sunflow.core.ParameterList:addString,local1,4,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,716,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.OptionValidator:init,parmtr,1,<>> = <<org.apache.commons.cli.OptionValidator:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:check,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:check,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,374,<>> = <<org.sunflow.core.ShadingState:specularPhong,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDepth,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,76,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,76,<null>>,E,E>;
<org.dacapo.parser.Config:setThreadFactor,local1,3,<>> = <<org.dacapo.parser.Config:setThreadFactor,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:bmSizes,local1,6,<>> = <<org.dacapo.harness.TestHarness:bmSizes,local1,6,<null>>,E,E>;
<org.sunflow.math.BoundingBox:init,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:main,local1,20,<>> = <<org.sunflow.image.RGBSpace:main,local1,20,<null>>,D,D>;
<org.dacapo.parser.Config:addDesc,parmtr,3,<>> = <<org.dacapo.parser.Config:addDesc,argmnt,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,parmtr,7,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,argmnt,7,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,113,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,113,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloat,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloat,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,12,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,87,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getCameraToWorld,retrn,18,<>> = <<org.sunflow.core.ShadingState:getCameraToWorld,retrn,18,<null>>,D,D>;
<org.dacapo.parser.Config:parse,parmtr,2,<>> = <<org.dacapo.parser.Config:parse,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,150,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,26,<>> = <<org.sunflow.core.Camera:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:processOptionToken,local1,39,<>> = <<org.apache.commons.cli.PosixParser:processOptionToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,parmtr,1,<>> = <<org.sunflow.core.shader.DiffuseShader:scatterPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.DiffuseShader:getDiffuse,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,local1,3,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,7,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,392,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:contains,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:contains,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,21,<>> = <<org.sunflow.math.QMC:clinit,local1,21,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,20,<>> = <<java.net.URL:getFile,argmnt,1,<null>>,D,D>;<<java.net.URL:openConnection,argmnt,1,<null>>,D,D>;<<java.net.URL:getProtocol,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,321,<>> = <<org.sunflow.core.Instance:update,local1,321,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetSuffix,local1,17,<>> = <<org.dacapo.parser.SimpleCharStream:GetSuffix,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,261,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:inverse,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:determinant,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,6,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,6,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,43,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,114,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,74,<>> = <<org.dacapo.harness.TestHarness:init,local1,74,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:access$1900,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1900,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupGeometry,local1,9,<>> = <<org.sunflow.RenderObjectMap:lookupGeometry,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:write,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:write,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:write,callback,1,<null>>,D,D>;<<java.io.FilterOutputStream:flush,argmnt,1,<null>>,D,D>;<<java.io.FilterOutputStream:write,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:integer,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,local1,27,<>> = <<org.sunflow.core.ParameterList:add,local1,27,<null>>,D,D>;
<org.codehaus.janino.CompileException:init,parmtr,1,<>> = <<org.codehaus.janino.CompileException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:readChar,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:UpdateLineColumn,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:FillBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupInstance,retrn,29,<>> = <<org.sunflow.RenderObjectMap:lookupInstance,retrn,29,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,1,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:parse,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,retrn,193,<>> = <<org.sunflow.system.SearchPath:resolvePath,retrn,193,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,234,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,234,<null>>,D,D>;
<org.sunflow.math.QMC:halton,local1,158,<>> = <<org.sunflow.math.QMC:halton,local1,158,<null>>,E,E>;
<org.sunflow.math.Vector3:negate,retrn,2,<>> = <<org.sunflow.math.Vector3:negate,argmnt,2,<null>>,D,D>;<<org.sunflow.math.Vector3:negate,retrn,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1600,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1600,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:getValue,parmtr,1,<>> = <<org.apache.commons.cli.Option:getValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValue,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,169,<>> = <<org.sunflow.SunflowAPI:create,local1,169,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,local1,188,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,188,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,433,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,433,<null>>,D,D>;
<org.apache.commons.cli.Option:getKey,retrn,10,<>> = <<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getKey,retrn,10,<null>>,D,D>;
<org.sunflow.Benchmark:taskStart,parmtr,1,<>> = <<org.sunflow.Benchmark:taskStart,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,85,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupInstance,parmtr,1,<>> = <<org.sunflow.SunflowAPI:lookupInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,parmtr,2,<>> = <<org.sunflow.core.Scene:getRadiance,argmnt,2,<null>>,D,D>;<<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,local1,7,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:light,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,6,<>> = <<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,6,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:updateScene,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,89,<>> = <<org.sunflow.Benchmark:init,local1,89,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,150,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,150,<null>>,E,E>;
<org.sunflow.math.Matrix4:blend,parmtr,3,<>> = <<org.sunflow.math.Matrix4:blend,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,297,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,59,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,59,<null>>,E,E>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,288,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,288,<null>>,E,E>;
<org.sunflow.image.Color:madd,parmtr,3,<>> = <<org.sunflow.image.Color:madd,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,1,<>> = <<org.dacapo.parser.ConfigFile:ReInit,local1,1,<null>>,E,E>;
<org.sunflow.core.ShadingState:addSample,local1,4,<>> = <<org.sunflow.core.ShadingState:addSample,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:addSample,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:addSample,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,retrn,117,<>> = <<org.sunflow.core.Ray:normalize,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:getRay,retrn,117,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,86,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:fromBasis,local1,39,<>> = <<org.sunflow.math.Matrix4:fromBasis,local1,39,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,67,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,67,<null>>,D,D>;
<org.sunflow.core.Options:update,parmtr,1,<>> = <<org.sunflow.core.Options:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,169,<>> = <<org.sunflow.core.Instance:update,local1,169,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,retrn,5,<>> = <<org.sunflow.core.ShadingState:specularPhong,retrn,5,<null>>,D,D>;<<org.sunflow.image.Color:madd,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,47,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addMatrices,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addMatrices,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,194,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,194,<null>>,D,D>;
<org.sunflow.image.Color:add,retrn,1,<>> = <<org.sunflow.image.Color:add,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:add,retrn,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,150,<>> = <<org.sunflow.Benchmark:init,local1,150,<null>>,D,D>;
<org.sunflow.math.Point2:toString,local1,5,<>> = <<org.sunflow.math.Point2:toString,local1,5,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getFloatValue,local1,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getFloatValue,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,113,<>> = <<org.dacapo.harness.Callback:complete,local1,113,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,local1,4,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,local1,4,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:setDebugStream,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:setDebugStream,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceGlossy,local1,28,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupLight,parmtr,1,<>> = <<org.sunflow.SunflowAPI:lookupLight,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVector,retrn,31,<>> = <<org.sunflow.core.ParameterList:getVector,retrn,31,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_ntk,local1,23,<>> = <<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:getNextToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,47,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,retrn,442,<>> = <<org.sunflow.image.Color:add,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.GlassShader:getRadiance,retrn,442,<null>>,D,D>;<<org.sunflow.image.Color:madd,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,75,<>> = <<org.dacapo.harness.Callback:complete,local1,75,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,3938,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,3938,<null>>,E,E>;
<org.dacapo.harness.Benchmark:init,parmtr,3,<>> = <<org.dacapo.harness.Benchmark:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Ray:getMin,parmtr,1,<>> = <<org.sunflow.core.Ray:getMin,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printWarning,parmtr,2,<>> = <<org.sunflow.system.UI:printWarning,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,53,<>> = <<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,22,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,175,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,169,<>> = <<org.sunflow.core.LightServer:showStats,local1,169,<null>>,D,D>;
<org.sunflow.math.Point3:mid,parmtr,3,<>> = <<org.sunflow.math.Point3:mid,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getFloatArray,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:traceBake,parmtr,2,<>> = <<org.sunflow.core.Scene:traceBake,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Geometry:prepareShadingState,parmtr,1,<>> = <<org.sunflow.core.Geometry:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,4,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,4,<null>>,E,E>;
<org.sunflow.core.accel.NullAccelerator:intersect,parmtr,3,<>> = <<org.sunflow.core.accel.NullAccelerator:intersect,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,506,<>> = <<org.dacapo.harness.TestHarness:main,local1,506,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertXYZtoRGB,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:convertXYZtoRGB,argmnt,1,<null>>,D,D>;<<org.sunflow.image.RGBSpace:convertXYZtoRGB,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformTransposeVY,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformTransposeVY,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,139,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,606,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,606,<null>>,E,E>;
<org.sunflow.math.QMC:clinit,local1,87,<>> = <<org.sunflow.math.QMC:clinit,local1,87,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,local1,25,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,local1,25,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,187,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,187,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,906,<>> = <<org.sunflow.core.accel.KDTree:build,local1,906,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:clinit,local1,1,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,1,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,120,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,120,<null>>,D,D>;
<org.dacapo.harness.Benchmark:cleanup,local1,17,<>> = <<org.dacapo.harness.Benchmark:cleanup,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,2,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,734,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupCamera,local1,3,<>> = <<org.sunflow.SunflowAPI:lookupCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:lookupCamera,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:update,parmtr,3,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:update,argmnt,3,<null>>,D,D>;
<org.sunflow.core.camera.PinholeLens:update,parmtr,1,<>> = <<org.sunflow.core.camera.PinholeLens:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.camera.PinholeLens:update,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,16,<>> = <<org.dacapo.parser.Config:print,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,273,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,48,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,parmtr,9,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,9,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,151,<>> = <<org.sunflow.core.LightServer:addShadingCache,local1,151,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,local1,61,<>> = <<org.sunflow.core.LightServer:traceRefraction,local1,61,<null>>,E,E>;
<org.dacapo.harness.Benchmark:getURL,local1,39,<>> = <<org.dacapo.harness.Benchmark:getURL,local1,39,<null>>,D,D>;
<org.dacapo.parser.Config:pad,parmtr,1,<>> = <<org.dacapo.parser.Config:pad,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,parmtr,4,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,4,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,parmtr,7,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,7,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,218,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,99,<>> = <<org.apache.commons.cli.Parser:processProperties,local1,99,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,200,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,200,<null>>,E,E>;
<org.sunflow.core.ShadingState:setResult,parmtr,2,<>> = <<org.sunflow.core.ShadingState:setResult,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setResult,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,531,<>> = <<org.dacapo.harness.Benchmark:validate,local1,531,<null>>,E,E>;
<org.sunflow.core.IntersectionState:getRobustStack,retrn,3,<>> = <<org.sunflow.core.IntersectionState:getRobustStack,retrn,3,<null>>,D,D>;<<org.sunflow.core.IntersectionState:getRobustStack,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,334,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,334,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,687,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,687,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,local1,28,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,12,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,12,<null>>,E,E>;
<org.dacapo.harness.Benchmark:postIterationCleanup,local1,68,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getArgs,retrn,11,<>> = <<org.apache.commons.cli.CommandLine:getArgs,retrn,11,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,724,<>> = <<org.sunflow.core.accel.KDTree:build,local1,724,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,42,<>> = <<org.dacapo.harness.Benchmark:unpackZipStream,local1,42,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getInts,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getInts,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,216,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1200,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1200,argmnt,2,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,retrn,3,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,3,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:transform,retrn,3,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,local1,42,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:sampled,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,2,<null>>,D,D>;
<org.sunflow.core.InstanceList:prepareShadingState,parmtr,1,<>> = <<org.sunflow.core.InstanceList:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadCount,parmtr,1,<>> = <<org.dacapo.parser.Config:getThreadCount,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadFactor,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,274,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$100,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$100,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$100,retrn,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:createGlossyBounceState,retrn,2,<>> = <<org.sunflow.core.ShadingState:createGlossyBounceState,retrn,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,3374,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,3374,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,149,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,149,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupLight,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:lookupLight,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getCameraToWorld,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getCameraToWorld,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa11_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa11_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,404,<>> = <<org.dacapo.parser.ConfigFile:sizeClause,local1,404,<null>>,E,E>;
<org.sunflow.Benchmark:imagePrepare,parmtr,1,<>> = <<org.sunflow.Benchmark:imagePrepare,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getTimeoutDialation,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getTimeoutDialation,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,local1,4,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,253,<>> = <<org.sunflow.image.RGBSpace:toString,local1,253,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,201,<>> = <<org.sunflow.core.renderer.SimpleRenderer:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,61,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,61,<null>>,D,D>;<<org.sunflow.core.bucket.RowBucketOrder:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,parmtr,12,<>> = <<org.sunflow.core.accel.KDTree:buildTree,argmnt,12,<null>>,D,D>;<<org.sunflow.util.IntArray:add,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:validate,local1,23,<>> = <<org.dacapo.harness.Sunflow:validate,local1,23,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,43,<>> = <<java.io.BufferedInputStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,107,<>> = <<org.sunflow.core.LightServer:showStats,local1,107,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileInScratch,local1,7,<>> = <<org.dacapo.harness.Benchmark:fileInScratch,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefractionPhoton,local1,46,<>> = <<org.sunflow.core.LightServer:traceRefractionPhoton,local1,46,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,321,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,126,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,126,<null>>,E,E>;
<org.sunflow.Benchmark:imageEnd,parmtr,1,<>> = <<org.sunflow.Benchmark:imageEnd,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getRay,retrn,3,<>> = <<org.sunflow.core.ShadingState:getRay,retrn,3,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:madd,retrn,1,<>> = <<org.sunflow.image.Color:madd,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:madd,retrn,1,<null>>,D,D>;
<org.sunflow.core.LightSample:getShadowRay,parmtr,1,<>> = <<org.sunflow.core.LightSample:getShadowRay,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,29,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,29,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getType,parmtr,1,<>> = <<org.apache.commons.cli.Option:getType,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,3,<null>>,D,D>;
<org.sunflow.core.InstanceList:update,parmtr,1,<>> = <<org.sunflow.core.InstanceList:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,297,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,271,<>> = <<org.sunflow.system.UI$Module:clinit,local1,271,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,388,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,426,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,426,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,514,<>> = <<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,parmtr,1,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,local1,53,<>> = <<org.sunflow.SunflowAPI:light,local1,53,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createRefractionBounceState,parmtr,3,<>> = <<org.sunflow.core.ShadingState:createRefractionBounceState,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,246,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,246,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,parmtr,2,<>> = <<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:getMin,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,82,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,102,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,102,<null>>,D,D>;
<org.sunflow.image.Color:toNonLinear,local1,17,<>> = <<org.sunflow.image.Color:toNonLinear,local1,17,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,238,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,238,<null>>,E,E>;
<org.apache.commons.cli.MissingArgumentException:init,local1,12,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,82,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,82,<null>>,D,D>;
<org.dacapo.parser.Config:setBytes,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,32,<>> = <<org.sunflow.core.Scene:getRadiance,local1,32,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:traceShadow,local1,21,<>> = <<org.sunflow.core.Scene:traceShadow,local1,21,<null>>,E,E>;
<org.dacapo.harness.Callback$1:clinit,local1,6,<>> = <<org.dacapo.harness.Callback$1:clinit,local1,6,<null>>,E,E>;
<org.dacapo.parser.Config:setExists,local1,8,<>> = <<org.dacapo.parser.Config:setExists,local1,8,<null>>,D,D>;
<org.sunflow.core.ParameterList:getInt,local1,7,<>> = <<org.sunflow.core.ParameterList:getInt,local1,7,<null>>,D,D>;
<org.sunflow.system.SearchPath:resetSearchPath,parmtr,1,<>> = <<org.sunflow.system.SearchPath:resetSearchPath,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,86,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,14,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,14,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:init,local1,22,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,500,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,500,<null>>,E,E>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,89,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,15,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,15,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,39,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,39,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefractionPhoton,local1,21,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceRefractionPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:taskStart,parmtr,2,<>> = <<org.sunflow.system.UI:taskStart,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Callback:stop,parmtr,1,<>> = <<org.dacapo.harness.Callback:stop,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:stop,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,11,<>> = <<java.security.CodeSource:getLocation,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,71,<>> = <<org.sunflow.core.Geometry:tesselate,local1,71,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,456,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,456,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,33,<>> = <<org.sunflow.SunflowAPI:create,local1,33,<null>>,E,E>;
<org.apache.commons.cli.Options:getOption,parmtr,2,<>> = <<org.apache.commons.cli.Options:getOption,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,485,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,485,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:closeLog,local1,7,<>> = <<org.dacapo.harness.TeeOutputStream:closeLog,argmnt,1,<null>>,D,D>;<<java.io.OutputStream:close,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:flush,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,684,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,684,<null>>,E,E>;
<org.sunflow.math.Matrix4:fromBasis,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:fromBasis,retrn,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,396,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,52,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.filter.FilterFactory:get,retrn,120,<>> = <<org.sunflow.core.filter.LanczosFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.FilterFactory:get,retrn,120,<null>>,D,D>;
<org.sunflow.core.Instance:transformNormalWorldToObject,retrn,9,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformNormalWorldToObject,retrn,9,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,323,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,323,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,196,<>> = <<org.sunflow.image.Color:clinit,local1,196,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,31,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,31,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,934,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadFactor,local1,32,<>> = <<org.dacapo.parser.Config:setThreadFactor,local1,32,<null>>,E,E>;
<org.sunflow.core.Scene:render,local1,15,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,301,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,301,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,142,<>> = <<org.dacapo.harness.TestHarness:main,local1,142,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:prepare,parmtr,1,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,15,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,15,<null>>,E,E>;
<org.sunflow.math.Vector3:lengthSquared,parmtr,1,<>> = <<org.sunflow.math.Vector3:lengthSquared,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,54,<>> = <<org.dacapo.harness.Benchmark:validate,local1,54,<null>>,E,E>;
<org.sunflow.core.shader.DiffuseShader:update,local1,7,<>> = <<org.sunflow.core.shader.DiffuseShader:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,586,<>> = <<org.dacapo.harness.Benchmark:validate,local1,586,<null>>,E,E>;
<org.sunflow.core.ParameterList:getVectorArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getVectorArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloatParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:initLightSamples,parmtr,1,<>> = <<org.sunflow.core.LightServer:initLightSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,local1,25,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point2:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:set,parmtr,2,<>> = <<org.sunflow.math.Point3:set,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,62,<>> = <<java.lang.Integer:parseInt,argmnt,2,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromW,local1,12,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1057,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,parmtr,4,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,argmnt,4,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,15,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,15,<null>>,E,E>;
<org.sunflow.RenderObjectMap:init,local1,7,<>> = <<org.sunflow.RenderObjectMap:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,319,<>> = <<java.io.File:getParentFile,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptions,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1900,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1900,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1900,argmnt,2,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromW,local1,132,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,98,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,parmtr,1,<>> = <<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupGeometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:init,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$BucketThread:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,77,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,77,<null>>,E,E>;
<org.dacapo.parser.Config:parse,local1,3,<>> = <<org.dacapo.parser.Config:parse,local1,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,52,<>> = <<org.dacapo.harness.TestHarness:dump,local1,52,<null>>,E,E>;
<org.sunflow.core.LightServer:getIrradiance,retrn,30,<>> = <<org.sunflow.core.LightServer:getIrradiance,retrn,30,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,394,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,394,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,local1,1,<>> = <<org.dacapo.harness.Benchmark:run,local1,1,<null>>,E,E>;
<org.sunflow.RenderObjectMap:put,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,50,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,50,<null>>,E,E>;
<org.dacapo.harness.Benchmark:getURL,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:getURL,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:stopIteration,local1,18,<>> = <<org.dacapo.harness.Benchmark:stopIteration,local1,18,<null>>,E,E>;
<org.sunflow.image.RGBSpace:main,local1,2,<>> = <<org.sunflow.image.RGBSpace:main,local1,2,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,64,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,64,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,150,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:version,local1,45,<>> = <<org.dacapo.harness.TeeOutputStream:version,local1,45,<null>>,D,D>;
<org.sunflow.core.IntersectionState:hit,local1,3,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$1700,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$1700,argmnt,2,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,349,<>> = <<org.sunflow.core.LightServer:build,local1,349,<null>>,D,D>;
<org.sunflow.core.Ray:dot,parmtr,1,<>> = <<org.sunflow.core.Ray:dot,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,341,<>> = <<org.sunflow.core.ShadingState:specularPhong,local1,341,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,29,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,72,<>> = <<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:getAverage,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,local1,19,<>> = <<java.lang.Thread:setContextClassLoader,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,retrn,40,<>> = <<org.dacapo.harness.FileDigest:get,retrn,40,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,86,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,86,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,501,<>> = <<org.sunflow.image.RGBSpace:toString,local1,501,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,136,<>> = <<org.sunflow.core.Instance:update,local1,136,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:outputClause,local1,223,<>> = <<org.dacapo.parser.ConfigFile:digestOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:outputClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setTextFile,local1,12,<>> = <<org.dacapo.parser.Config:setTextFile,local1,12,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,9,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,9,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,109,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,109,<null>>,E,E>;
<org.sunflow.image.Color:mul,retrn,4,<>> = <<org.sunflow.image.Color:mul,argmnt,4,<null>>,D,D>;<<org.sunflow.image.Color:mul,retrn,4,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:access$200,retrn,3,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$200,retrn,3,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:access$200,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:getModifier,local1,3,<>> = <<org.sunflow.core.Instance:getModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,19,<>> = <<java.io.StringReader:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:version,local1,1,<>> = <<org.dacapo.harness.TeeOutputStream:version,local1,1,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,1689,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,1689,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,11,<>> = <<org.sunflow.core.Tesselatable:tesselate,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printError,parmtr,4,<>> = <<org.sunflow.system.UI:printError,argmnt,4,<null>>,D,D>;
<Harness:makeHarnessClassLoader,retrn,119,<>> = <<Harness:makeHarnessClassLoader,retrn,119,<null>>,D,D>;<<Harness:makeHarnessClassLoader,retrn,119,<null>>,D,D>;<<Harness:makeHarnessClassLoader,retrn,119,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,2,<>> = <<org.sunflow.core.IntersectionState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:valueOf,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:valueOf,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addString,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addString,argmnt,3,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getResult,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:fromBasis,parmtr,2,<>> = <<org.sunflow.math.Matrix4:fromBasis,argmnt,2,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:remove,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$Entry:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceReflectionPhoton,parmtr,3,<>> = <<org.sunflow.core.ShadingState:traceReflectionPhoton,argmnt,3,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getDiffuseDepth,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,57,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,57,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,parmtr,2,<>> = <<org.dacapo.parser.Config:preprocessArgs,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,993,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,993,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,150,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,150,<null>>,D,D>;
<org.sunflow.core.ShadingState:storePhoton,parmtr,2,<>> = <<org.sunflow.core.ShadingState:storePhoton,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:getNextToken,retrn,35,<>> = <<org.dacapo.parser.ConfigFile:getNextToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getNextToken,retrn,35,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getNextToken,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,retrn,86,<>> = <<org.dacapo.harness.DacapoClassLoader:getJars,retrn,86,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,270,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,270,<null>>,E,E>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,109,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,109,<null>>,E,E>;
<org.dacapo.parser.Config$Size:addOutputFile,local1,12,<>> = <<org.dacapo.parser.Config$Size:addOutputFile,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_ntk,local1,4,<>> = <<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:scatterPhoton,parmtr,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:scatterPhoton,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,2,<>> = <<java.io.FileWriter:init,argmnt,1,<null>>,D,D>;<<java.io.FileWriter:write,argmnt,1,<null>>,D,D>;<<java.io.FileWriter:close,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,5,<>> = <<org.dacapo.harness.Callback:start,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,31,<>> = <<org.sunflow.math.BoundingBox:toString,local1,31,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,436,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,238,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,238,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,250,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,250,<null>>,E,E>;
<org.sunflow.core.ShadingState:initCausticSamples,local1,3,<>> = <<org.sunflow.core.LightServer:initCausticSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:initCausticSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,75,<>> = <<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,75,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:setSmallTriangles,local1,6,<>> = <<org.sunflow.core.primitive.TriangleMesh:setSmallTriangles,local1,6,<null>>,E,E>;
<org.sunflow.core.ParameterList:getTexCoord,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getTexCoord,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflection,parmtr,2,<>> = <<org.sunflow.core.LightServer:traceReflection,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getReflectionDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,13,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,local1,13,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getIterations,local1,10,<>> = <<org.dacapo.harness.CommandLineArgs:getIterations,local1,10,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,208,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,208,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:remove,argmnt,2,<null>>,D,D>;
<org.sunflow.core.InstanceList:getNumPrimitives,local1,7,<>> = <<org.sunflow.core.InstanceList:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,971,<>> = <<org.sunflow.core.accel.KDTree:build,local1,971,<null>>,D,D>;
<org.sunflow.core.ShadingState:getV,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getV,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,432,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,432,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getColumn,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:getColumn,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:enableValidationReport,local1,14,<>> = <<java.io.FileWriter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,358,<>> = <<org.dacapo.parser.ConfigFile:outputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,795,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,795,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,321,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,321,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,546,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,546,<null>>,D,D>;
<org.sunflow.core.LightServer:traceFinalGather,parmtr,3,<>> = <<org.sunflow.core.LightServer:traceFinalGather,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,181,<>> = <<org.sunflow.core.ShadingState:occlusion,local1,181,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,584,<>> = <<org.sunflow.core.LightServer:build,local1,584,<null>>,D,D>;
<org.dacapo.parser.Config:setDigest,parmtr,4,<>> = <<org.dacapo.parser.Config:setDigest,argmnt,4,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeSpec,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:sizeSpec,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:init,local1,22,<>> = <<org.dacapo.parser.Config$Size:init,argmnt,1,<null>>,D,D>;<<java.util.LinkedHashMap:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:hashCode,local1,26,<>> = <<org.apache.commons.cli.Option:hashCode,argmnt,1,<null>>,D,D>;<<java.lang.String:hashCode,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hashCode,callback,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,parmtr,2,<>> = <<org.apache.commons.cli.Parser:processOption,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,216,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,216,<null>>,D,D>;
<org.sunflow.image.Color:getMax,parmtr,1,<>> = <<org.sunflow.image.Color:getMax,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,387,<>> = <<org.sunflow.core.Scene:render,local1,387,<null>>,D,D>;
<org.sunflow.Benchmark:execute,parmtr,1,<>> = <<org.sunflow.Benchmark:execute,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPoint,retrn,6,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,retrn,6,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,25,<>> = <<org.apache.commons.cli.Parser:parse,local1,25,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,80,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,local1,80,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,local1,99,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,352,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,352,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,local1,6,<>> = <<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getBinary,local1,25,<>> = <<org.dacapo.harness.FileDigest:getBinary,local1,25,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,local1,71,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,71,<null>>,E,E>;
<org.sunflow.image.Color:toString,retrn,38,<>> = <<org.sunflow.image.Color:toString,retrn,38,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,parmtr,1,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,14,<>> = <<org.sunflow.core.accel.KDTree:build,local1,14,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:hasOption,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:resolveOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,266,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,266,<null>>,E,E>;
<org.sunflow.core.ParameterList:addPoints,local1,36,<>> = <<org.sunflow.core.ParameterList:addPoints,local1,36,<null>>,E,E>;
<org.sunflow.core.ShadingState$LightSampleIterator:next,retrn,6,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:next,callback,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:next,retrn,6,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:init,argmnt,1,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,368,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getBoolean,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloat,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromWV,local1,28,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:version,local1,53,<>> = <<org.dacapo.harness.TeeOutputStream:version,argmnt,1,<null>>,D,D>;<<java.io.OutputStream:close,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,383,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:intersects,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:intersects,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:validate,parmtr,2,<>> = <<org.dacapo.harness.Sunflow:validate,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,300,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:init,local1,18,<>> = <<org.apache.commons.cli.CommandLine:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileFromInputStream,local1,26,<>> = <<org.dacapo.harness.Benchmark:fileFromInputStream,local1,26,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,184,<>> = <<org.dacapo.harness.Callback:runAgain,local1,184,<null>>,E,E>;
<org.apache.commons.cli.Option:add,parmtr,1,<>> = <<org.apache.commons.cli.Option:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:values,retrn,5,<>> = <<org.sunflow.core.ParameterList$InterpolationType:values,retrn,5,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,31,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,local1,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,local1,2,<null>>,E,E>;
<org.sunflow.system.UI$Module:clinit,local1,278,<>> = <<org.sunflow.system.UI$Module:clinit,local1,278,<null>>,E,E>;
<org.sunflow.core.LightServer$1:run,local1,329,<>> = <<org.sunflow.core.LightServer$1:run,local1,329,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:init,parmtr,2,<>> = <<org.dacapo.harness.TeeOutputStream:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,729,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,847,<>> = <<org.sunflow.image.Color:madd,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:toString,local1,34,<>> = <<org.sunflow.image.Color:toString,local1,34,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,348,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:createNode,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getPrimitiveBound,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,22,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:valueOf,parmtr,2,<>> = <<org.sunflow.core.ParameterList$ParameterType:valueOf,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoordArray,local1,4,<>> = <<org.sunflow.core.ParameterList:getTexCoordArray,local1,4,<null>>,E,E>;
<org.dacapo.harness.Benchmark:cleanup,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:cleanup,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printInfo,parmtr,3,<>> = <<org.sunflow.system.UI:printInfo,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:getTrianglePoints,local1,12,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,172,<>> = <<org.sunflow.Benchmark:init,local1,172,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,153,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,139,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,139,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,105,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,105,<null>>,E,E>;
<org.sunflow.SunflowAPI:compile,parmtr,2,<>> = <<org.sunflow.SunflowAPI:compile,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,120,<>> = <<org.dacapo.parser.Config:print,local1,120,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$900,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$900,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1100,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1100,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getIntValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,180,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,180,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:flush,local1,7,<>> = <<org.dacapo.harness.TeeOutputStream:flush,argmnt,1,<null>>,D,D>;<<java.io.FilterOutputStream:flush,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:flush,callback,1,<null>>,D,D>;<<java.io.OutputStream:flush,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Timer:toString,retrn,32,<>> = <<org.sunflow.system.Timer:toString,retrn,32,<null>>,D,D>;
<org.sunflow.math.Vector3:add,parmtr,2,<>> = <<org.sunflow.math.Vector3:add,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,local1,27,<>> = <<org.sunflow.SunflowAPI:options,local1,27,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,55,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,83,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,212,<>> = <<java.lang.Thread:join,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,330,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,428,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,428,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,parmtr,1,<>> = <<org.sunflow.system.ui.ConsoleInterface:taskUpdate,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,retrn,2,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,retrn,2,<null>>,D,D>;<<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Util:stripLeadingAndTrailingQuotes,retrn,20,<>> = <<org.apache.commons.cli.Util:stripLeadingAndTrailingQuotes,retrn,20,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:endsWith,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getIrradiance,parmtr,3,<>> = <<org.sunflow.core.LightServer:getIrradiance,argmnt,3,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,3656,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,3656,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getWindow,local1,10,<>> = <<org.dacapo.harness.CommandLineArgs:getWindow,local1,10,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:run,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:preIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:startIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:iterate,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:validate,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:stopIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:postIteration,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,168,<>> = <<org.sunflow.core.Scene:getRadiance,local1,168,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,parmtr,1,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getOutputs,parmtr,1,<>> = <<org.dacapo.parser.Config:getOutputs,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,240,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,240,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,parmtr,3,<>> = <<org.dacapo.parser.ConfigFile:outputFile,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa5_0,local1,21,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa5_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:getWorldBounds,local1,10,<>> = <<org.sunflow.core.Geometry:getWorldBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Tesselatable:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getSize,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getSize,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOption,retrn,39,<>> = <<org.apache.commons.cli.Options:getOption,retrn,39,<null>>,D,D>;
<org.dacapo.harness.DacapoException:init,parmtr,1,<>> = <<org.dacapo.harness.DacapoException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,49,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,110,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformV,parmtr,2,<>> = <<org.sunflow.math.Matrix4:transformV,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getStringArray,local1,7,<>> = <<org.sunflow.core.ParameterList:getStringArray,local1,7,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,34,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,retrn,399,<>> = <<org.sunflow.SunflowAPI:init,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parse,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:create,retrn,399,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,143,<>> = <<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:values,retrn,5,<>> = <<org.dacapo.parser.Config$ThreadModel:values,retrn,5,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,parmtr,4,<>> = <<org.sunflow.core.ParameterList:isValidParameter,argmnt,4,<null>>,D,D>;<<java.lang.Enum:name,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setSizeDescription,parmtr,2,<>> = <<org.dacapo.parser.Config:setSizeDescription,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,85,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:createMessage,local1,23,<>> = <<org.apache.commons.cli.MissingOptionException:createMessage,local1,23,<null>>,E,E>;
<org.dacapo.parser.Config:getBytes,parmtr,2,<>> = <<org.dacapo.parser.Config:getBytes,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,348,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,120,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,120,<null>>,E,E>;
<org.sunflow.image.RGBSpace:main,local1,32,<>> = <<org.sunflow.image.RGBSpace:main,local1,32,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:backup,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:backup,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:inc,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:inc,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:hasNext,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:readable,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:inc,callback,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,33,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,33,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,498,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,498,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,482,<>> = <<org.sunflow.core.shader.DiffuseShader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:contains,local1,16,<>> = <<org.sunflow.math.BoundingBox:contains,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,77,<>> = <<org.sunflow.core.Geometry:tesselate,local1,77,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:update,parmtr,3,<>> = <<org.sunflow.core.shader.GlassShader:update,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:intersectPrimitive,parmtr,2,<>> = <<org.sunflow.core.primitive.Sphere:intersectPrimitive,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:getMin,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,73,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,73,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,9,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setClass,parmtr,2,<>> = <<org.dacapo.parser.Config:setClass,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setClass,argmnt,2,<null>>,D,D>;
<org.sunflow.math.Point3:distanceToSquared,parmtr,1,<>> = <<org.sunflow.math.Point3:distanceToSquared,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:finalize,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:finalize,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:finalize,callback,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:close,argmnt,1,<null>>,D,D>;<<java.lang.Object:finalize,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:flush,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,220,<>> = <<org.sunflow.system.UI$Module:clinit,local1,220,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,710,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,710,<null>>,D,D>;
<org.dacapo.parser.Config:parse,local1,2,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:configFile,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getValidate,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getValidate,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,parmtr,3,<>> = <<org.apache.commons.cli.Parser:processOption,argmnt,3,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,357,<>> = <<org.sunflow.image.RGBSpace:toString,local1,357,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,605,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,605,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,11,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,argmnt,1,<null>>,D,D>;<<java.lang.Enum:name,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,180,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,180,<null>>,E,E>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,8156,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,8156,<null>>,E,E>;
<org.dacapo.parser.Config:setBytes,parmtr,1,<>> = <<org.dacapo.parser.Config:setBytes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,314,<>> = <<java.util.List:isEmpty,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,897,<>> = <<org.sunflow.core.accel.KDTree:build,local1,897,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,57,<>> = <<org.sunflow.core.Scene:render,local1,57,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,local1,1,<null>>,E,E>;
<org.sunflow.image.Color:blend,retrn,5,<>> = <<org.sunflow.image.Color:blend,retrn,5,<null>>,D,D>;<<org.sunflow.image.Color:blend,argmnt,5,<null>>,D,D>;
<org.sunflow.core.Scene:init,local1,43,<>> = <<org.sunflow.core.Scene:init,local1,43,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,119,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,163,<>> = <<org.sunflow.core.accel.KDTree:build,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMaximum,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMinimum,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeHit,local1,15,<>> = <<org.sunflow.core.Shader:getRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadCount,local1,63,<>> = <<java.lang.Runtime:availableProcessors,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:reset,local1,62,<>> = <<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,58,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloats,local1,12,<>> = <<org.sunflow.core.ParameterList:addFloats,local1,12,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,local1,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,local1,2,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:updateBounds,local1,8,<>> = <<org.sunflow.core.Instance:updateBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getBoolean,local1,19,<>> = <<org.sunflow.core.ParameterList:getBoolean,local1,19,<null>>,E,E>;
<org.sunflow.core.LightServer:traceDiffusePhoton,parmtr,4,<>> = <<org.sunflow.core.LightServer:traceDiffusePhoton,argmnt,4,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,205,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,205,<null>>,E,E>;
<org.dacapo.harness.FileDigest:get,local1,32,<>> = <<java.security.MessageDigest:digest,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:dot,parmtr,2,<>> = <<org.sunflow.core.LightSample:dot,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,382,<>> = <<org.sunflow.core.LightServer:build,local1,382,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,142,<>> = <<org.sunflow.core.Instance:update,local1,142,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceDiffusePhoton,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceDiffusePhoton,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:version,local1,12,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shaderOverride,local1,8,<>> = <<org.sunflow.SunflowAPI:shaderOverride,local1,8,<null>>,D,D>;
<org.dacapo.harness.Benchmark:postIterationCleanup,local1,15,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,18,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,106,<>> = <<org.sunflow.image.RGBSpace:toString,local1,106,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getEndLine,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:getEndLine,argmnt,1,<null>>,D,D>;
<org.sunflow.core.IntersectionState:init,local1,32,<>> = <<org.sunflow.core.IntersectionState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.IntersectionState$StackNode:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:flipV,local1,3,<>> = <<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:flipV,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,410,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,local1,98,<>> = <<org.apache.commons.cli.Option:toString,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:toString,callback,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArg,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArgs,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,309,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,568,<>> = <<org.sunflow.image.Color:toNonLinear,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:setCommandLineOptions,local1,52,<>> = <<org.dacapo.harness.Benchmark:enableValidationReport,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:init,parmtr,2,<>> = <<org.dacapo.parser.Config$ThreadModel:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,234,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,local1,9,<>> = <<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,argmnt,1,<null>>,D,D>;<<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,281,<>> = <<org.dacapo.parser.ParseException:initialise,local1,281,<null>>,D,D>;
<org.dacapo.parser.Config:getOutputs,local1,10,<>> = <<org.dacapo.parser.Config:getOutputs,local1,10,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,66,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,66,<null>>,E,E>;
<org.sunflow.core.ParameterList:getMatrixArray,local1,4,<>> = <<org.sunflow.core.ParameterList:getMatrixArray,local1,4,<null>>,E,E>;
<org.sunflow.math.Point3:sub,parmtr,2,<>> = <<org.sunflow.math.Point3:sub,argmnt,2,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,38,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:isKept,local1,10,<>> = <<org.dacapo.parser.Config:isKept,local1,10,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,33,<>> = <<org.dacapo.harness.Benchmark:extractFileResource,local1,33,<null>>,D,D>;
<org.apache.commons.cli.Option:init,parmtr,2,<>> = <<org.apache.commons.cli.Option:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,432,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,73,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getGlobalRadiance,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:config,local1,15,<>> = <<org.dacapo.parser.ConfigFile:config,local1,15,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,84,<>> = <<org.dacapo.parser.Config:describe,local1,84,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:startIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:augmentSystemProperties,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,local1,6,<>> = <<org.dacapo.parser.ParseException:init,local1,6,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,9,<>> = <<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,134,<>> = <<org.apache.commons.cli.Parser:parse,local1,134,<null>>,E,E>;
<org.sunflow.core.ParameterList:addInteger,local1,4,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadLimit,local1,3,<>> = <<org.dacapo.parser.Config:setThreadLimit,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,109,<>> = <<org.apache.commons.cli.Parser:processProperties,local1,109,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,local1,415,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,415,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,354,<>> = <<org.sunflow.SunflowAPI:create,local1,354,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1800,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1800,retrn,3,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,50,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,50,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,parmtr,2,<>> = <<org.dacapo.parser.ParseException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,4502,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,4502,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$2800,retrn,4,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2800,retrn,4,<null>>,D,D>;
<org.sunflow.core.LightServer:getScene,parmtr,1,<>> = <<org.sunflow.core.LightServer:getScene,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,384,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setTextFile,parmtr,1,<>> = <<org.dacapo.parser.Config:setTextFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,389,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:add,local1,4,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,1,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,1,<null>>,E,E>;
<org.dacapo.harness.DacapoClassLoader:create,local1,89,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,89,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,239,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,239,<null>>,E,E>;
<org.dacapo.parser.Config:getThreadCount,local1,2,<>> = <<org.dacapo.parser.Config:getThreadCount,local1,2,<null>>,E,E>;
<org.sunflow.core.LightServer:shadingCache,parmtr,1,<>> = <<org.sunflow.core.LightServer:shadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,441,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,441,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,93,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,93,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getLocation,retrn,3,<>> = <<org.codehaus.janino.util.LocatedException:getLocation,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:getLocation,retrn,3,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,1,<>> = <<org.apache.commons.cli.Parser:processProperties,local1,1,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersectBox,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersectBox,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,205,<>> = <<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,205,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,91,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,91,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,parmtr,1,<>> = <<org.sunflow.core.ShadingState:diffuse,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIrradiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:init,parmtr,1,<>> = <<org.dacapo.parser.TokenMgrError:init,argmnt,1,<null>>,D,D>;<<java.lang.Error:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflection,local1,61,<>> = <<org.sunflow.core.LightServer:traceReflection,local1,61,<null>>,E,E>;
<org.dacapo.parser.Config:printThreadModel,local1,60,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,60,<null>>,E,E>;
<org.dacapo.parser.Config$Size:init,parmtr,3,<>> = <<org.dacapo.parser.Config$Size:init,argmnt,3,<null>>,D,D>;<<org.dacapo.parser.Config$Size:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:validate,local1,15,<>> = <<org.dacapo.harness.Sunflow:validate,argmnt,1,<null>>,D,D>;<<java.lang.reflect.Method:invoke,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,76,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,236,<>> = <<org.sunflow.system.UI$Module:clinit,local1,236,<null>>,E,E>;
<org.sunflow.core.primitive.Sphere:intersectPrimitive,parmtr,1,<>> = <<org.sunflow.core.primitive.Sphere:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:class$,local1,8,<>> = <<org.codehaus.janino.util.CausedException:class$,local1,8,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,526,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,526,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:render,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Display:imageEnd,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Display:imageBegin,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,local1,5,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,local1,21,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:update,local1,10,<>> = <<org.sunflow.core.shader.MirrorShader:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:newLog,local1,8,<>> = <<org.dacapo.harness.TeeOutputStream:newLog,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:kernelEnd,local1,185,<>> = <<org.sunflow.Benchmark:kernelEnd,local1,185,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,349,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,270,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,270,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceGlossy,local1,3,<>> = <<org.sunflow.core.ShadingState:traceGlossy,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceGlossy,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getArgs,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getArgs,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,42,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,42,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,292,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,292,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:init,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,43,<>> = <<org.apache.commons.cli.CommandLine:getOptionProperties,local1,43,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,202,<>> = <<org.dacapo.parser.ConfigFile:sizeClause,local1,202,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,5630,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,5630,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,local1,3,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:hasOption,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,162,<>> = <<org.dacapo.harness.Callback:runAgain,local1,162,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:init,parmtr,1,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,33,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,33,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,86,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:distanceToSquared,parmtr,1,<>> = <<org.sunflow.math.Point3:distanceToSquared,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,48,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,48,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,154,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,216,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,216,<null>>,E,E>;
<org.sunflow.core.ShadingState:createReflectionBounceState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:createReflectionBounceState,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,local1,24,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:getKey,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,local1,6,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,local1,6,<null>>,E,E>;
<org.sunflow.core.shader.MirrorShader:update,local1,7,<>> = <<org.sunflow.core.shader.MirrorShader:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,70,<>> = <<org.dacapo.harness.Sunflow:init,local1,70,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$1000,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1000,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:setDescription,parmtr,1,<>> = <<org.apache.commons.cli.Option:setDescription,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,17,<>> = <<org.dacapo.harness.Callback:init,local1,17,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:makeOption,parmtr,5,<>> = <<org.dacapo.harness.CommandLineArgs:makeOption,argmnt,5,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,86,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,86,<null>>,D,D>;
<org.dacapo.parser.Token:newToken,parmtr,3,<>> = <<org.dacapo.parser.Token:newToken,argmnt,3,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,58,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:removeShader,parmtr,1,<>> = <<org.sunflow.core.Instance:removeShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,167,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,167,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,205,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,205,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceReflectionPhoton,local1,15,<>> = <<org.sunflow.core.ShadingState:traceReflectionPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceReflectionPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertXYZtoRGB,retrn,15,<>> = <<org.sunflow.image.RGBSpace:convertXYZtoRGB,retrn,15,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,225,<>> = <<org.sunflow.core.ShadingState:getResult,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,152,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,152,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,56,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,56,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,183,<>> = <<org.dacapo.harness.FileDigest:main,local1,183,<null>>,D,D>;
<org.sunflow.SunflowAPI:reset,parmtr,1,<>> = <<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Timer:toString,local1,2,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,125,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,125,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,321,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,321,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:update,local1,82,<>> = <<org.sunflow.core.shader.GlassShader:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,parmtr,2,<>> = <<org.sunflow.core.ShadingState:diffuse,argmnt,2,<null>>,D,D>;<<org.sunflow.image.Color:isBlack,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,local1,153,<>> = <<org.apache.commons.cli.PosixParser:flatten,local1,153,<null>>,E,E>;
<org.sunflow.math.BoundingBox:getCenter,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:getCenter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1087,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1087,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,12,<>> = <<java.util.zip.ZipEntry:getName,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,local1,3,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,51,<>> = <<org.apache.commons.cli.Option:hasArg,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:isRequired,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,local1,3,<>> = <<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,14,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,14,<null>>,E,E>;
<org.sunflow.util.FastHashMap:get,local1,11,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,parmtr,2,<>> = <<org.dacapo.harness.Callback:complete,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:run,argmnt,2,<null>>,D,D>;<<org.dacapo.harness.Callback:start,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:stop,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,retrn,2,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:getRay,retrn,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addStringArray,local1,16,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,3,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,281,<>> = <<org.sunflow.image.RGBSpace:toString,local1,281,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,182,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,182,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,74,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,74,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,583,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,583,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,parmtr,2,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:getMin,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,191,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,99,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:normal,parmtr,4,<>> = <<org.sunflow.math.Point3:normal,argmnt,4,<null>>,D,D>;
<org.sunflow.SunflowAPI:resolveTextureFilename,retrn,7,<>> = <<org.sunflow.SunflowAPI:resolveTextureFilename,retrn,7,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1700,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1700,retrn,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,76,<>> = <<org.sunflow.SunflowAPI:render,local1,76,<null>>,E,E>;
<org.dacapo.harness.FileDigest:get,retrn,52,<>> = <<org.dacapo.harness.FileDigest:get,retrn,52,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:next,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:next,callback,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getIrradiance,local1,3,<>> = <<org.sunflow.core.LightServer:getIrradiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.GIEngine:getIrradiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:getWorldBounds,local1,38,<>> = <<org.sunflow.core.InstanceList:getWorldBounds,local1,38,<null>>,D,D>;
<org.dacapo.parser.Config:addSize,local1,3,<>> = <<org.dacapo.parser.Config:addSize,argmnt,1,<null>>,D,D>;<<java.util.HashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,330,<>> = <<org.sunflow.core.Scene:render,local1,330,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,86,<>> = <<java.io.BufferedInputStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,953,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,local1,9,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,168,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,168,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:init,local1,21,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,21,<null>>,D,D>;
<org.sunflow.core.Geometry:update,local1,17,<>> = <<org.sunflow.core.Geometry:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.RenderObject:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,252,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,89,<>> = <<java.net.URLClassLoader:newInstance,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupShader,local1,3,<>> = <<org.sunflow.SunflowAPI:lookupShader,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:lookupShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getString,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,249,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:main,local1,14,<>> = <<org.sunflow.image.RGBSpace:main,local1,14,<null>>,E,E>;
<org.dacapo.parser.Config:describeSizes,local1,76,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,14,<>> = <<org.dacapo.harness.Benchmark:prepareJars,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:iterator,retrn,2,<>> = <<org.sunflow.util.FastHashMap:iterator,retrn,2,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:configOption,local1,65,<>> = <<org.dacapo.parser.ConfigFile:configOption,local1,65,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:prepare,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:prepare,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,retrn,7,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,retrn,7,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,198,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$1:clinit,local1,1,<>> = <<org.dacapo.harness.Callback$1:clinit,local1,1,<null>>,E,E>;
<org.sunflow.RenderObjectMap:remove,local1,55,<>> = <<org.sunflow.RenderObjectMap:remove,local1,55,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,519,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,519,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,78,<>> = <<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,52,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descElement,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:descElement,argmnt,2,<null>>,D,D>;<<org.dacapo.parser.Config:addDesc,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,local1,23,<>> = <<org.sunflow.SunflowAPI:light,local1,23,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,parmtr,2,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,249,<>> = <<org.sunflow.core.Display:imageFill,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:processNonOptionToken,local1,7,<>> = <<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArg,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:valueOf,parmtr,2,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:valueOf,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getNumPrimitives,local1,3,<>> = <<org.sunflow.core.primitive.TriangleMesh:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadCount,parmtr,2,<>> = <<org.dacapo.parser.Config:getThreadCount,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:getGlobalRadiance,local1,9,<>> = <<org.sunflow.core.LightServer:getGlobalRadiance,local1,9,<null>>,E,E>;
<org.dacapo.parser.Config:isTextFile,local1,7,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadePhoton,parmtr,2,<>> = <<org.sunflow.core.LightServer:shadePhoton,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,565,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getCamera,parmtr,1,<>> = <<org.sunflow.core.Scene:getCamera,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadLimit,local1,36,<>> = <<org.dacapo.parser.Config:setThreadLimit,local1,36,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getIrradiance,retrn,18,<>> = <<org.sunflow.image.Color:madd,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI:getIrradiance,retrn,18,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_1,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_1,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,parmtr,10,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,10,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateBVH2,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateLeaf,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateInner,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:traceShadow,parmtr,1,<>> = <<org.sunflow.core.Scene:traceShadow,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,60,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,60,<null>>,E,E>;
<org.sunflow.core.LightServer:traceGlossy,parmtr,3,<>> = <<org.sunflow.core.LightServer:traceGlossy,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:prepare,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:setLongOpt,parmtr,2,<>> = <<org.apache.commons.cli.Option:setLongOpt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:setLongOpt,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,50,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,50,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,parmtr,6,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,6,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,244,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,20,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,14,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,local1,14,<null>>,E,E>;
<org.sunflow.image.Color:toString,parmtr,1,<>> = <<org.sunflow.image.Color:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:toString,callback,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,23,<>> = <<org.sunflow.SunflowAPI:geometry,local1,23,<null>>,D,D>;
<org.apache.commons.cli.Util:stripLeadingHyphens,retrn,2,<>> = <<org.apache.commons.cli.Util:stripLeadingHyphens,argmnt,2,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Util:stripLeadingHyphens,retrn,2,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$700,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$700,retrn,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:validate,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,25,<>> = <<org.dacapo.harness.TestHarness:dump,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,13,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:init,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,parmtr,8,<>> = <<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,8,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,777,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,777,<null>>,D,D>;
<org.sunflow.math.Vector3:set,parmtr,2,<>> = <<org.sunflow.math.Vector3:set,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,225,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createDiffuseBounceState,retrn,2,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createDiffuseBounceState,retrn,2,<null>>,D,D>;
<org.dacapo.parser.Config:pad,local1,18,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:imageUpdate,local1,42,<>> = <<org.sunflow.Benchmark:imageUpdate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,312,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:containsKey,local1,48,<>> = <<org.sunflow.util.FastHashMap:containsKey,local1,48,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,11,<>> = <<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,11,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,233,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,233,<null>>,E,E>;
<org.dacapo.harness.Benchmark:prepareJars,local1,89,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,814,<>> = <<org.sunflow.image.Color:getRGB,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,206,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,206,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,245,<>> = <<org.dacapo.parser.ConfigFile:sizeClause,local1,245,<null>>,D,D>;
<org.sunflow.image.Color:toLinear,retrn,1,<>> = <<org.sunflow.image.Color:toLinear,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:toLinear,retrn,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:addArg,local1,3,<>> = <<java.util.List:add,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:addArg,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,parmtr,1,<>> = <<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformNormalObjectToWorld,retrn,9,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformNormalObjectToWorld,retrn,9,<null>>,D,D>;
<org.dacapo.parser.Token:toString,parmtr,1,<>> = <<org.dacapo.parser.Token:toString,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,98,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,98,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:init,local1,15,<>> = <<org.sunflow.core.renderer.BucketRenderer:init,local1,15,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:init,parmtr,2,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:init,callback,2,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:setShaderOverride,parmtr,2,<>> = <<org.sunflow.core.Scene:setShaderOverride,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI:taskCancel,local1,2,<>> = <<org.sunflow.system.UI:taskCancel,local1,2,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,parmtr,5,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,5,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2300,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2300,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,17,<>> = <<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,17,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,43,<>> = <<org.sunflow.SunflowAPI:render,local1,43,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,194,<>> = <<java.lang.String:replace,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:modifier,local1,53,<>> = <<org.sunflow.SunflowAPI:modifier,local1,53,<null>>,D,D>;
<org.dacapo.parser.Config:getArgs,parmtr,2,<>> = <<org.dacapo.parser.Config:getArgs,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,local1,48,<>> = <<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,local1,48,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,4,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,local1,4,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:setSmallTriangles,local1,27,<>> = <<org.sunflow.core.primitive.TriangleMesh:setSmallTriangles,local1,27,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,71,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,71,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,local1,86,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,parmtr,1,<>> = <<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,parmtr,2,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRasterY,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRasterX,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:mul,parmtr,2,<>> = <<org.sunflow.image.Color:mul,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:intersectPrimitive,local1,111,<>> = <<org.sunflow.core.primitive.Sphere:intersectPrimitive,local1,111,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,474,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,474,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,3,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:access$300,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$300,argmnt,2,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:renderBucket,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,219,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,219,<null>>,D,D>;
<org.sunflow.core.ParameterList:getString,local1,16,<>> = <<org.sunflow.core.ParameterList:getString,local1,16,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,415,<>> = <<org.sunflow.image.RGBSpace:toString,local1,415,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,112,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:update,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,parmtr,1,<>> = <<org.sunflow.SunflowAPI:shader,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupShader,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:main,parmtr,2,<>> = <<org.sunflow.image.RGBSpace:main,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,209,<>> = <<org.sunflow.image.RGBSpace:toString,local1,209,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,115,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,115,<null>>,D,D>;
<org.sunflow.core.ParameterList:addVectors,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addVectors,argmnt,2,<null>>,D,D>;
<org.sunflow.util.IntArray:set,local1,3,<>> = <<org.sunflow.util.IntArray:set,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:containsKey,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:containsKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,592,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,592,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,retrn,87,<>> = <<org.sunflow.math.BoundingBox:toString,retrn,87,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapWU,local1,9,<>> = <<org.sunflow.math.OrthoNormalBasis:swapWU,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:swapWU,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,18,<>> = <<org.sunflow.core.PrimitiveList:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getVector,retrn,13,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getVector,retrn,13,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,152,<>> = <<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,152,<null>>,D,D>;
<org.sunflow.util.FastHashMap:clinit,local1,2,<>> = <<org.sunflow.util.FastHashMap:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,128,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,local1,128,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,local1,6,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,27,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:ReInit,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:processNonOptionToken,local1,29,<>> = <<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,60,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:init,local1,12,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:formatOutput,local1,5,<>> = <<org.sunflow.system.UI:formatOutput,local1,5,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,110,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,local1,110,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:libraries,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:libraries,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,21,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,14,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,14,<null>>,E,E>;
<org.sunflow.math.Point3:normal,parmtr,3,<>> = <<org.sunflow.math.Point3:normal,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightSample:isValid,local1,3,<>> = <<org.sunflow.core.LightSample:isValid,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,local1,13,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,94,<>> = <<org.apache.commons.cli.CommandLine:getOptionProperties,local1,94,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,22,<>> = <<org.dacapo.parser.Config:print,local1,22,<null>>,D,D>;
<org.sunflow.image.Color:toNonLinear,local1,31,<>> = <<org.sunflow.image.Color:toNonLinear,local1,31,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,65,<>> = <<org.sunflow.image.RGBSpace:toString,local1,65,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,parmtr,3,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,argmnt,3,<null>>,D,D>;<<org.sunflow.core.IntersectionState:getStackTop,argmnt,1,<null>>,D,D>;<<org.sunflow.core.IntersectionState:getStack,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:remove,parmtr,1,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:remove,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:remove,callback,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,449,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,449,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:SkipLexicalActions,parmtr,2,<>> = <<org.dacapo.parser.ConfigFileTokenManager:SkipLexicalActions,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,251,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,parmtr,2,<>> = <<org.dacapo.parser.Config:setThreadLimit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:addSize,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeClause,argmnt,2,<null>>,D,D>;<<org.dacapo.parser.Config:setSizeDescription,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setThreadFactor,argmnt,1,<null>>,D,D>;
<org.sunflow.util.IntArray:add,local1,7,<>> = <<org.sunflow.util.IntArray:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,local1,197,<>> = <<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,local1,197,<null>>,D,D>;
<org.sunflow.util.IntArray:init,parmtr,1,<>> = <<org.sunflow.util.IntArray:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:values,retrn,5,<>> = <<org.sunflow.system.UI$Module:values,retrn,5,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,628,<>> = <<org.sunflow.core.accel.KDTree:build,local1,628,<null>>,E,E>;
<org.sunflow.core.LightServer:addShadingCache,local1,52,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,46,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$1:clinit,local1,2,<>> = <<org.dacapo.parser.Config$1:clinit,local1,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:init,local1,30,<>> = <<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,389,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,389,<null>>,E,E>;
<org.dacapo.parser.Token:init,parmtr,1,<>> = <<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,7,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,7,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:getRadiance,parmtr,1,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1058,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1058,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,142,<>> = <<org.sunflow.SunflowAPI:create,local1,142,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,61,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,61,<null>>,D,D>;
<org.dacapo.harness.Benchmark:revertClassLoader,local1,9,<>> = <<java.lang.Thread:setContextClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:intersect,local1,10,<>> = <<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,local1,27,<>> = <<org.codehaus.janino.util.LocatedException:getMessage,local1,27,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,149,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,149,<null>>,D,D>;
<org.sunflow.core.ParameterList:addColor,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addColor,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addMatrices,parmtr,4,<>> = <<org.sunflow.core.ParameterList:addMatrices,argmnt,4,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,220,<>> = <<org.sunflow.core.LightServer:showStats,local1,220,<null>>,E,E>;
<org.sunflow.SunflowAPI:geometry,local1,68,<>> = <<org.sunflow.SunflowAPI:geometry,local1,68,<null>>,E,E>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,52,<>> = <<org.sunflow.core.accel.KDTree:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,52,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,10,<>> = <<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,10,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getFloatValue,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getFloatValue,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getBakingPrimitives,retrn,6,<>> = <<org.sunflow.core.Instance:getBakingPrimitives,retrn,6,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getValidate,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getValidate,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,47,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addFloats,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Options:update,local1,20,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:getKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getShader,retrn,17,<>> = <<org.sunflow.core.LightServer:getShader,retrn,17,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,264,<>> = <<org.apache.commons.cli.Parser:parse,local1,264,<null>>,E,E>;
<org.dacapo.parser.Config:describeSizes,parmtr,2,<>> = <<org.dacapo.parser.Config:describeSizes,argmnt,2,<null>>,D,D>;<<java.io.PrintStream:println,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,131,<>> = <<org.sunflow.Benchmark:init,local1,131,<null>>,E,E>;
<org.sunflow.RenderObjectMap:put,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:cross,parmtr,3,<>> = <<org.sunflow.math.Vector3:cross,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceReflection,local1,3,<>> = <<org.sunflow.core.LightServer:traceReflection,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceReflection,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:sampled,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:sampled,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,262,<>> = <<org.dacapo.parser.ParseException:initialise,local1,262,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,3,<>> = <<org.dacapo.parser.Config:describe,argmnt,3,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,2,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:isDirectory,argmnt,1,<null>>,D,D>;<<java.io.File:exists,argmnt,1,<null>>,D,D>;<<java.io.File:getCanonicalPath,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,176,<>> = <<org.sunflow.util.FastHashMap:resize,local1,176,<null>>,D,D>;
<org.sunflow.core.Scene:trace,parmtr,1,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,97,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,97,<null>>,E,E>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,215,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceDiffusePhoton,parmtr,3,<>> = <<org.sunflow.core.ShadingState:traceDiffusePhoton,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Parser:processArgs,parmtr,3,<>> = <<org.apache.commons.cli.Parser:processArgs,argmnt,3,<null>>,D,D>;<<java.util.ListIterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.ListIterator:next,argmnt,1,<null>>,D,D>;<<java.util.ListIterator:previous,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,local1,34,<>> = <<java.lang.String:indexOf,argmnt,1,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,92,<>> = <<org.dacapo.parser.Config$Size:getDesc,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,119,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,402,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,402,<null>>,D,D>;
<org.sunflow.core.Ray:getMax,parmtr,1,<>> = <<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceRefraction,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceRefraction,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupGeometry,retrn,29,<>> = <<org.sunflow.RenderObjectMap:lookupGeometry,retrn,29,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:bernsteinDeriv,retrn,12,<>> = <<org.sunflow.core.tesselatable.BezierMesh:bernsteinDeriv,retrn,12,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionProperties,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,retrn,5,<>> = <<org.sunflow.image.Color:blend,retrn,5,<null>>,D,D>;<<org.sunflow.image.Color:blend,argmnt,5,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:iterator,retrn,6,<>> = <<org.apache.commons.cli.CommandLine:iterator,retrn,6,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:update,parmtr,3,<>> = <<org.sunflow.core.primitive.Sphere:update,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,48,<>> = <<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:getMissingOptions,parmtr,1,<>> = <<org.apache.commons.cli.MissingOptionException:getMissingOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getGlobalRadiance,local1,3,<>> = <<org.sunflow.core.LightServer:getGlobalRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.GIEngine:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,7,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,7,<null>>,E,E>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,141,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:cleanup,local1,13,<>> = <<org.dacapo.harness.Benchmark:cleanup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,512,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descId,local1,278,<>> = <<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:descId,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceGlossy,local1,31,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceGlossy,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,916,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,916,<null>>,D,D>;
<org.sunflow.core.Instance:getGeometry,retrn,3,<>> = <<org.sunflow.core.Instance:getGeometry,retrn,3,<null>>,D,D>;<<org.sunflow.core.Instance:getGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupCamera,retrn,29,<>> = <<org.sunflow.RenderObjectMap:lookupCamera,retrn,29,<null>>,D,D>;
<org.apache.commons.cli.Option:init,parmtr,1,<>> = <<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPoint,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceDiffusePhoton,local1,18,<>> = <<org.sunflow.core.LightServer:traceDiffusePhoton,local1,18,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrix,local1,19,<>> = <<org.sunflow.core.ParameterList:getMatrix,local1,19,<null>>,E,E>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,264,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,264,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getValidationReport,retrn,9,<>> = <<org.dacapo.harness.CommandLineArgs:getValidationReport,retrn,9,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,222,<>> = <<org.dacapo.parser.ParseException:add_escapes,local1,222,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,182,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,182,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,parmtr,8,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,argmnt,8,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:update,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,local1,43,<>> = <<java.lang.Object:getClass,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,callback,2,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,argmnt,2,<null>>,D,D>;
<org.sunflow.image.Color:mul,local1,4,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setKeep,parmtr,2,<>> = <<org.dacapo.parser.Config:setKeep,argmnt,2,<null>>,D,D>;
<org.sunflow.math.Point3:toString,retrn,38,<>> = <<org.sunflow.math.Point3:toString,retrn,38,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,44,<>> = <<org.sunflow.Benchmark:main,argmnt,2,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:init,parmtr,1,<>> = <<org.sunflow.math.QMC:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:augmentSystemProperties,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:augmentSystemProperties,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,115,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,115,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,481,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructure:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:resolveIncludeFilename,local1,3,<>> = <<org.sunflow.system.SearchPath:resolvePath,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:resolveIncludeFilename,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,146,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:FillBuff,local1,173,<>> = <<org.dacapo.parser.SimpleCharStream:FillBuff,local1,173,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,291,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,291,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,291,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,291,<null>>,D,D>;
<org.sunflow.image.Color:add,parmtr,2,<>> = <<org.sunflow.image.Color:add,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:hasNext,parmtr,1,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:hasNext,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:hasNext,callback,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,local1,20,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoException:init,parmtr,2,<>> = <<org.dacapo.harness.DacapoException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceRefraction,local1,10,<>> = <<org.sunflow.core.ShadingState:traceRefraction,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:access$400,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:access$400,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupModifier,retrn,29,<>> = <<org.sunflow.RenderObjectMap:lookupModifier,retrn,29,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,local1,21,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1300,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1300,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1300,retrn,3,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,local1,38,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,128,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,128,<null>>,D,D>;
<org.dacapo.parser.Config:getLines,local1,7,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,43,<>> = <<org.dacapo.harness.Callback:runAgain,local1,43,<null>>,E,E>;
<org.codehaus.janino.Scanner$ScanException:init,parmtr,3,<>> = <<org.codehaus.janino.Scanner$ScanException:init,argmnt,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,61,<>> = <<org.sunflow.SunflowAPI:create,local1,61,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,5912,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,5912,<null>>,E,E>;
<org.dacapo.parser.Config:filterScratch,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:flush,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:flush,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:flush,callback,1,<null>>,D,D>;<<java.io.FilterOutputStream:flush,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformWorldToObject,parmtr,1,<>> = <<org.sunflow.core.Instance:transformWorldToObject,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,54,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,54,<null>>,D,D>;
<org.sunflow.image.RGBSpace:main,local1,5,<>> = <<org.sunflow.image.RGBSpace:main,local1,5,<null>>,E,E>;
<org.apache.commons.cli.Option:getArgs,parmtr,1,<>> = <<org.apache.commons.cli.Option:getArgs,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,local1,5,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:checkExists,parmtr,1,<>> = <<org.dacapo.parser.Config:checkExists,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:sub,retrn,4,<>> = <<org.sunflow.image.Color:sub,argmnt,4,<null>>,D,D>;<<org.sunflow.image.Color:sub,retrn,4,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,32,<>> = <<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:processProperties,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:addOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,178,<>> = <<org.sunflow.core.ShadingState:occlusion,local1,178,<null>>,D,D>;
<org.apache.commons.cli.Option:clearValues,parmtr,1,<>> = <<org.apache.commons.cli.Option:clearValues,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa11_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa11_0,local1,1,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,51,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,local1,51,<null>>,D,D>;
<org.sunflow.image.Color:div,parmtr,3,<>> = <<org.sunflow.image.Color:div,argmnt,3,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:init,local1,7,<>> = <<org.sunflow.core.shader.MirrorShader:init,local1,7,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,175,<>> = <<org.sunflow.SunflowAPI:create,local1,175,<null>>,D,D>;
<org.apache.commons.cli.Parser:processArgs,local1,22,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3000,retrn,4,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3000,retrn,4,<null>>,D,D>;
<org.sunflow.math.Matrix4:blend,parmtr,2,<>> = <<org.sunflow.math.Matrix4:blend,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:processValue,local1,50,<>> = <<org.apache.commons.cli.Option:processValue,local1,50,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descId,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:descId,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:string,local1,10,<>> = <<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:print,parmtr,4,<>> = <<org.sunflow.Benchmark:print,argmnt,4,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,408,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,408,<null>>,E,E>;
<org.dacapo.harness.Callback:start,local1,20,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getIrradiance,retrn,8,<>> = <<org.sunflow.core.ShadingState:getIrradiance,retrn,8,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,102,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,local1,102,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,7,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupModifier,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:lookupModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,377,<>> = <<org.sunflow.SunflowAPI:create,local1,377,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,351,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPower,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPower,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:hasOption,parmtr,1,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:getRadiance,local1,24,<>> = <<org.sunflow.core.light.TriangleMeshLight:getRadiance,local1,24,<null>>,E,E>;
<org.sunflow.core.accel.NullAccelerator:init,parmtr,1,<>> = <<org.sunflow.core.accel.NullAccelerator:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadLimit,local1,6,<>> = <<org.dacapo.parser.Config:setThreadLimit,local1,6,<null>>,E,E>;
<org.sunflow.math.OrthoNormalBasis:makeFromW,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:makeFromW,argmnt,2,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:configOption,local1,85,<>> = <<org.dacapo.parser.ConfigFile:configOption,local1,85,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,294,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,79,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,514,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:constrainRGB,retrn,1,<>> = <<org.sunflow.image.Color:constrainRGB,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:constrainRGB,retrn,1,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,189,<>> = <<org.sunflow.core.bucket.HilbertBucketOrder:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,189,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:prepare,parmtr,3,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:prepare,argmnt,3,<null>>,D,D>;<<org.sunflow.core.renderer.ProgressiveRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,local1,61,<>> = <<org.dacapo.harness.DacapoClassLoader:getJars,local1,61,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,parmtr,2,<>> = <<org.sunflow.SunflowAPI:create,argmnt,2,<null>>,D,D>;<<java.lang.String:endsWith,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:setTabSize,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:setTabSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,74,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,74,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:update,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:update,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,134,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setLines,parmtr,3,<>> = <<org.dacapo.parser.Config:setLines,argmnt,3,<null>>,D,D>;
<org.sunflow.math.Matrix4:multiply,parmtr,1,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,3,<>> = <<org.sunflow.RenderObjectMap:update,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,local1,23,<>> = <<org.sunflow.math.Matrix4:transform,local1,23,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,26,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,26,<null>>,E,E>;
<org.dacapo.harness.Benchmark:initialize,local1,82,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,82,<null>>,E,E>;
<org.dacapo.harness.Benchmark:lineCount,local1,8,<>> = <<java.io.FileReader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,56,<>> = <<org.sunflow.core.accel.KDTree:build,local1,56,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:intersect,local1,807,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,807,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadFactor,parmtr,2,<>> = <<org.dacapo.parser.Config:getThreadFactor,argmnt,2,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,local1,28,<>> = <<org.sunflow.core.gi.InstantGI$PointLight:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,55,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,55,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,82,<>> = <<org.dacapo.harness.Sunflow:preIteration,argmnt,1,<null>>,D,D>;<<java.lang.reflect.Method:invoke,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,38,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrix,local1,7,<>> = <<org.sunflow.core.ParameterList:getMatrix,local1,7,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,209,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,209,<null>>,D,D>;
<org.dacapo.harness.TestHarness:bmSizes,parmtr,1,<>> = <<org.dacapo.harness.TestHarness:bmSizes,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,26,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,26,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,69,<>> = <<org.sunflow.core.tesselatable.BezierMesh:bernstein,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:bernsteinDeriv,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputClause,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:outputClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:longInt,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:digestOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:hex,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1127,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1127,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,3,<null>>,D,D>;<<org.sunflow.math.Matrix4:asRowMajor,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,48,<>> = <<org.dacapo.harness.Benchmark:prepareJars,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,313,<>> = <<org.dacapo.harness.TestHarness:main,local1,313,<null>>,E,E>;
<org.sunflow.core.ShadingState:getResult,retrn,3,<>> = <<org.sunflow.core.ShadingState:getResult,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getResult,retrn,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,35,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteFile,local1,11,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:getOutputFile,retrn,7,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,retrn,7,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceShadow,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceShadow,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:getURL,local1,7,<>> = <<java.lang.ClassLoader:getResource,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:digestOption,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:digestOption,argmnt,2,<null>>,D,D>;<<org.dacapo.parser.Config:setTextFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setFilterScratch,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printInfo,parmtr,2,<>> = <<org.sunflow.system.UI:printInfo,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,62,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,62,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,455,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,455,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,180,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,180,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:version,local1,16,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,8,<>> = <<org.dacapo.harness.Sunflow:preIteration,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,244,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,244,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,95,<>> = <<org.sunflow.Benchmark:init,local1,95,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,34,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,606,<>> = <<org.dacapo.harness.Benchmark:validate,local1,606,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,220,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,220,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,463,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,136,<>> = <<org.sunflow.math.Point2:set,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,parmtr,1,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,642,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printError,local1,17,<>> = <<org.sunflow.system.UI:printError,local1,17,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,85,<>> = <<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupGeometry,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,204,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,204,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,parmtr,6,<>> = <<java.io.FileWriter:write,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:dumpObj,argmnt,6,<null>>,D,D>;
<org.sunflow.core.ShadingState:getRandom,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,209,<>> = <<org.sunflow.SunflowAPI:create,local1,209,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,225,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getInt,local1,16,<>> = <<org.sunflow.core.ParameterList:getInt,local1,16,<null>>,E,E>;
<org.sunflow.core.ParameterList:addBoolean,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addBoolean,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,parmtr,2,<>> = <<org.sunflow.Benchmark$BenchmarkScene:sphere,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadLimit,parmtr,2,<>> = <<org.dacapo.parser.Config:getThreadLimit,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,parmtr,3,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,160,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,160,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,379,<>> = <<org.dacapo.harness.Benchmark:validate,local1,379,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:getNextToken,retrn,3,<>> = <<org.dacapo.parser.ConfigFile:getNextToken,retrn,3,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getNextToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.NullAccelerator:intersect,parmtr,1,<>> = <<org.sunflow.core.accel.NullAccelerator:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,6,<>> = <<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadModel,parmtr,1,<>> = <<org.dacapo.parser.Config:getThreadModel,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:imageBegin,parmtr,1,<>> = <<org.sunflow.Benchmark:imageBegin,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,462,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,462,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,301,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,301,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,232,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,232,<null>>,E,E>;
<org.apache.commons.cli.Parser:processArgs,local1,12,<>> = <<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,124,<>> = <<org.sunflow.math.QMC:clinit,local1,124,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,534,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,156,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,156,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:intersect,local1,838,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,838,<null>>,D,D>;
<org.apache.commons.cli.Option:getDescription,parmtr,1,<>> = <<org.apache.commons.cli.Option:getDescription,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getBakingPrimitives,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,retrn,8,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,retrn,8,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,parmtr,1,<>> = <<org.dacapo.parser.Config:preprocessArgs,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadCount,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getArgs,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1700,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1700,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1700,retrn,3,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:access$200,parmtr,2,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:access$200,argmnt,2,<null>>,D,D>;<<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,local1,42,<>> = <<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,local1,42,<null>>,E,E>;
<org.sunflow.core.ShadingState:setBasis,parmtr,2,<>> = <<org.sunflow.core.ShadingState:setBasis,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setBasis,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:ReInit,parmtr,2,<>> = <<org.dacapo.parser.ConfigFileTokenManager:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,55,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,55,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,7,<>> = <<org.sunflow.core.Ray:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeHit,local1,30,<>> = <<org.sunflow.core.LightServer:shadeHit,local1,30,<null>>,E,E>;
<org.dacapo.harness.Benchmark:startIteration,local1,77,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,77,<null>>,E,E>;
<org.sunflow.core.Camera:getRay,local1,3,<>> = <<org.sunflow.core.CameraLens:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupModifier,local1,13,<>> = <<org.sunflow.RenderObjectMap:lookupModifier,local1,13,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:init,local1,22,<>> = <<org.apache.commons.cli.MissingArgumentException:init,local1,22,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:bernsteinDeriv,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:bernsteinDeriv,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrix,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getMatrix,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,1,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,1,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,19,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:postIterationCleanup,local1,3,<>> = <<org.dacapo.harness.Benchmark:postIterationCleanup,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:isKept,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getOutputs,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,651,<>> = <<org.sunflow.core.accel.KDTree:build,local1,651,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,7,<>> = <<org.sunflow.SunflowAPI:parameter,local1,7,<null>>,E,E>;
<org.sunflow.system.SearchPath:addSearchPath,local1,146,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,146,<null>>,D,D>;
<org.sunflow.core.LightServer:getShader,parmtr,1,<>> = <<org.sunflow.core.LightServer:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:prepareShadingState,local1,3,<>> = <<org.sunflow.core.Instance:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrix,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getMatrix,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:getNextToken,local1,32,<>> = <<org.dacapo.parser.ConfigFile:getNextToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:getNextToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,parmtr,2,<>> = <<org.sunflow.core.AccelerationStructureFactory:create,argmnt,2,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,55,<>> = <<org.sunflow.RenderObjectMap:update,local1,55,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,257,<>> = <<org.dacapo.harness.Callback:runAgain,local1,257,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersectBox,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersectBox,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:openLog,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:openLog,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:newLog,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,1,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,1,<null>>,E,E>;
<org.dacapo.harness.Callback:complete,local1,151,<>> = <<org.dacapo.harness.Callback:complete,local1,151,<null>>,D,D>;
<org.dacapo.harness.Benchmark:clinit,local1,45,<>> = <<org.dacapo.harness.Benchmark:clinit,local1,45,<null>>,E,E>;
<org.sunflow.core.Geometry:getWorldBounds,local1,3,<>> = <<org.sunflow.core.Geometry:getWorldBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,121,<>> = <<org.dacapo.harness.Callback:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:faceforward,local1,30,<>> = <<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,94,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,94,<null>>,E,E>;
<org.apache.commons.cli.Option:getValuesList,parmtr,1,<>> = <<org.apache.commons.cli.Option:getValuesList,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,137,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$1:clinit,local1,44,<>> = <<org.dacapo.parser.Config$1:clinit,local1,44,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,2,<>> = <<java.util.TreeSet:init,argmnt,1,<null>>,D,D>;<<java.util.TreeSet:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,124,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,124,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getLine,local1,3,<>> = <<org.dacapo.parser.SimpleCharStream:getLine,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransformX,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformX,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,615,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,local1,128,<>> = <<org.sunflow.core.LightServer:getRadiance,local1,128,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflection,local1,28,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:bernstein,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:bernsteinDeriv,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,45,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Digest:toString,parmtr,2,<>> = <<org.dacapo.harness.Digest:toString,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,180,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,180,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,635,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,635,<null>>,D,D>;
<org.sunflow.core.LightSample:traceShadow,local1,4,<>> = <<org.sunflow.core.LightSample:traceShadow,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,126,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,126,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,63,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,12,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:defineCallback,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:prepare,parmtr,2,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:prepare,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,150,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,150,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,1,<>> = <<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:pad,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describeSizes,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,parmtr,2,<>> = <<org.dacapo.harness.Callback:complete,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,153,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,153,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,128,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setClass,local1,9,<>> = <<org.dacapo.parser.Config:setClass,local1,9,<null>>,E,E>;
<org.apache.commons.cli.Option:processValue,parmtr,1,<>> = <<org.apache.commons.cli.Option:processValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasValueSeparator,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValueSeparator,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:add,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:revertClassLoader,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:revertClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addPoints,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addPoints,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3900,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3900,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightSample:isValid,local1,17,<>> = <<org.sunflow.core.LightSample:isValid,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,1,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,1,<null>>,D,D>;<<java.net.URLClassLoader:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasBytes,parmtr,1,<>> = <<org.dacapo.parser.Config:hasBytes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,102,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,102,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,102,<null>>,D,D>;
<org.sunflow.math.Vector3:decode,local1,37,<>> = <<org.sunflow.math.Vector3:decode,local1,37,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,331,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,331,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,310,<>> = <<org.dacapo.harness.TestHarness:main,local1,310,<null>>,D,D>;
<org.sunflow.system.SearchPath:init,local1,12,<>> = <<org.sunflow.system.SearchPath:init,argmnt,1,<null>>,D,D>;<<java.util.LinkedList:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getEndLine,local1,3,<>> = <<org.dacapo.parser.SimpleCharStream:getEndLine,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,parmtr,2,<>> = <<org.sunflow.core.accel.KDTree:intersect,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:getMin,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,33,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,41,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,41,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,24,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,24,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,811,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,811,<null>>,D,D>;
<org.sunflow.core.ShadingState:createState,parmtr,7,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createState,argmnt,7,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,7,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,97,<>> = <<org.dacapo.parser.TokenMgrError:LexicalError,local1,97,<null>>,D,D>;
<org.sunflow.core.Instance:updateBounds,parmtr,1,<>> = <<org.sunflow.core.Instance:updateBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,479,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,222,<>> = <<org.dacapo.parser.TokenMgrError:addEscapes,local1,222,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,250,<>> = <<org.sunflow.core.accel.KDTree:buildTree,argmnt,8,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,773,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,773,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,2,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,36,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,36,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,29,<>> = <<org.sunflow.core.accel.KDTree:build,local1,29,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,362,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,362,<null>>,E,E>;
<org.dacapo.parser.Config:setSizeDescription,parmtr,1,<>> = <<org.dacapo.parser.Config:setSizeDescription,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,parmtr,3,<>> = <<org.sunflow.core.LightServer:calculatePhotons,argmnt,3,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,3,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:readable,callback,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:readable,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,31,<>> = <<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,502,<>> = <<org.sunflow.core.shader.DiffuseShader:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:bmInfo,parmtr,2,<>> = <<org.dacapo.harness.TestHarness:bmInfo,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Geometry:build,local1,11,<>> = <<org.sunflow.core.PrimitiveList:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:build,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:adjustBeginLineColumn,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:adjustBeginLineColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,578,<>> = <<org.sunflow.core.LightServer:build,local1,578,<null>>,D,D>;
<org.sunflow.SunflowAPI:reset,local1,14,<>> = <<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getStrings,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getStrings,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getStrings,retrn,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,48,<>> = <<org.dacapo.harness.Benchmark:unpackZipStream,local1,48,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,29,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,29,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,83,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,83,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,159,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,159,<null>>,E,E>;
<org.sunflow.core.Instance:update,local1,42,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,484,<>> = <<org.dacapo.harness.TestHarness:main,local1,484,<null>>,E,E>;
<org.dacapo.harness.TestHarness:init,local1,87,<>> = <<java.lang.Object:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:processNonOptionToken,parmtr,1,<>> = <<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,111,<>> = <<org.dacapo.harness.FileDigest:getText,local1,111,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getGlobalRadiance,retrn,7,<>> = <<org.sunflow.core.ShadingState:getGlobalRadiance,retrn,7,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,570,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,570,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,424,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,8696,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,8696,<null>>,E,E>;
<org.sunflow.core.IntersectionState:getStack,parmtr,1,<>> = <<org.sunflow.core.IntersectionState:getStack,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:storePhoton,parmtr,1,<>> = <<org.sunflow.core.ShadingState:storePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,35,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,11,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,11,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getTexCoord,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getTexCoord,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,210,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,210,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,132,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,132,<null>>,E,E>;
<org.sunflow.math.Point2:init,parmtr,2,<>> = <<org.sunflow.math.Point2:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloats,parmtr,4,<>> = <<org.sunflow.core.ParameterList:addFloats,argmnt,4,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,10,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:print,parmtr,4,<>> = <<org.sunflow.system.ui.ConsoleInterface:print,argmnt,4,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,216,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,216,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,945,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,945,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,14,<>> = <<org.codehaus.janino.Scanner:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,89,<>> = <<org.dacapo.harness.Callback:start,local1,89,<null>>,E,E>;
<org.sunflow.core.ParameterList$1:clinit,local1,71,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,71,<null>>,E,E>;
<org.sunflow.core.ShadingState:initLightSamples,parmtr,1,<>> = <<org.sunflow.core.ShadingState:initLightSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:valueOf,retrn,5,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:valueOf,retrn,5,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformPZ,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformPZ,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,56,<>> = <<org.sunflow.image.RGBSpace:toString,local1,56,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapVW,local1,6,<>> = <<org.sunflow.math.OrthoNormalBasis:swapVW,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:swapVW,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:remove,local1,2,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:remove,local1,2,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,450,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,571,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,571,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,local1,3,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,local1,3,<null>>,E,E>;
<org.sunflow.core.LightServer:shadeHit,local1,3,<>> = <<org.sunflow.core.Instance:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:setRGB,retrn,1,<>> = <<org.sunflow.image.Color:setRGB,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:setRGB,retrn,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,255,<>> = <<org.sunflow.SunflowAPI:create,local1,255,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,219,<>> = <<org.sunflow.SunflowAPI:render,local1,219,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrixArray,retrn,18,<>> = <<org.sunflow.core.ParameterList:getMatrixArray,retrn,18,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,293,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,293,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.sunflow.math.Point2:init,parmtr,1,<>> = <<org.sunflow.math.Point2:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,444,<>> = <<org.sunflow.image.RGBSpace:toString,local1,444,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,retrn,59,<>> = <<org.dacapo.parser.Config:preprocessArgs,retrn,59,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,local1,10,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,local1,10,<null>>,E,E>;
<org.sunflow.SunflowAPI:lookupOptions,local1,3,<>> = <<org.sunflow.SunflowAPI:lookupOptions,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:lookupOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:clinit,local1,88,<>> = <<org.sunflow.math.Vector3:clinit,local1,88,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,37,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,28,<>> = <<java.lang.Class:getConstructor,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,125,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,125,<null>>,E,E>;
<org.sunflow.SunflowAPI:modifier,local1,7,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:modifier,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:normal,parmtr,2,<>> = <<org.sunflow.math.Point3:normal,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,7,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$900,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$900,retrn,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,parmtr,1,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,callback,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,72,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,806,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,806,<null>>,E,E>;
<org.sunflow.math.Vector3:clinit,local1,13,<>> = <<org.sunflow.math.Vector3:clinit,local1,13,<null>>,E,E>;
<org.sunflow.RenderObjectMap:put,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,11,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,11,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:access$2300,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$2300,retrn,3,<null>>,D,D>;
<org.sunflow.RenderObjectMap:has,local1,3,<>> = <<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:containsKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,355,<>> = <<org.sunflow.core.Scene:render,local1,355,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,146,<>> = <<org.dacapo.harness.Callback:complete,local1,146,<null>>,E,E>;
<org.sunflow.system.UI$Module:clinit,local1,320,<>> = <<org.sunflow.system.UI$Module:clinit,local1,320,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:buildTree,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:dumpObj,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,86,<>> = <<org.apache.commons.cli.CommandLine:getOptionProperties,local1,86,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,76,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,76,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,18,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,18,<null>>,D,D>;
<org.dacapo.parser.Config:main,local1,13,<>> = <<org.dacapo.parser.Config:main,local1,13,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,84,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,84,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,1,<>> = <<org.sunflow.SunflowAPI:parameter,local1,1,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,388,<>> = <<org.sunflow.core.LightServer:build,local1,388,<null>>,E,E>;
<org.sunflow.RenderObjectMap:put,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:initLightSamples,local1,23,<>> = <<org.sunflow.core.LightServer:initLightSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSource:getSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,local1,46,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:store,local1,46,<null>>,E,E>;
<org.sunflow.core.ParameterList$1:clinit,local1,154,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,154,<null>>,E,E>;
<org.dacapo.harness.Benchmark:initialize,local1,121,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,121,<null>>,E,E>;
<org.sunflow.SunflowAPI:camera,parmtr,1,<>> = <<org.sunflow.SunflowAPI:camera,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceDiffusePhoton,parmtr,1,<>> = <<org.sunflow.core.LightServer:traceDiffusePhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,113,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,113,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,513,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.IntersectionState:init,local1,50,<>> = <<org.sunflow.core.IntersectionState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,55,<>> = <<org.dacapo.harness.TestHarness:dump,local1,55,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:typeName,local1,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:typeName,argmnt,1,<null>>,D,D>;<<java.lang.Enum:name,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,parmtr,1,<>> = <<org.sunflow.Benchmark:init,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,85,<>> = <<java.util.List:listIterator,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:distanceTo,parmtr,2,<>> = <<org.sunflow.math.Point3:distanceTo,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPoint,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,173,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,173,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:init,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$Entry:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,42,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformP,retrn,2,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformP,retrn,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,548,<>> = <<org.sunflow.image.RGBSpace:toString,local1,548,<null>>,D,D>;
<org.sunflow.util.FastHashMap:alloc,retrn,3,<>> = <<org.sunflow.util.FastHashMap:alloc,retrn,3,<null>>,D,D>;
<org.apache.commons.cli.Parser:getOptions,parmtr,1,<>> = <<org.apache.commons.cli.Parser:getOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:setCommandLineOptions,parmtr,2,<>> = <<org.dacapo.harness.CommandLineArgs:getValidationReport,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:setCommandLineOptions,argmnt,2,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getSilent,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getPreserve,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getTimeoutDialation,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getPreIterationGC,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getValidate,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getValidateOutput,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,108,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,108,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3500,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3500,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3500,retrn,3,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPointArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getPointArray,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,72,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,4,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:access$000,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$Entry:isRemoved,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:access$000,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,42,<>> = <<org.sunflow.core.Camera:getRay,local1,42,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,100,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,219,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,109,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,109,<null>>,E,E>;
<org.sunflow.core.Scene:render,local1,580,<>> = <<org.sunflow.core.Scene:render,local1,580,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:init,parmtr,2,<>> = <<org.codehaus.janino.util.CausedException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefractionPhoton,local1,18,<>> = <<org.sunflow.core.LightServer:traceRefractionPhoton,local1,18,<null>>,D,D>;
<org.sunflow.core.LightSample:getShadowRay,retrn,3,<>> = <<org.sunflow.core.LightSample:getShadowRay,retrn,3,<null>>,D,D>;<<org.sunflow.core.LightSample:getShadowRay,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:init,local1,12,<>> = <<org.dacapo.parser.TokenMgrError:init,local1,12,<null>>,D,D>;
<org.sunflow.core.ShadingState:getTrianglePoints,local1,6,<>> = <<org.sunflow.core.Geometry:getPrimitiveList,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,parmtr,3,<>> = <<org.sunflow.SunflowAPI:shader,argmnt,3,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,23,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,23,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadModel,local1,3,<>> = <<org.dacapo.parser.Config:setThreadModel,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloats,local1,29,<>> = <<org.sunflow.core.ParameterList:addFloats,local1,29,<null>>,E,E>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,155,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,155,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,146,<>> = <<org.sunflow.image.Color:add,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:sub,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,598,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,171,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,171,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,491,<>> = <<org.sunflow.image.RGBSpace:toString,local1,491,<null>>,D,D>;
<org.sunflow.core.Camera:getCameraToWorld,local1,9,<>> = <<org.sunflow.core.Camera:getCameraToWorld,local1,9,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,505,<>> = <<org.sunflow.image.RGBSpace:toString,local1,505,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,11,<>> = <<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,44,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,44,<null>>,E,E>;
<org.dacapo.harness.Benchmark:prepareJars,local1,22,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,154,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,25,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:init,parmtr,1,<>> = <<org.sunflow.system.UI:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,561,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,561,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:getValuesList,retrn,3,<>> = <<org.apache.commons.cli.Option:getValuesList,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValuesList,retrn,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,85,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,85,<null>>,E,E>;
<org.sunflow.RenderObjectMap:remove,local1,140,<>> = <<org.sunflow.RenderObjectMap:remove,local1,140,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getThreadCount,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getThreadCount,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:access$400,parmtr,2,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:access$400,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupLight,local1,13,<>> = <<org.sunflow.RenderObjectMap:lookupLight,local1,13,<null>>,D,D>;
<org.apache.commons.cli.Option:setType,parmtr,1,<>> = <<org.apache.commons.cli.Option:setType,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,111,<>> = <<org.sunflow.core.Camera:getRay,local1,111,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:valueOf,retrn,5,<>> = <<org.dacapo.harness.Callback$Mode:valueOf,retrn,5,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,521,<>> = <<org.sunflow.core.LightServer:build,local1,521,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,550,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,550,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,260,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,1408,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,1408,<null>>,E,E>;
<org.sunflow.core.Scene:getThreads,parmtr,1,<>> = <<org.sunflow.core.Scene:getThreads,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_0,local1,1,<null>>,E,E>;
<org.sunflow.SunflowAPI:lookupGeometry,local1,3,<>> = <<org.sunflow.SunflowAPI:lookupGeometry,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:lookupGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:toRGB,parmtr,1,<>> = <<org.sunflow.image.Color:toRGB,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,105,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,105,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,930,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getStringArray,local1,16,<>> = <<org.sunflow.core.ParameterList:getStringArray,local1,16,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,668,<>> = <<org.sunflow.core.accel.KDTree:build,local1,668,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,29,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,29,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,29,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,retrn,79,<>> = <<org.sunflow.core.ShadingState:diffuse,retrn,79,<null>>,D,D>;
<org.sunflow.image.Color:toLinear,local1,17,<>> = <<org.sunflow.image.Color:toLinear,local1,17,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,30,<>> = <<org.apache.commons.cli.Option:getOpt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValuesList,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getLongOpt,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPointArray,local1,12,<>> = <<org.sunflow.core.ParameterList:getPointArray,local1,12,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,825,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,825,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,383,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,383,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,254,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,916,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,916,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,62,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:allowDiffuseBounced,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:allowDiffuseBounced,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,retrn,187,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:lookupShadingCache,retrn,187,<null>>,D,D>;
<org.sunflow.core.filter.FilterFactory:get,retrn,65,<>> = <<org.sunflow.core.filter.CatmullRomFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.FilterFactory:get,retrn,65,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:scale,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:scale,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,449,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,449,<null>>,D,D>;
<org.sunflow.core.Ray:isInside,parmtr,1,<>> = <<org.sunflow.core.Ray:isInside,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,47,<>> = <<java.net.URL:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,611,<>> = <<org.sunflow.core.accel.KDTree:build,local1,611,<null>>,E,E>;
<org.dacapo.harness.Benchmark:postIterationCleanup,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:postIterationCleanup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1012,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1012,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,19,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:isDirectory,argmnt,1,<null>>,D,D>;<<java.io.File:delete,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:rmdir,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,413,<>> = <<org.sunflow.image.Color:opposite,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,local1,87,<>> = <<org.sunflow.SunflowAPI:instance,local1,87,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getVolume,local1,6,<>> = <<org.sunflow.math.BoundingBox:getVolume,local1,6,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getExtents,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:getExtents,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,45,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getWorldToCamera,parmtr,1,<>> = <<org.sunflow.core.Camera:getWorldToCamera,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,610,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,610,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,31,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrix,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getMatrix,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:bmInfo,parmtr,1,<>> = <<org.dacapo.harness.TestHarness:bmInfo,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:formatOutput,local1,11,<>> = <<org.sunflow.system.UI:formatOutput,local1,11,<null>>,D,D>;
<org.sunflow.math.Vector3:normalize,retrn,1,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,retrn,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,279,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,279,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,125,<>> = <<org.sunflow.image.Color:clinit,local1,125,<null>>,E,E>;
<org.dacapo.parser.Config:describe,local1,135,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,retrn,125,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,retrn,125,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,536,<>> = <<org.sunflow.math.BoundingBox:getCenter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:FillBuff,local1,137,<>> = <<java.io.Reader:read,argmnt,1,<null>>,D,D>;<<java.io.Reader:close,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:FillBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPoint,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,141,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,local1,141,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,883,<>> = <<org.sunflow.core.accel.KDTree:build,local1,883,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,parmtr,3,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,argmnt,3,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,36,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,36,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,766,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,265,<>> = <<org.sunflow.system.UI$Module:clinit,local1,265,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,local1,6,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,local1,6,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,local1,9,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2000,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2000,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:BeginToken,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:BeginToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,local1,163,<>> = <<org.sunflow.core.AccelerationStructureFactory:create,local1,163,<null>>,D,D>;
<org.sunflow.core.Instance:update,parmtr,1,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,183,<>> = <<org.sunflow.Benchmark:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,141,<>> = <<org.sunflow.core.bucket.HilbertBucketOrder:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,141,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,31,<>> = <<java.util.LinkedList:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;<<java.util.LinkedList:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:addOutputFile,local1,3,<>> = <<org.dacapo.parser.Config$Size:addOutputFile,argmnt,1,<null>>,D,D>;<<java.util.HashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,97,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,97,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoordArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getTexCoordArray,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,20,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,10,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:init,parmtr,1,<>> = <<org.sunflow.core.tesselatable.Teapot:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:isKept,parmtr,3,<>> = <<org.dacapo.parser.Config:isKept,argmnt,3,<null>>,D,D>;
<org.sunflow.image.Color:mul,parmtr,2,<>> = <<org.sunflow.image.Color:mul,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.UnrecognizedOptionException:init,parmtr,3,<>> = <<org.apache.commons.cli.UnrecognizedOptionException:init,argmnt,3,<null>>,D,D>;<<org.apache.commons.cli.UnrecognizedOptionException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.UnrecognizedOptionException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,9,<>> = <<org.sunflow.system.SearchPath:resolvePath,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parse,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:scale,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:scale,retrn,2,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,28,<>> = <<org.apache.commons.cli.Option:clone,local1,28,<null>>,E,E>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,33,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:coeff_of_var,parmtr,2,<>> = <<org.dacapo.harness.TestHarness:coeff_of_var,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVector,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getVector,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,24,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:clinit,local1,34,<>> = <<org.dacapo.harness.Callback$Mode:clinit,local1,34,<null>>,E,E>;
<org.sunflow.util.FastHashMap$Entry:init,parmtr,3,<>> = <<org.sunflow.util.FastHashMap$Entry:init,argmnt,3,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getLocation,parmtr,1,<>> = <<org.codehaus.janino.util.LocatedException:getLocation,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,541,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,541,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,614,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,614,<null>>,D,D>;
<org.sunflow.core.filter.FilterFactory:get,retrn,101,<>> = <<org.sunflow.core.filter.SincFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.FilterFactory:get,retrn,101,<null>>,D,D>;
<org.sunflow.core.LightSample:setShadowRay,parmtr,2,<>> = <<org.sunflow.core.LightSample:setShadowRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:setShadowRay,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,137,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,137,<null>>,E,E>;
<org.sunflow.core.ShadingState:getTrianglePoints,parmtr,2,<>> = <<org.sunflow.core.ShadingState:getTrianglePoints,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,129,<>> = <<org.sunflow.core.LightServer:showStats,local1,129,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,parmtr,5,<>> = <<org.sunflow.core.LightServer:getRadiance,argmnt,5,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,74,<>> = <<org.dacapo.harness.Callback:init,local1,74,<null>>,E,E>;
<org.dacapo.parser.Config:print,parmtr,1,<>> = <<org.dacapo.parser.Config:print,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSizes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getOutputs,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadFactor,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getArgs,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:flipW,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:flipW,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,350,<>> = <<org.sunflow.math.QMC:clinit,local1,350,<null>>,E,E>;
<org.sunflow.system.UI$Module:clinit,local1,313,<>> = <<org.sunflow.system.UI$Module:clinit,local1,313,<null>>,E,E>;
<org.sunflow.core.ParameterList$1:clinit,local1,59,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,59,<null>>,E,E>;
<org.sunflow.util.FastHashMap:get,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getBoolean,local1,7,<>> = <<org.sunflow.core.ParameterList:getBoolean,local1,7,<null>>,D,D>;
<org.dacapo.parser.Config:setFilterScratch,parmtr,1,<>> = <<org.dacapo.parser.Config:setFilterScratch,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:build,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,parmtr,2,<>> = <<org.dacapo.harness.TestHarness:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,131,<>> = <<org.dacapo.parser.ParseException:initialise,local1,131,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getFloats,local1,7,<>> = <<org.sunflow.core.ParameterList$Parameter:getFloats,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,739,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,994,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,994,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getColor,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getColor,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,local1,1209,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAddStates,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjAddStates,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,229,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,229,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,parmtr,2,<>> = <<org.sunflow.math.BoundingBox:getMaximum,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transform,argmnt,2,<null>>,D,D>;<<org.sunflow.math.BoundingBox:isEmpty,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMinimum,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getCorner,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,7322,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,7322,<null>>,E,E>;
<org.sunflow.core.LightServer:traceDiffusePhoton,parmtr,2,<>> = <<org.sunflow.core.LightServer:traceDiffusePhoton,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,retrn,7,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,retrn,7,<null>>,D,D>;
<org.sunflow.core.LightServer:initCausticSamples,parmtr,2,<>> = <<org.sunflow.core.LightServer:initCausticSamples,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,517,<>> = <<org.sunflow.core.Scene:render,local1,517,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<null>>,E,E>;
<org.dacapo.parser.Config:print,local1,349,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,225,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,225,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,233,<>> = <<org.sunflow.SunflowAPI:create,local1,233,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,parmtr,2,<>> = <<org.sunflow.core.Ray:isInside,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:dot,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,188,<>> = <<org.sunflow.core.Scene:render,local1,188,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,1,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,1,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,178,<>> = <<org.dacapo.parser.ConfigFile:outputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,186,<>> = <<org.dacapo.harness.FileDigest:main,local1,186,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:access$100,retrn,3,<>> = <<org.sunflow.core.LightServer:access$100,retrn,3,<null>>,D,D>;<<org.sunflow.core.LightServer:access$100,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:transformObjectToWorld,retrn,9,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformObjectToWorld,retrn,9,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,3,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,1004,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,1004,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPower,local1,9,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,157,<>> = <<org.dacapo.harness.Callback:complete,local1,157,<null>>,E,E>;
<org.sunflow.math.Point3:distanceToSquared,parmtr,2,<>> = <<org.sunflow.math.Point3:distanceToSquared,argmnt,2,<null>>,D,D>;
<org.sunflow.image.Color:mul,parmtr,2,<>> = <<org.sunflow.image.Color:mul,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,30,<>> = <<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,30,<null>>,E,E>;
<org.sunflow.RenderObjectMap:updateScene,local1,301,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,301,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,80,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setLines,parmtr,2,<>> = <<org.dacapo.parser.Config:setLines,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,637,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,637,<null>>,D,D>;
<org.sunflow.core.ShadingState:includeSpecular,parmtr,1,<>> = <<org.sunflow.core.ShadingState:includeSpecular,argmnt,1,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,77,<>> = <<Harness:makeHarnessClassLoader,local1,77,<null>>,E,E>;
<org.sunflow.math.Vector3:div,retrn,3,<>> = <<org.sunflow.math.Vector3:div,argmnt,3,<null>>,D,D>;<<org.sunflow.math.Vector3:div,retrn,3,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,411,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,411,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,84,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,84,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,194,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:pad,local1,29,<>> = <<org.dacapo.parser.Config:pad,local1,29,<null>>,D,D>;
<org.sunflow.image.Color:exp,retrn,1,<>> = <<org.sunflow.image.Color:exp,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:exp,retrn,1,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:init,local1,19,<>> = <<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,40,<>> = <<org.dacapo.parser.Config:describeSizes,local1,40,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,332,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersectBox,parmtr,7,<>> = <<org.sunflow.core.IntersectionState:setIntersection,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersectBox,argmnt,7,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,parmtr,5,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:store,argmnt,5,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,16,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,16,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,488,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,488,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getMatrix,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point2:set,retrn,1,<>> = <<org.sunflow.math.Point2:set,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point2:set,retrn,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,410,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupModifier,parmtr,1,<>> = <<org.sunflow.SunflowAPI:lookupModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,876,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,876,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,31,<>> = <<org.dacapo.harness.TestHarness:dump,local1,31,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjStopAtPos,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStopAtPos,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:typeName,retrn,9,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:typeName,retrn,9,<null>>,D,D>;
<org.sunflow.core.LightServer:traceFinalGather,parmtr,1,<>> = <<org.sunflow.core.LightServer:traceFinalGather,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,141,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,141,<null>>,E,E>;
<org.dacapo.harness.Callback$1:clinit,local1,29,<>> = <<org.dacapo.harness.Callback$1:clinit,local1,29,<null>>,E,E>;
<org.dacapo.harness.Callback:stop,parmtr,1,<>> = <<org.dacapo.harness.Callback:stop,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptionGroups,local1,10,<>> = <<org.apache.commons.cli.Options:getOptionGroups,local1,10,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark:print,parmtr,1,<>> = <<org.sunflow.Benchmark:print,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2900,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2900,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2900,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:resolveTextureFilename,local1,3,<>> = <<org.sunflow.SunflowAPI:resolveTextureFilename,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:resolvePath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:initCausticSamples,local1,3,<>> = <<org.sunflow.core.LightServer:initCausticSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.CausticPhotonMapInterface:getSamples,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,632,<>> = <<org.dacapo.harness.TestHarness:main,local1,632,<null>>,D,D>;
<org.sunflow.core.Instance:transformNormalWorldToObject,parmtr,2,<>> = <<org.sunflow.core.Instance:transformNormalWorldToObject,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa6_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa6_0,local1,1,<null>>,E,E>;
<org.sunflow.image.Color:isNan,parmtr,1,<>> = <<org.sunflow.image.Color:isNan,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:parse,retrn,10,<>> = <<org.dacapo.parser.Config:parse,retrn,10,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:class$,local1,1,<>> = <<org.codehaus.janino.util.CausedException:class$,local1,1,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:configFile,local1,71,<>> = <<org.dacapo.parser.ConfigFile:description,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeSpec,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:config,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:configFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getIntersectionState,retrn,3,<>> = <<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIntersectionState,retrn,3,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadModel,parmtr,2,<>> = <<org.dacapo.parser.Config:setThreadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setThreadModel,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,949,<>> = <<java.io.FileWriter:init,argmnt,1,<null>>,D,D>;<<java.io.FileWriter:close,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer$1:init,parmtr,1,<>> = <<org.sunflow.core.LightServer$1:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteTree,local1,24,<>> = <<org.dacapo.harness.Benchmark:deleteTree,local1,24,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getBeginColumn,local1,3,<>> = <<org.dacapo.parser.SimpleCharStream:getBeginColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:access$200,retrn,3,<>> = <<org.sunflow.util.FastHashMap$Entry:access$200,retrn,3,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:access$200,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:addOption,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:addOption,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addColor,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$1:clinit,local1,14,<>> = <<org.dacapo.harness.Callback$1:clinit,local1,14,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getStrings,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getStrings,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceReflectionPhoton,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceReflectionPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,parmtr,5,<>> = <<org.sunflow.math.BoundingBox:getMaximum,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMinimum,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:dumpObj,argmnt,5,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,retrn,126,<>> = <<org.apache.commons.cli.Option:toString,retrn,126,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,463,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,463,<null>>,D,D>;
<org.sunflow.util.FastHashMap:remove,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:remove,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:getRadiance,retrn,20,<>> = <<org.sunflow.core.shader.DiffuseShader:getRadiance,retrn,20,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,local1,15,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,local1,79,<>> = <<org.apache.commons.cli.PosixParser:flatten,local1,79,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:getRadiance,parmtr,1,<>> = <<org.sunflow.core.shader.DiffuseShader:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.DiffuseShader:getDiffuse,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1700,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1700,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getVector,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileInScratch,retrn,14,<>> = <<org.dacapo.harness.Benchmark:fileInScratch,retrn,14,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,199,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,199,<null>>,E,E>;
<org.sunflow.core.LightSample:init,parmtr,1,<>> = <<org.sunflow.core.LightSample:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertRGBtoXYZ,local1,6,<>> = <<org.sunflow.image.RGBSpace:convertRGBtoXYZ,local1,6,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,472,<>> = <<org.sunflow.image.RGBSpace:toString,local1,472,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,66,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,44,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,44,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getCnfOverride,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getCnfOverride,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:init,parmtr,1,<>> = <<org.dacapo.harness.Callback$Mode:init,argmnt,1,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,9,<>> = <<org.sunflow.SunflowAPI:parameter,local1,9,<null>>,D,D>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,67,<>> = <<org.apache.commons.cli.OptionValidator:validateOption,local1,67,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceDiffusePhoton,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceDiffusePhoton,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,parmtr,2,<>> = <<org.dacapo.harness.FileDigest:get,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,204,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,204,<null>>,E,E>;
<org.sunflow.core.ParameterList:addColor,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addColor,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3600,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3600,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,parmtr,1,<>> = <<org.apache.commons.cli.Parser:processProperties,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,15,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1600,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1600,retrn,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeSpec,local1,98,<>> = <<org.dacapo.parser.ConfigFile:sizeClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeSpec,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Digest:toString,local1,2,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,local1,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Token:newToken,retrn,14,<>> = <<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:newToken,retrn,14,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2600,retrn,4,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2600,retrn,4,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,71,<>> = <<org.dacapo.parser.ConfigFile:main,local1,71,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Scene:setInstanceLists,local1,3,<>> = <<org.sunflow.core.Scene:setInstanceLists,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,88,<>> = <<org.dacapo.harness.Benchmark:prepareJars,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:resolveTextureFilename,parmtr,1,<>> = <<org.sunflow.SunflowAPI:resolveTextureFilename,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,134,<>> = <<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,134,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2000,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2000,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2000,retrn,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:init,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,71,<>> = <<java.io.FileInputStream:init,argmnt,1,<null>>,D,D>;<<java.io.FileInputStream:close,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:contains,local1,11,<>> = <<org.sunflow.math.BoundingBox:contains,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,115,<>> = <<org.sunflow.image.RGBSpace:toString,local1,115,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,282,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,282,<null>>,E,E>;
<org.dacapo.parser.Config:printThreadModel,local1,44,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,237,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:asRowMajor,retrn,4,<>> = <<org.sunflow.math.Matrix4:asRowMajor,retrn,4,<null>>,D,D>;
<org.dacapo.harness.Benchmark:postIterationCleanup,local1,73,<>> = <<org.dacapo.harness.Benchmark:postIterationCleanup,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:get,local1,24,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:init,parmtr,1,<>> = <<org.codehaus.janino.util.CausedException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:initCause,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,120,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,358,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,358,<null>>,E,E>;
<org.sunflow.RenderObjectMap:lookupLight,local1,9,<>> = <<org.sunflow.RenderObjectMap:lookupLight,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,43,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,638,<>> = <<org.sunflow.core.Scene:render,local1,638,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,265,<>> = <<org.dacapo.harness.TestHarness:main,local1,265,<null>>,E,E>;
<org.sunflow.core.Scene:render,local1,6,<>> = <<org.sunflow.core.display.FrameDisplay:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:integer,local1,13,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,634,<>> = <<org.sunflow.core.accel.KDTree:build,local1,634,<null>>,D,D>;
<org.sunflow.SunflowAPI:getBounds,retrn,6,<>> = <<org.sunflow.SunflowAPI:getBounds,retrn,6,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,local1,39,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:parse,parmtr,2,<>> = <<org.dacapo.parser.Config:parse,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,180,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,562,<>> = <<org.sunflow.image.RGBSpace:toString,local1,562,<null>>,D,D>;
<org.sunflow.core.Instance:hasGeometry,local1,3,<>> = <<org.sunflow.core.Instance:hasGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:access$100,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$Entry:access$100,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:revertClassLoader,local1,13,<>> = <<org.dacapo.harness.Benchmark:revertClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:updateBounds,local1,4,<>> = <<org.sunflow.core.Geometry:getWorldBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:updateBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,local1,65,<>> = <<org.sunflow.core.ParameterList:clear,local1,65,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,181,<>> = <<org.sunflow.core.ShadingState:specularPhong,local1,181,<null>>,D,D>;
<org.sunflow.core.bucket.HilbertBucketOrder:getBucketSequence,parmtr,1,<>> = <<org.sunflow.core.bucket.HilbertBucketOrder:getBucketSequence,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:kernelEnd,local1,5,<>> = <<org.sunflow.Benchmark:kernelEnd,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:getPrimitiveList,retrn,3,<>> = <<org.sunflow.core.Geometry:getPrimitiveList,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:getPrimitiveList,retrn,3,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,522,<>> = <<org.sunflow.core.shader.DiffuseShader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,67,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,67,<null>>,E,E>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,67,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,95,<>> = <<org.dacapo.parser.Config:describe,local1,95,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:init,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,92,<>> = <<org.dacapo.harness.Benchmark:prepareJars,local1,92,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,parmtr,1,<>> = <<org.sunflow.core.LightServer$1:run,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$1:run,callback,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addVectors,local1,13,<>> = <<org.sunflow.core.ParameterList:addVectors,local1,13,<null>>,E,E>;
<org.dacapo.parser.Config:printThreadModel,local1,22,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:toRGBE,parmtr,1,<>> = <<org.sunflow.image.Color:toRGBE,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,38,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,138,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,138,<null>>,E,E>;
<org.apache.commons.cli.Options:getOption,parmtr,1,<>> = <<org.apache.commons.cli.Options:getOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,parmtr,3,<>> = <<org.sunflow.core.ParameterList:add,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getFloats,local1,11,<>> = <<org.sunflow.core.ParameterList$Parameter:getFloats,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,933,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,933,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,local1,65,<>> = <<org.apache.commons.cli.Option:equals,callback,1,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,argmnt,1,<null>>,D,D>;<<java.lang.Object:getClass,argmnt,1,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,77,<>> = <<org.sunflow.Benchmark:init,local1,77,<null>>,E,E>;
<org.dacapo.harness.TeeOutputStream:close,local1,7,<>> = <<org.dacapo.harness.TeeOutputStream:close,callback,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:close,argmnt,1,<null>>,D,D>;<<java.io.FilterOutputStream:close,argmnt,1,<null>>,D,D>;<<java.io.OutputStream:close,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,44,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,44,<null>>,E,E>;
<org.sunflow.core.Camera:getWorldToCamera,retrn,20,<>> = <<org.sunflow.core.Camera:getWorldToCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:getWorldToCamera,retrn,20,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,327,<>> = <<org.sunflow.system.UI$Module:clinit,local1,327,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$4200,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$4200,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,3,<>> = <<org.sunflow.RenderObjectMap:remove,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,662,<>> = <<org.sunflow.core.accel.KDTree:build,local1,662,<null>>,E,E>;
<org.sunflow.SunflowAPI:render,local1,56,<>> = <<org.sunflow.SunflowAPI:render,local1,56,<null>>,D,D>;
<org.sunflow.math.Point3:init,parmtr,1,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:dot,local1,3,<>> = <<org.sunflow.core.Ray:dot,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:dot,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:clinit,local1,54,<>> = <<org.sunflow.math.Vector3:clinit,local1,54,<null>>,E,E>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,32,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getVolume,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:getVolume,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getExtents,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:isValidThreadCount,parmtr,2,<>> = <<org.dacapo.harness.TestHarness:isValidThreadCount,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1497,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1497,<null>>,D,D>;
<org.sunflow.core.ShadingState:setShader,parmtr,1,<>> = <<org.sunflow.core.ShadingState:setShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,retrn,2,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,retrn,2,<null>>,D,D>;<<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,190,<>> = <<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,190,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,parmtr,2,<>> = <<java.lang.Object:getClass,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,callback,2,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,200,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createRefractionBounceState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:createRefractionBounceState,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,304,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getIrradiance,parmtr,2,<>> = <<org.sunflow.core.ShadingState:getIrradiance,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,1690,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,1690,<null>>,E,E>;
<org.sunflow.core.InstanceList:init,parmtr,1,<>> = <<org.sunflow.core.InstanceList:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getMaximum,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:getMaximum,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,84,<>> = <<org.dacapo.parser.TokenMgrError:LexicalError,local1,84,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,44,<>> = <<org.apache.commons.cli.Options:getOption,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,160,<>> = <<org.dacapo.harness.FileDigest:main,argmnt,2,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromWV,parmtr,3,<>> = <<org.sunflow.math.OrthoNormalBasis:makeFromWV,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:getValue,local1,14,<>> = <<java.util.List:get,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasNoValues,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValue,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:pad,local1,23,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:addSize,parmtr,1,<>> = <<org.dacapo.parser.Config:addSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,326,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,3,<>> = <<org.sunflow.core.LightServer:showStats,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,388,<>> = <<org.dacapo.parser.ConfigFile:outputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:traceShadow,parmtr,2,<>> = <<org.sunflow.core.LightSample:traceShadow,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceShadow,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,279,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,279,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefractionPhoton,local1,31,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,561,<>> = <<org.sunflow.core.LightServer:build,local1,561,<null>>,E,E>;
<org.sunflow.SunflowAPI:compile,local1,69,<>> = <<org.sunflow.SunflowAPI:compile,local1,69,<null>>,E,E>;
<org.sunflow.math.Matrix4:fromBasis,local1,24,<>> = <<org.sunflow.math.Matrix4:fromBasis,local1,24,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,814,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,814,<null>>,D,D>;
<org.sunflow.math.Vector3:sub,parmtr,2,<>> = <<org.sunflow.math.Vector3:sub,argmnt,2,<null>>,D,D>;
<org.sunflow.math.Point3:add,retrn,4,<>> = <<org.sunflow.math.Point3:add,argmnt,4,<null>>,D,D>;<<org.sunflow.math.Point3:add,retrn,4,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,129,<>> = <<org.sunflow.core.Camera:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getScene,retrn,3,<>> = <<org.sunflow.core.LightServer:getScene,retrn,3,<null>>,D,D>;<<org.sunflow.core.LightServer:getScene,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,547,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,547,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,116,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.core.ParameterList:addVectors,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,158,<>> = <<org.dacapo.parser.Config:print,local1,158,<null>>,D,D>;
<org.codehaus.janino.Parser$ParseException:init,parmtr,2,<>> = <<org.codehaus.janino.Parser$ParseException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,106,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$Sample:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:toString,local1,19,<>> = <<org.apache.commons.cli.Options:toString,argmnt,1,<null>>,D,D>;<<java.lang.Object:toString,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,58,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,58,<null>>,E,E>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.core.ParameterList:addString,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:normal,parmtr,2,<>> = <<org.sunflow.math.Point3:normal,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,91,<>> = <<org.sunflow.core.Geometry:tesselate,local1,91,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:update,parmtr,1,<>> = <<org.sunflow.core.shader.DiffuseShader:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:access$100,parmtr,2,<>> = <<org.sunflow.core.gi.InstantGI:access$100,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,parmtr,2,<>> = <<org.sunflow.SunflowAPI:geometry,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,75,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,75,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,808,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,808,<null>>,E,E>;
<org.codehaus.janino.util.CausedException:printStackTrace,parmtr,2,<>> = <<org.codehaus.janino.util.CausedException:printStackTrace,argmnt,2,<null>>,D,D>;<<java.io.PrintWriter:print,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:printStackTrace,callback,2,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,40,<>> = <<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:addOutputFile,local1,7,<>> = <<org.dacapo.parser.Config$OutputFile:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setLines,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:access$100,parmtr,2,<>> = <<org.sunflow.Benchmark:access$100,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getBoolean,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getBoolean,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,37,<>> = <<org.dacapo.harness.Callback:start,local1,37,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,518,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,518,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:adjustBeginLineColumn,local1,129,<>> = <<org.dacapo.parser.SimpleCharStream:adjustBeginLineColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,1568,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,1568,<null>>,E,E>;
<org.dacapo.harness.Sunflow:init,local1,42,<>> = <<org.dacapo.harness.Sunflow:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:pad,retrn,2,<>> = <<org.dacapo.parser.Config:pad,argmnt,2,<null>>,D,D>;<<org.dacapo.parser.Config:pad,retrn,2,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:describe,retrn,3,<>> = <<org.dacapo.parser.Config$ThreadModel:describe,retrn,3,<null>>,D,D>;<<org.dacapo.parser.Config$ThreadModel:describe,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:init,local1,7,<>> = <<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,71,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptions,local1,3,<>> = <<org.apache.commons.cli.Options:getOptions,local1,3,<null>>,D,D>;
<org.sunflow.math.Point2:toString,parmtr,1,<>> = <<org.sunflow.math.Point2:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point2:toString,callback,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,183,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrixArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getMatrixArray,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,30,<>> = <<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,30,<null>>,D,D>;
<org.sunflow.math.Point2:toString,retrn,28,<>> = <<org.sunflow.math.Point2:toString,retrn,28,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:clinit,local1,53,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,53,<null>>,E,E>;
<org.sunflow.SunflowAPI:options,parmtr,2,<>> = <<org.sunflow.SunflowAPI:options,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,6,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,6,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorWorldToObject,retrn,9,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformVectorWorldToObject,retrn,9,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:scatterPhoton,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:scatterPhoton,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,60,<>> = <<org.dacapo.harness.FileDigest:main,argmnt,2,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,182,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,312,<>> = <<org.sunflow.core.Scene:render,local1,312,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,213,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,43,<>> = <<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,43,<null>>,D,D>;
<org.sunflow.image.Color:set,parmtr,2,<>> = <<org.sunflow.image.Color:set,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:shade,retrn,7,<>> = <<org.sunflow.core.ShadingState:shade,retrn,7,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,parmtr,6,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getRadiance,argmnt,6,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:loadClass,parmtr,2,<>> = <<org.dacapo.harness.DacapoClassLoader:loadClass,callback,2,<null>>,D,D>;<<org.dacapo.harness.DacapoClassLoader:loadClass,argmnt,2,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,21,<>> = <<Harness:makeHarnessClassLoader,local1,21,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:init,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,2,<>> = <<org.sunflow.core.ParameterList$Parameter:size,local1,2,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Sunflow:validate,parmtr,1,<>> = <<org.dacapo.harness.Sunflow:validate,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:validate,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:revertClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,383,<>> = <<org.sunflow.SunflowAPI:create,local1,383,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,34,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,34,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,173,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,173,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,154,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,154,<null>>,D,D>;
<org.sunflow.core.ShadingState:getTrianglePoints,local1,33,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getTrianglePoints,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupLight,local1,3,<>> = <<org.sunflow.SunflowAPI:lookupLight,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:lookupLight,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$OutputFile:init,parmtr,2,<>> = <<org.dacapo.parser.Config$OutputFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config$OutputFile:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:prepareShadingState,local1,11,<>> = <<org.sunflow.core.Instance:prepareShadingState,local1,11,<null>>,D,D>;
<org.sunflow.system.UI:formatOutput,local1,21,<>> = <<org.sunflow.system.UI:formatOutput,local1,21,<null>>,D,D>;
<org.sunflow.image.Color:mul,parmtr,3,<>> = <<org.sunflow.image.Color:mul,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,254,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,254,<null>>,E,E>;
<org.apache.commons.cli.Option:setDescription,parmtr,2,<>> = <<org.apache.commons.cli.Option:setDescription,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:setDescription,argmnt,2,<null>>,D,D>;
<org.sunflow.image.Color:white,retrn,2,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:white,retrn,2,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,retrn,1,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:addOption,retrn,1,<null>>,D,D>;
<org.apache.commons.cli.Options:helpOptions,local1,10,<>> = <<org.apache.commons.cli.Options:helpOptions,local1,10,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,25,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,25,<null>>,E,E>;
<org.sunflow.SunflowAPI:parse,local1,145,<>> = <<java.io.File:getParentFile,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:div,parmtr,2,<>> = <<org.sunflow.image.Color:div,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,115,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,115,<null>>,D,D>;
<org.sunflow.util.IntArray:trim,retrn,7,<>> = <<org.sunflow.util.IntArray:trim,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:trim,retrn,7,<null>>,D,D>;
<org.sunflow.SunflowAPI:getUniqueName,local1,7,<>> = <<org.sunflow.SunflowAPI:getUniqueName,local1,7,<null>>,D,D>;
<org.sunflow.core.Instance:transformWorldToObject,local1,3,<>> = <<org.sunflow.core.Instance:transformWorldToObject,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,182,<>> = <<org.dacapo.harness.Benchmark:fileInScratch,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:validate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,parmtr,2,<>> = <<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.MirrorShader:scatterPhoton,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getCosND,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceReflectionPhoton,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,local1,83,<>> = <<org.dacapo.harness.DacapoClassLoader:getJars,local1,83,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,172,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,172,<null>>,D,D>;
<org.sunflow.util.FastHashMap:containsKey,local1,11,<>> = <<org.sunflow.util.FastHashMap:containsKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:setLights,parmtr,1,<>> = <<org.sunflow.core.LightServer:setLights,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:getDiffuseRadiance,parmtr,1,<>> = <<org.sunflow.core.LightSample:getDiffuseRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,11,<>> = <<org.sunflow.SunflowAPI:parameter,local1,11,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,184,<>> = <<org.sunflow.Benchmark:main,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,28,<>> = <<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,28,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,41,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,41,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:getRadiance,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight:getRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,254,<>> = <<org.dacapo.harness.TestHarness:isValidSize,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:isValidThreadCount,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:dump,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:bmSizes,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:runBenchmark,argmnt,4,<null>>,D,D>;<<org.dacapo.harness.TestHarness:bmInfo,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,parmtr,1,<>> = <<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:getOptionProperties,argmnt,2,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,local1,56,<>> = <<java.lang.Object:getClass,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,callback,2,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getNumPrimitives,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addVectors,local1,19,<>> = <<org.sunflow.core.ParameterList:addVectors,local1,19,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,122,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createState,parmtr,5,<>> = <<org.sunflow.core.ShadingState:createState,argmnt,5,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromW,local1,220,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getColor,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getColor,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,29,<>> = <<org.dacapo.parser.Config:print,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,359,<>> = <<org.dacapo.harness.Benchmark:validate,local1,359,<null>>,E,E>;
<org.sunflow.core.shader.DiffuseShader:getRadiance,local1,17,<>> = <<org.sunflow.core.shader.DiffuseShader:getRadiance,local1,17,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,287,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,287,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,57,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,25,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,25,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:next,local1,6,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:next,local1,6,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,134,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,134,<null>>,E,E>;
<org.apache.commons.cli.Parser:processOption,local1,35,<>> = <<org.apache.commons.cli.Parser:processOption,local1,35,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:update,parmtr,2,<>> = <<org.sunflow.core.shader.DiffuseShader:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getColor,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,464,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,464,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,658,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,658,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,271,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,3,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,argmnt,1,<null>>,D,D>;<<java.util.List:clear,argmnt,1,<null>>,D,D>;<<java.util.List:get,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,102,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,102,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,80,<>> = <<org.sunflow.system.UI$Module:clinit,local1,80,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,34,<>> = <<org.sunflow.math.BoundingBox:getMaximum,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMinimum,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,8,<>> = <<java.security.ProtectionDomain:getCodeSource,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,216,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,216,<null>>,D,D>;
<org.dacapo.parser.Config:isTextFile,parmtr,3,<>> = <<org.dacapo.parser.Config:isTextFile,argmnt,3,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,parmtr,5,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,5,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:ReInit,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:ReInit,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,local1,65,<>> = <<org.dacapo.harness.Benchmark:run,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:preIteration,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getWorldToCamera,local1,24,<>> = <<org.sunflow.core.ShadingState:getWorldToCamera,local1,24,<null>>,E,E>;
<org.sunflow.image.Color:init,parmtr,1,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,879,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,3,<>> = <<org.dacapo.harness.Sunflow:preIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:preprocessArgs,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadCount,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,99,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,99,<null>>,D,D>;
<org.sunflow.core.LightSample:getSpecularRadiance,parmtr,1,<>> = <<org.sunflow.core.LightSample:getSpecularRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,202,<>> = <<org.sunflow.core.LightSource:getNumSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptions,local1,13,<>> = <<org.apache.commons.cli.CommandLine:getOptions,local1,13,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getMethodology,local1,14,<>> = <<org.dacapo.harness.CommandLineArgs:getMethodology,local1,14,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,41,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,41,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:init,parmtr,2,<>> = <<org.apache.commons.cli.MissingArgumentException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.MissingArgumentException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.MissingArgumentException:init,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getMaxIterations,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getMaxIterations,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,339,<>> = <<org.sunflow.math.QMC:clinit,local1,339,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,310,<>> = <<org.sunflow.image.RGBSpace:toString,local1,310,<null>>,D,D>;
<org.dacapo.parser.Config:getBytes,local1,8,<>> = <<org.dacapo.parser.Config:getBytes,local1,8,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,173,<>> = <<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:lastIndexOf,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupOptions,local1,13,<>> = <<org.sunflow.RenderObjectMap:lookupOptions,local1,13,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,15,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,15,<null>>,E,E>;
<org.sunflow.SunflowAPI:compile,local1,141,<>> = <<org.sunflow.SunflowAPI:compile,local1,141,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1100,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1100,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,132,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,684,<>> = <<org.sunflow.core.accel.KDTree:build,local1,684,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:jj_ntk,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceGlossy,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceGlossy,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getMaxIterations,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getMaxIterations,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,local1,46,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,925,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,925,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,503,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,230,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,2,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getShader,retrn,3,<>> = <<org.sunflow.core.ShadingState:getShader,retrn,3,<null>>,D,D>;<<org.sunflow.core.ShadingState:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,331,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,983,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:init,local1,41,<>> = <<org.sunflow.Benchmark$BenchmarkScene:init,local1,41,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,346,<>> = <<java.lang.Thread:start,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:clinit,local1,39,<>> = <<org.dacapo.harness.Benchmark:clinit,local1,39,<null>>,E,E>;
<org.dacapo.harness.TestHarness:findClass,local1,14,<>> = <<org.dacapo.harness.TestHarness:findClass,local1,14,<null>>,E,E>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,83,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,921,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,97,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,local1,7,<>> = <<org.dacapo.parser.Config:preprocessArgs,local1,7,<null>>,D,D>;
<org.sunflow.core.camera.PinholeLens:init,parmtr,1,<>> = <<org.sunflow.core.camera.PinholeLens:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.camera.PinholeLens:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,178,<>> = <<java.util.ArrayList:toArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:size,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getInts,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getInts,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getInts,retrn,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,62,<>> = <<org.sunflow.core.accel.KDTree:build,local1,62,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,355,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,355,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:adjustBeginLineColumn,local1,85,<>> = <<org.dacapo.parser.SimpleCharStream:adjustBeginLineColumn,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,19,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,19,<null>>,E,E>;
<org.dacapo.harness.Callback:complete,local1,9,<>> = <<org.dacapo.harness.Callback:complete,local1,9,<null>>,E,E>;
<org.dacapo.harness.TestHarness:makeCleanScratch,parmtr,2,<>> = <<java.io.File:mkdir,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:makeCleanScratch,argmnt,2,<null>>,D,D>;<<org.dacapo.harness.TestHarness:rmdir,argmnt,2,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapWU,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:swapWU,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,15,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,15,<null>>,E,E>;
<org.apache.commons.cli.MissingOptionException:getMissingOptions,retrn,3,<>> = <<org.apache.commons.cli.MissingOptionException:getMissingOptions,retrn,3,<null>>,D,D>;<<org.apache.commons.cli.MissingOptionException:getMissingOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,local1,50,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:getWorldBounds,retrn,20,<>> = <<org.sunflow.core.primitive.Sphere:getWorldBounds,retrn,20,<null>>,D,D>;
<org.sunflow.core.Scene:init,local1,7,<>> = <<org.sunflow.core.Scene:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.IntersectionState:init,parmtr,1,<>> = <<org.sunflow.core.IntersectionState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,parmtr,6,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,6,<null>>,D,D>;
<org.dacapo.parser.Config:isKept,local1,7,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getSizes,local1,3,<>> = <<java.util.HashMap:keySet,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSizes,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,parmtr,2,<>> = <<org.sunflow.image.Color:blend,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,2,<>> = <<org.dacapo.parser.Config:describe,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,370,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,370,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,154,<>> = <<org.sunflow.core.ShadingState:getBasis,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:occlusion,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,109,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,109,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$1700,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$1700,retrn,3,<null>>,D,D>;
<org.apache.commons.cli.Option:getArgName,parmtr,1,<>> = <<org.apache.commons.cli.Option:getArgName,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,87,<>> = <<org.sunflow.core.Camera:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,422,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,422,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,677,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,933,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,933,<null>>,D,D>;
<org.dacapo.harness.TestHarness:isValidThreadCount,parmtr,1,<>> = <<org.dacapo.harness.TestHarness:isValidThreadCount,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformNormalObjectToWorld,retrn,25,<>> = <<org.sunflow.core.Instance:transformNormalObjectToWorld,retrn,25,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:init,parmtr,1,<>> = <<org.dacapo.parser.Config$ThreadModel:init,argmnt,1,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,401,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupShader,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:lookupShader,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjAddStates,local1,3,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjAddStates,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:init,parmtr,1,<>> = <<org.dacapo.harness.TeePrintStream:init,argmnt,1,<null>>,D,D>;<<java.io.PrintStream:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:printStackTrace,local1,8,<>> = <<org.codehaus.janino.util.CausedException:printStackTrace,callback,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:printStackTrace,argmnt,1,<null>>,D,D>;<<java.lang.Throwable:printStackTrace,argmnt,1,<null>>,D,D>;<<java.lang.Throwable:printStackTrace,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,20,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,20,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,60,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,60,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa9_0,local1,22,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa9_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,693,<>> = <<org.dacapo.harness.TestHarness:main,local1,693,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,local1,20,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,2,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,2,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,850,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,14,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,14,<null>>,E,E>;
<org.dacapo.harness.FileDigest:replaceAllFixed,parmtr,4,<>> = <<org.dacapo.harness.FileDigest:replaceAllFixed,argmnt,4,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,543,<>> = <<org.sunflow.core.LightServer:build,local1,543,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptions,local1,6,<>> = <<java.util.Collection:toArray,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptions,argmnt,1,<null>>,D,D>;<<java.util.Collection:size,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformObjectToWorld,parmtr,2,<>> = <<org.sunflow.core.Instance:transformObjectToWorld,argmnt,2,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:allowReflectionBounced,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:allowReflectionBounced,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,928,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,597,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:stopIteration,local1,24,<>> = <<org.dacapo.harness.Benchmark:stopIteration,local1,24,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,247,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,247,<null>>,E,E>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,117,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,117,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa8_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa8_0,local1,1,<null>>,E,E>;
<org.sunflow.core.ShadingState:specularPhong,parmtr,1,<>> = <<org.sunflow.core.ShadingState:specularPhong,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceGlossy,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDepth,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getBound,local1,83,<>> = <<org.sunflow.math.BoundingBox:getBound,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa2_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa2_0,local1,1,<null>>,E,E>;
<org.sunflow.RenderObjectMap:update,local1,86,<>> = <<org.sunflow.RenderObjectMap:update,local1,86,<null>>,D,D>;
<org.sunflow.core.gi.GIEngineFactory:create,retrn,61,<>> = <<org.sunflow.core.gi.GIEngineFactory:create,retrn,61,<null>>,D,D>;<<org.sunflow.core.gi.FakeGIEngine:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,301,<>> = <<org.sunflow.SunflowAPI:create,local1,301,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:access$100,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$100,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:intersect,parmtr,3,<>> = <<org.sunflow.core.Instance:intersect,argmnt,3,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,local1,22,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,129,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,129,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:adjustBeginLineColumn,local1,186,<>> = <<org.dacapo.parser.SimpleCharStream:adjustBeginLineColumn,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,local1,18,<>> = <<java.io.InputStreamReader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,100,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,100,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:longInt,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:longInt,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVector,local1,16,<>> = <<org.sunflow.core.ParameterList:getVector,local1,16,<null>>,E,E>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,43,<>> = <<org.sunflow.image.Color:getAverage,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,291,<>> = <<org.sunflow.SunflowAPI:create,local1,291,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,36,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,36,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,75,<>> = <<org.sunflow.SunflowAPI:compile,local1,75,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,retrn,351,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,retrn,351,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,6758,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,6758,<null>>,E,E>;
<org.sunflow.core.LightServer:traceGlossy,local1,52,<>> = <<org.sunflow.core.LightServer:traceGlossy,local1,52,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,204,<>> = <<org.sunflow.core.LightServer:showStats,local1,204,<null>>,D,D>;
<org.sunflow.core.ShadingState:getCameraToWorld,local1,6,<>> = <<org.sunflow.core.Scene:getCamera,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:bernstein,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:bernstein,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:clinit,local1,53,<>> = <<org.dacapo.parser.Config$ThreadModel:clinit,local1,53,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:outputClause,parmtr,3,<>> = <<org.dacapo.parser.ConfigFile:outputClause,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,212,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,212,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,363,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,291,<>> = <<java.lang.Integer:parseInt,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,49,<>> = <<org.dacapo.harness.TestHarness:dump,local1,49,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionValue,retrn,18,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,retrn,18,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,191,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Solvers:init,parmtr,1,<>> = <<org.sunflow.math.Solvers:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,225,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,225,<null>>,D,D>;
<org.sunflow.math.Point2:toString,local1,24,<>> = <<org.sunflow.math.Point2:toString,local1,24,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,394,<>> = <<org.sunflow.core.LightServer:build,local1,394,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,308,<>> = <<org.sunflow.math.Vector3:div,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:length,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,115,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,115,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,73,<>> = <<org.apache.commons.cli.Parser:parse,local1,73,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:ReInit,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getTrianglePoints,local1,73,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getTrianglePoints,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI:formatOutput,local1,18,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Timer:toString,parmtr,1,<>> = <<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,callback,1,<null>>,D,D>;<<org.sunflow.system.Timer:nanos,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,170,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,local1,678,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,963,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<null>>,E,E>;
<org.dacapo.parser.Config:getDigest,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflection,local1,52,<>> = <<org.sunflow.core.LightServer:traceReflection,local1,52,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,137,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,160,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,160,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,161,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,161,<null>>,D,D>;<<org.sunflow.core.bucket.RandomBucketOrder:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,212,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,212,<null>>,E,E>;
<org.sunflow.SunflowAPI:lookupGeometry,parmtr,2,<>> = <<org.sunflow.SunflowAPI:lookupGeometry,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,local1,137,<>> = <<org.sunflow.util.FastHashMap$Entry:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,73,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,73,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,690,<>> = <<org.sunflow.core.accel.KDTree:build,local1,690,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,507,<>> = <<org.sunflow.core.accel.KDTree:build,local1,507,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,20,<>> = <<org.dacapo.harness.Benchmark:initialize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,131,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,local1,13,<>> = <<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:values,retrn,5,<>> = <<org.sunflow.system.UI$PrintLevel:values,retrn,5,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1038,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1038,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:intersectPrimitive,parmtr,4,<>> = <<org.sunflow.core.primitive.Sphere:intersectPrimitive,argmnt,4,<null>>,D,D>;<<org.sunflow.core.IntersectionState:setIntersection,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Util:init,parmtr,1,<>> = <<org.apache.commons.cli.Util:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,920,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,49,<>> = <<org.dacapo.harness.TestHarness:rmdir,local1,49,<null>>,E,E>;
<org.sunflow.math.OrthoNormalBasis:transform,local1,33,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,parmtr,2,<>> = <<org.dacapo.harness.FileDigest:main,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:init,parmtr,3,<>> = <<org.sunflow.util.FastHashMap$Entry:init,argmnt,3,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,parmtr,1,<>> = <<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:traceBake,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:printStackTrace,parmtr,2,<>> = <<org.codehaus.janino.util.CausedException:printStackTrace,argmnt,2,<null>>,D,D>;<<java.io.PrintStream:print,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:printStackTrace,callback,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa9_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa9_0,local1,1,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,307,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,661,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,661,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,local1,7,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,parmtr,6,<>> = <<org.dacapo.parser.TokenMgrError:LexicalError,argmnt,6,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,2,<>> = <<org.sunflow.system.UI$Module:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1100,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1100,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,local1,6,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,local1,6,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,6,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,6,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,parmtr,2,<>> = <<org.sunflow.core.PhotonStore:numEmit,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:calculatePhotons,argmnt,2,<null>>,D,D>;<<org.sunflow.core.PhotonStore:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PhotonStore:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,local1,14,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersect,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadFactor,local1,6,<>> = <<org.dacapo.parser.Config:setThreadFactor,local1,6,<null>>,E,E>;
<org.dacapo.parser.Config:print,local1,284,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupInstance,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:lookupInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,163,<>> = <<org.sunflow.SunflowAPI:parameter,local1,163,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,retrn,2,<>> = <<org.sunflow.system.SearchPath:resolvePath,argmnt,2,<null>>,D,D>;<<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:resolvePath,retrn,2,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,352,<>> = <<org.dacapo.parser.Config:print,local1,352,<null>>,D,D>;
<org.sunflow.core.InstanceList:getWorldBounds,local1,14,<>> = <<org.sunflow.core.InstanceList:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:addValue,parmtr,1,<>> = <<org.apache.commons.cli.Option:addValue,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,parmtr,2,<>> = <<org.sunflow.image.Color:blend,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getDepth,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getDepth,argmnt,1,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskStart,parmtr,1,<>> = <<org.sunflow.system.ui.ConsoleInterface:taskStart,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,205,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:getRadiance,local1,9,<>> = <<org.sunflow.core.light.TriangleMeshLight:getRadiance,local1,9,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,300,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,parmtr,2,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,parmtr,2,<>> = <<org.sunflow.core.ParameterList:add,argmnt,2,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,67,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,64,<>> = <<java.util.jar.JarEntry:getName,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,663,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,4,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,local1,4,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,86,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,474,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:add,parmtr,3,<>> = <<org.sunflow.math.Vector3:add,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,37,<>> = <<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,132,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,132,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,159,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,159,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,429,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,152,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,152,<null>>,E,E>;
<org.sunflow.math.Vector3:mul,parmtr,1,<>> = <<org.sunflow.math.Vector3:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,local1,83,<>> = <<org.sunflow.core.LightServer:getRadiance,local1,83,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,445,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,438,<>> = <<org.sunflow.core.accel.KDTree:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:init,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,458,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,571,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,571,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,154,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,154,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,403,<>> = <<org.sunflow.core.LightServer:build,local1,403,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,526,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,452,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:getAbsolutePath,argmnt,1,<null>>,D,D>;<<java.io.File:canRead,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,74,<>> = <<org.dacapo.harness.FileDigest:main,local1,74,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:GetImage,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:GetImage,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,515,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,515,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,724,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.camera.PinholeLens:update,parmtr,1,<>> = <<org.sunflow.core.camera.PinholeLens:update,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,389,<>> = <<org.sunflow.SunflowAPI:create,local1,389,<null>>,D,D>;
<org.sunflow.core.Geometry:build,local1,60,<>> = <<org.sunflow.core.Geometry:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructure:build,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,2,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:longInt,local1,10,<>> = <<org.dacapo.parser.ConfigFile:longInt,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:div,parmtr,1,<>> = <<org.sunflow.math.Vector3:div,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:decode,local1,47,<>> = <<org.sunflow.math.Vector3:decode,local1,47,<null>>,E,E>;
<org.sunflow.core.gi.GIEngineFactory:create,retrn,79,<>> = <<org.sunflow.core.gi.GIEngineFactory:create,retrn,79,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getBounds,retrn,3,<>> = <<org.sunflow.core.Instance:getBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getBounds,retrn,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descElement,local1,11,<>> = <<org.dacapo.parser.ConfigFile:descElement,local1,11,<null>>,D,D>;
<org.codehaus.janino.CompileException:init,parmtr,1,<>> = <<org.codehaus.janino.CompileException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:toLinear,local1,3,<>> = <<org.sunflow.image.Color:toLinear,local1,3,<null>>,E,E>;
<org.dacapo.harness.Callback:runAgain,local1,71,<>> = <<org.dacapo.harness.Callback:runAgain,local1,71,<null>>,E,E>;
<org.sunflow.SunflowAPI:lookupOptions,parmtr,2,<>> = <<org.sunflow.SunflowAPI:lookupOptions,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:main,argmnt,2,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,local1,47,<>> = <<org.codehaus.janino.util.CausedException:initCause,local1,47,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getValidationReport,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getValidationReport,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getBeginLine,local1,3,<>> = <<org.dacapo.parser.SimpleCharStream:getBeginLine,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descId,local1,253,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:descId,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,167,<>> = <<org.dacapo.parser.Config:describe,local1,167,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,128,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,128,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,63,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPoint,local1,4,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,14,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,14,<null>>,E,E>;
<org.sunflow.SunflowAPI:remove,parmtr,2,<>> = <<org.sunflow.SunflowAPI:remove,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:update,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getColor,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:cleanup,local1,8,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,704,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,704,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,local1,50,<>> = <<org.sunflow.core.Shader:getRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1200,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1200,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1200,retrn,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,parmtr,1,<>> = <<org.sunflow.SunflowAPI:light,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupLight,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,local1,15,<>> = <<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,175,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,175,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:buildTree,local1,792,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,792,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,75,<>> = <<org.sunflow.core.accel.KDTree:build,local1,75,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,local1,427,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:resolveOption,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:resolveOption,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:config,retrn,16,<>> = <<org.dacapo.parser.ConfigFile:config,retrn,16,<null>>,D,D>;<<org.dacapo.parser.Config:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:threadModel,local1,83,<>> = <<org.dacapo.parser.ConfigFile:threadModel,local1,83,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,584,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,321,<>> = <<org.sunflow.math.QMC:clinit,local1,321,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionObject,retrn,4,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,retrn,4,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:init,parmtr,3,<>> = <<org.codehaus.janino.util.LocatedException:init,argmnt,3,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,parmtr,3,<>> = <<org.sunflow.SunflowAPI:instance,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildTask:init,local1,11,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,161,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,161,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,57,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$002,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$002,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,4,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,4,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,local1,157,<>> = <<org.sunflow.core.AccelerationStructureFactory:create,local1,157,<null>>,E,E>;
<org.sunflow.core.shader.DiffuseShader:init,local1,7,<>> = <<org.sunflow.core.shader.DiffuseShader:init,local1,7,<null>>,E,E>;
<org.sunflow.core.LightServer:shadePhoton,local1,3,<>> = <<org.sunflow.core.Instance:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:FillBuff,local1,1,<>> = <<org.dacapo.parser.SimpleCharStream:FillBuff,local1,1,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:digestOption,local1,147,<>> = <<org.dacapo.parser.ConfigFile:digestOption,local1,147,<null>>,E,E>;
<org.apache.commons.cli.Options:getOptionGroups,local1,7,<>> = <<org.apache.commons.cli.Options:getOptionGroups,argmnt,1,<null>>,D,D>;<<java.util.Map:values,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,784,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,784,<null>>,D,D>;
<org.sunflow.util.FastHashMap:iterator,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:iterator,callback,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,226,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,226,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:outputClause,local1,347,<>> = <<org.dacapo.parser.ConfigFile:outputClause,local1,347,<null>>,E,E>;
<org.apache.commons.cli.Parser:processProperties,local1,43,<>> = <<org.apache.commons.cli.Options:getOption,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,101,<>> = <<java.util.Set:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,144,<>> = <<org.sunflow.core.Scene:getRadiance,local1,144,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,170,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,170,<null>>,D,D>;
<org.sunflow.core.InstanceList:update,parmtr,3,<>> = <<org.sunflow.core.InstanceList:update,argmnt,3,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,102,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,102,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,local1,17,<>> = <<org.sunflow.SunflowAPI:instance,local1,17,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:init,local1,27,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,27,<null>>,E,E>;
<org.sunflow.system.SearchPath:resolvePath,local1,142,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,142,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,54,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,29,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,29,<null>>,E,E>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,190,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,397,<>> = <<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:has,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceFinalGather,local1,19,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:postIterationCleanup,local1,7,<>> = <<java.util.Set:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,local1,14,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getShader,retrn,29,<>> = <<org.sunflow.core.Instance:getShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getShader,retrn,29,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,413,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,413,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,16,<>> = <<org.sunflow.SunflowAPI:parameter,local1,16,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:burstToken,local1,105,<>> = <<org.apache.commons.cli.PosixParser:burstToken,local1,105,<null>>,D,D>;
<org.sunflow.math.Point3:add,parmtr,3,<>> = <<org.sunflow.math.Point3:add,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,261,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,261,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,5066,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,5066,<null>>,E,E>;
<org.sunflow.SunflowAPI:camera,parmtr,3,<>> = <<org.sunflow.SunflowAPI:camera,argmnt,3,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getCenter,local1,3,<>> = <<org.sunflow.math.BoundingBox:getCenter,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,374,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,64,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,64,<null>>,D,D>;
<org.apache.commons.cli.Option:hashCode,local1,3,<>> = <<org.apache.commons.cli.Option:hashCode,argmnt,1,<null>>,D,D>;<<java.lang.String:hashCode,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hashCode,callback,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,103,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,retrn,62,<>> = <<org.dacapo.harness.Benchmark:cleanup,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:run,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:runBenchmark,retrn,62,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,24,<>> = <<org.sunflow.core.LightServer$1:run,local1,24,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:ReInit,local1,38,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,local1,27,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,41,<>> = <<org.sunflow.system.UI$Module:clinit,local1,41,<null>>,E,E>;
<org.sunflow.SunflowAPI:parameter,parmtr,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,3,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:init,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:init,callback,2,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,202,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,202,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,115,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,115,<null>>,E,E>;
<org.dacapo.harness.TestHarness:bmSizes,local1,3,<>> = <<org.dacapo.harness.TestHarness:bmSizes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describeSizes,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,28,<>> = <<org.apache.commons.cli.OptionValidator:validateOption,local1,28,<null>>,E,E>;
<org.sunflow.math.Vector3:decode,local1,3,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,940,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,940,<null>>,D,D>;
<org.sunflow.core.ShadingState:getNormal,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_consume_token,retrn,37,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,retrn,37,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,7,<>> = <<org.sunflow.core.Ray:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,84,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,84,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,74,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,local1,74,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,80,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,80,<null>>,E,E>;
<org.sunflow.core.Camera:getRay,local1,32,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,25,<>> = <<org.sunflow.core.accel.UniformGrid:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,25,<null>>,D,D>;
<org.sunflow.SunflowAPI:modifier,local1,85,<>> = <<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:modifier,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:getNumPrimitives,parmtr,1,<>> = <<org.sunflow.core.Geometry:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,267,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$700,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$700,argmnt,2,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoord,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getTexCoord,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:transformObjectToWorld,local1,3,<>> = <<org.sunflow.core.Instance:transformObjectToWorld,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformP,argmnt,1,<null>>,D,D>;
<org.sunflow.core.filter.TriangleFilter:get,parmtr,1,<>> = <<org.sunflow.core.filter.TriangleFilter:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createDiffuseBounceState,parmtr,3,<>> = <<org.sunflow.core.ShadingState:createDiffuseBounceState,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,376,<>> = <<org.sunflow.core.LightServer:build,local1,376,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:init,local1,8,<>> = <<java.util.List:clear,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,1,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,1,<null>>,E,E>;
<org.sunflow.core.InstanceList:getWorldBounds,parmtr,2,<>> = <<org.sunflow.core.InstanceList:getWorldBounds,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:clinit,local1,48,<>> = <<org.dacapo.parser.Config$ThreadModel:clinit,local1,48,<null>>,E,E>;
<org.sunflow.core.filter.FilterFactory:get,retrn,137,<>> = <<org.sunflow.core.filter.TriangleFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.FilterFactory:get,retrn,137,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,63,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,local1,63,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,263,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,263,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,306,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:setCommandLineOptions,local1,45,<>> = <<org.dacapo.harness.Benchmark:setCommandLineOptions,local1,45,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,902,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,902,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,199,<>> = <<org.sunflow.SunflowAPI:create,local1,199,<null>>,D,D>;
<org.sunflow.image.Color:div,parmtr,3,<>> = <<org.sunflow.image.Color:div,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,parmtr,4,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,4,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,callback,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformObjectToWorld,retrn,25,<>> = <<org.sunflow.core.Instance:transformObjectToWorld,retrn,25,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getCallback,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getCallback,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,683,<>> = <<org.sunflow.core.ParameterList:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addVectors,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addIntegerArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addTexCoords,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addPoints,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:radix12,local1,5,<>> = <<org.sunflow.core.accel.KDTree:radix12,local1,5,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,380,<>> = <<org.sunflow.core.Scene:render,local1,380,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,49,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAddTwoStates,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAddTwoStates,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,893,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,169,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,169,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,215,<>> = <<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,parmtr,4,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,argmnt,4,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:openLog,parmtr,1,<>> = <<org.dacapo.harness.TeePrintStream:openLog,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:threadModel,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:threadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:access$300,parmtr,3,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$300,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,846,<>> = <<org.sunflow.core.accel.KDTree:build,local1,846,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,55,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,local1,55,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,54,<>> = <<org.sunflow.Benchmark:init,local1,54,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,2,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,2528,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,2528,<null>>,E,E>;
<org.sunflow.core.gi.GIEngineFactory:create,local1,130,<>> = <<org.sunflow.core.gi.GIEngineFactory:create,local1,130,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getBound,local1,67,<>> = <<org.sunflow.math.BoundingBox:getBound,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getInt,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,local1,98,<>> = <<org.sunflow.SunflowAPI:lookupInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:instance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,373,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,373,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,6194,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,6194,<null>>,E,E>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,276,<>> = <<org.sunflow.core.gi.InstantGI:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,parmtr,2,<>> = <<org.sunflow.core.Display:imageUpdate,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:renderBucket,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Display:imagePrepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,201,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,201,<null>>,D,D>;<<org.sunflow.core.bucket.InvertedBucketOrder:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:getWorldBounds,parmtr,2,<>> = <<org.sunflow.core.Geometry:getWorldBounds,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,374,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,411,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getThreadCount,retrn,10,<>> = <<org.dacapo.harness.CommandLineArgs:getThreadCount,retrn,10,<null>>,D,D>;
<org.sunflow.core.ParameterList:addMatrices,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addMatrices,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,10,<>> = <<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,10,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,108,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:getMessage,parmtr,1,<>> = <<org.dacapo.parser.TokenMgrError:getMessage,argmnt,1,<null>>,D,D>;<<java.lang.Throwable:getMessage,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.TokenMgrError:getMessage,callback,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,747,<>> = <<org.dacapo.harness.Benchmark:validate,local1,747,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,331,<>> = <<java.lang.Thread:setPriority,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,268,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,268,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:description,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:description,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,local1,46,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa5_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa5_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa6_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,23,<>> = <<org.dacapo.harness.Benchmark:initialize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,61,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_consume_token,local1,34,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:getNextToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.Scanner$ScanException:init,local1,4,<>> = <<org.codehaus.janino.Location:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,128,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,128,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,120,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,120,<null>>,E,E>;
<org.dacapo.parser.ParseException:add_escapes,local1,243,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,local1,29,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,29,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeHit,retrn,22,<>> = <<org.sunflow.core.LightServer:shadeHit,retrn,22,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,571,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,571,<null>>,D,D>;
<org.apache.commons.cli.Option:init,parmtr,2,<>> = <<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,local1,111,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,local1,111,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,157,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,3,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,309,<>> = <<org.sunflow.core.Instance:update,local1,309,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1300,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1300,argmnt,2,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskStop,local1,2,<>> = <<org.sunflow.system.ui.ConsoleInterface:taskStop,local1,2,<null>>,E,E>;
<org.sunflow.math.Matrix4:init,parmtr,1,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,parmtr,1,<>> = <<org.dacapo.harness.Callback:complete,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:complete,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceShadow,retrn,14,<>> = <<org.sunflow.core.ShadingState:traceShadow,retrn,14,<null>>,D,D>;
<org.sunflow.math.Vector3:init,parmtr,1,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,retrn,13,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,retrn,13,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:addOption,local1,3,<>> = <<org.apache.commons.cli.CommandLine:addOption,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,53,<>> = <<org.sunflow.SunflowAPI:geometry,local1,53,<null>>,D,D>;
<org.sunflow.core.filter.TriangleFilter:init,parmtr,1,<>> = <<org.sunflow.core.filter.TriangleFilter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,144,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,144,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,94,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,94,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,local1,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,193,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,193,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,198,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,4,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,565,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,565,<null>>,E,E>;
<org.dacapo.parser.Config:hasDigest,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,185,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createPhotonState,parmtr,5,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createPhotonState,callback,5,<null>>,D,D>;<<org.sunflow.core.ShadingState:createPhotonState,argmnt,5,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,local1,36,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,158,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,158,<null>>,D,D>;
<org.apache.commons.cli.Option:hasValueSeparator,parmtr,1,<>> = <<org.apache.commons.cli.Option:hasValueSeparator,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,323,<>> = <<org.sunflow.RenderObjectMap:remove,local1,323,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1400,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1400,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,1144,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Memory:bytesToString,local1,38,<>> = <<org.sunflow.system.Memory:bytesToString,local1,38,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,147,<>> = <<org.dacapo.harness.Benchmark:initialize,local1,147,<null>>,E,E>;
<org.sunflow.core.LightServer:traceReflectionPhoton,parmtr,2,<>> = <<org.sunflow.core.LightServer:traceReflectionPhoton,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getReflectionDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,64,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,64,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,901,<>> = <<org.dacapo.harness.Benchmark:validate,local1,901,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,144,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,144,<null>>,E,E>;
<org.sunflow.core.ShadingState:specularPhong,parmtr,2,<>> = <<org.sunflow.core.ShadingState:specularPhong,argmnt,2,<null>>,D,D>;<<org.sunflow.image.Color:isBlack,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,138,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupLight,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:lookupLight,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:gobble,parmtr,2,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:gobble,argmnt,2,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:shade,parmtr,1,<>> = <<org.sunflow.core.ShadingState:shade,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:clinit,local1,74,<>> = <<org.sunflow.math.Vector3:clinit,local1,74,<null>>,E,E>;
<org.sunflow.util.IntArray:trim,parmtr,1,<>> = <<org.sunflow.util.IntArray:trim,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getParsedOptionValue,local1,13,<>> = <<org.apache.commons.cli.Option:getType,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,109,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,539,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,539,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,75,<>> = <<java.lang.String:replace,argmnt,1,<null>>,D,D>;<<java.lang.String:endsWith,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1110,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1110,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,62,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,62,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:access$002,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$002,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,6476,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,6476,<null>>,E,E>;
<org.dacapo.parser.Config:print,local1,246,<>> = <<java.util.Set:iterator,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:enableValidationReport,local1,6,<>> = <<org.dacapo.harness.Benchmark:enableValidationReport,local1,6,<null>>,E,E>;
<org.dacapo.parser.Config:getThreadModel,retrn,3,<>> = <<org.dacapo.parser.Config:getThreadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadModel,retrn,3,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,121,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,121,<null>>,E,E>;
<org.dacapo.parser.Config:checkExists,parmtr,2,<>> = <<org.dacapo.parser.Config:checkExists,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3400,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3400,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,425,<>> = <<org.sunflow.image.Color:isBlack,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:setOptions,parmtr,2,<>> = <<org.apache.commons.cli.Parser:setOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:setOptions,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Options:getRequiredOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:init,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:init,parmtr,2,<>> = <<org.apache.commons.cli.MissingOptionException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,71,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,136,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,136,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,304,<>> = <<org.dacapo.harness.Benchmark:validate,local1,304,<null>>,E,E>;
<org.sunflow.core.ShadingState:getRandom,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,516,<>> = <<org.dacapo.harness.Benchmark:validate,local1,516,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,retrn,3,<>> = <<org.apache.commons.cli.Option:clone,retrn,3,<null>>,D,D>;
<org.sunflow.system.UI$Module:init,parmtr,2,<>> = <<org.sunflow.system.UI$Module:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,589,<>> = <<org.sunflow.core.accel.KDTree:build,local1,589,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getMatrix,local1,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,364,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:init,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$Entry:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,47,<>> = <<org.sunflow.math.QMC:clinit,local1,47,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:intersect,local1,957,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,957,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,450,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,450,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ReInit,local1,20,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,426,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,433,<>> = <<org.dacapo.harness.Benchmark:validate,local1,433,<null>>,E,E>;
<org.sunflow.core.Instance:transformNormalObjectToWorld,parmtr,2,<>> = <<org.sunflow.core.Instance:transformNormalObjectToWorld,argmnt,2,<null>>,D,D>;
<org.sunflow.math.Vector3:set,retrn,1,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:set,retrn,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,44,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,44,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,68,<>> = <<org.sunflow.core.SceneParser:parse,argmnt,1,<null>>,D,D>;<<org.sunflow.core.parser.RA3Parser:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,25,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,25,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:loadClass,retrn,7,<>> = <<org.dacapo.harness.DacapoClassLoader:loadClass,retrn,7,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$700,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$700,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupShader,local1,13,<>> = <<org.sunflow.RenderObjectMap:lookupShader,local1,13,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,parmtr,2,<>> = <<org.sunflow.core.Camera:getRay,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,parmtr,1,<>> = <<org.apache.commons.cli.Option:equals,argmnt,1,<null>>,D,D>;<<java.lang.Object:getClass,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,callback,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,857,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:exists,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,45,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getString,retrn,3,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList:getString,retrn,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getCnfOverride,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getCnfOverride,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getBakingPrimitives,parmtr,1,<>> = <<org.sunflow.core.Instance:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,243,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1500,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1500,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1500,retrn,3,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,85,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,85,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,41,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,41,<null>>,E,E>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,60,<>> = <<org.dacapo.harness.Benchmark:unpackZipStream,local1,60,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,102,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,102,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,retrn,22,<>> = <<org.sunflow.core.Camera:getRay,retrn,22,<null>>,D,D>;<<org.sunflow.core.Ray:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,parmtr,2,<>> = <<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI:getGlobalRadiance,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,800,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,114,<>> = <<org.dacapo.parser.ParseException:initialise,local1,114,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$400,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$400,retrn,3,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,1007,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,1007,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,761,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,761,<null>>,E,E>;
<org.dacapo.parser.Config$Size:setThreadLimit,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:setThreadLimit,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,482,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,482,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:init,local1,42,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,42,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,81,<>> = <<org.sunflow.SunflowAPI:compile,local1,81,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:makeFromW,local1,212,<>> = <<org.sunflow.math.OrthoNormalBasis:makeFromW,local1,212,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptionGroup,local1,7,<>> = <<org.apache.commons.cli.Options:getOptionGroup,local1,7,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:access$202,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$Entry:access$202,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,417,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,417,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,357,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,357,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:GetImage,local1,47,<>> = <<java.lang.String:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,11,<>> = <<org.apache.commons.cli.CommandLine:getOptionProperties,argmnt,1,<null>>,D,D>;<<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getPreserve,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getPreserve,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,166,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,166,<null>>,D,D>;
<org.dacapo.harness.Benchmark:cleanup,local1,20,<>> = <<org.dacapo.harness.Benchmark:cleanup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,414,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,414,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,22,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.Scanner$ScanException:init,local1,9,<>> = <<org.codehaus.janino.Scanner$ScanException:init,local1,9,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,558,<>> = <<org.sunflow.image.RGBSpace:toString,local1,558,<null>>,D,D>;
<org.apache.commons.cli.Option:addValueForProcessing,local1,26,<>> = <<org.apache.commons.cli.Option:addValueForProcessing,local1,26,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateInner,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:updateInner,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,341,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,502,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,502,<null>>,D,D>;
<org.sunflow.core.LightServer:getPhotonShader,parmtr,2,<>> = <<org.sunflow.core.LightServer:getPhotonShader,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,11,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,11,<null>>,D,D>;
<org.sunflow.math.BoundingBox:isEmpty,local1,10,<>> = <<org.sunflow.math.BoundingBox:isEmpty,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,109,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,109,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,local1,83,<>> = <<org.dacapo.harness.CommandLineArgs:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getArgList,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:defineCallback,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getTrianglePoints,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getTrianglePoints,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,19,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapWU,local1,6,<>> = <<org.sunflow.math.OrthoNormalBasis:swapWU,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:swapWU,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapUV,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:swapUV,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,46,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,135,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,193,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,278,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<Harness:main,local1,31,<>> = <<Harness:main,local1,31,<null>>,E,E>;
<org.sunflow.core.Ray:init,parmtr,2,<>> = <<org.sunflow.core.Ray:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,78,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,78,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,151,<>> = <<org.sunflow.core.Instance:update,local1,151,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertRGBtoXYZ,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:convertRGBtoXYZ,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,retrn,535,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,retrn,535,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,local1,17,<>> = <<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,188,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,188,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,88,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,186,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,186,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$2200,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2200,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,228,<>> = <<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:toArray,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:size,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:update,local1,63,<>> = <<org.sunflow.core.Geometry:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.RenderObject:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,11,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,11,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,39,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:intersect,parmtr,3,<>> = <<org.sunflow.core.Geometry:intersect,argmnt,3,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,130,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,130,<null>>,D,D>;
<org.sunflow.core.Scene:getThreads,local1,9,<>> = <<java.lang.Runtime:availableProcessors,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,2,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,369,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,369,<null>>,E,E>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,134,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:resolveOption,local1,51,<>> = <<org.apache.commons.cli.CommandLine:resolveOption,local1,51,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,215,<>> = <<org.sunflow.SunflowAPI:create,local1,215,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,145,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,145,<null>>,E,E>;
<org.sunflow.math.Matrix4:fromBasis,local1,11,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:hasLongOpt,parmtr,1,<>> = <<org.apache.commons.cli.Option:hasLongOpt,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,9,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,local1,9,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,19,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,164,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,164,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,121,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,121,<null>>,E,E>;
<org.apache.commons.cli.Options:helpOptions,local1,7,<>> = <<org.apache.commons.cli.Options:helpOptions,argmnt,1,<null>>,D,D>;<<java.util.Map:values,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,78,<>> = <<org.sunflow.image.RGBSpace:toString,local1,78,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:numEmit,local1,3,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:numEmit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,23,<>> = <<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:clinit,local1,8,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,8,<null>>,E,E>;
<org.sunflow.SunflowAPI:build,parmtr,1,<>> = <<org.sunflow.SunflowAPI:build,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2400,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2400,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,69,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,69,<null>>,E,E>;
<org.sunflow.core.Instance:transformNormalObjectToWorld,local1,3,<>> = <<org.sunflow.core.Instance:transformNormalObjectToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,51,<>> = <<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSource:getPower,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,344,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,344,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,1002,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformWorldToObject,retrn,9,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformWorldToObject,retrn,9,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,156,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,156,<null>>,D,D>;
<org.sunflow.core.ShadingState:getPoint,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:prepareShadingState,local1,18,<>> = <<org.sunflow.core.Instance:prepareShadingState,local1,18,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,459,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,459,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,34,<>> = <<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,141,<>> = <<org.dacapo.harness.Callback:complete,local1,141,<null>>,E,E>;
<org.sunflow.image.RGBSpace:rgbToNonLinear,local1,3,<>> = <<org.sunflow.image.RGBSpace:rgbToNonLinear,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,485,<>> = <<org.dacapo.parser.ParseException:initialise,local1,485,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,630,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,630,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,366,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,local1,64,<>> = <<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,26,<>> = <<org.dacapo.harness.Benchmark:unpackZipStream,local1,26,<null>>,E,E>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,216,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,93,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,93,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,735,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,735,<null>>,E,E>;
<org.dacapo.harness.Callback:complete,local1,105,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,83,<>> = <<org.dacapo.harness.Callback:start,local1,83,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getTimeoutDialation,retrn,10,<>> = <<org.dacapo.harness.CommandLineArgs:getTimeoutDialation,retrn,10,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,45,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,136,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,136,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,109,<>> = <<org.sunflow.core.LightServer:build,local1,109,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,37,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,372,<>> = <<org.dacapo.parser.ParseException:initialise,local1,372,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,95,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,3,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,195,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,195,<null>>,D,D>;
<org.dacapo.harness.TestHarness:isValidSize,parmtr,2,<>> = <<org.dacapo.harness.TestHarness:isValidSize,argmnt,2,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,local1,19,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:init,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:init,argmnt,1,<null>>,D,D>;<<java.lang.Thread:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.CompileException:init,parmtr,3,<>> = <<org.codehaus.janino.CompileException:init,argmnt,3,<null>>,D,D>;
<org.sunflow.math.Matrix4:multiply,parmtr,2,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,430,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,430,<null>>,D,D>;
<org.sunflow.image.Color:add,parmtr,2,<>> = <<org.sunflow.image.Color:add,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:readChar,local1,43,<>> = <<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Ray:transform,retrn,8,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:transform,retrn,8,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,347,<>> = <<org.sunflow.image.RGBSpace:toString,local1,347,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$ParameterType:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:removeShader,local1,25,<>> = <<org.sunflow.core.Instance:removeShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,79,<>> = <<org.dacapo.harness.FileDigest:getText,local1,79,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,106,<>> = <<org.sunflow.image.Color:clinit,local1,106,<null>>,E,E>;
<org.sunflow.core.Camera:init,parmtr,1,<>> = <<org.sunflow.core.Camera:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:hasOption,local1,4,<>> = <<org.apache.commons.cli.CommandLine:hasOption,local1,4,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,9,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,9,<null>>,E,E>;
<org.sunflow.system.UI:set,local1,6,<>> = <<org.sunflow.system.UI:set,local1,6,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:access$1300,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1300,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getBoolValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,889,<>> = <<org.sunflow.core.accel.KDTree:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,108,<>> = <<org.sunflow.core.SceneParser:parse,argmnt,1,<null>>,D,D>;<<org.sunflow.core.parser.ShaveRibParser:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setFilterScratch,local1,12,<>> = <<org.dacapo.parser.Config:setFilterScratch,local1,12,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,39,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,39,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,159,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,159,<null>>,D,D>;
<org.apache.commons.cli.Option:getType,retrn,3,<>> = <<org.apache.commons.cli.Option:getType,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getType,retrn,3,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,24,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:clinit,local1,2,<>> = <<org.dacapo.harness.Callback$Mode:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,local1,18,<>> = <<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:processValue,local1,63,<>> = <<org.apache.commons.cli.Option:processValue,local1,63,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,parmtr,3,<>> = <<org.sunflow.core.accel.KDTree:intersect,argmnt,3,<null>>,D,D>;<<org.sunflow.core.IntersectionState:getStackTop,argmnt,1,<null>>,D,D>;<<org.sunflow.core.IntersectionState:getStack,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,48,<>> = <<org.sunflow.core.SceneParser:parse,argmnt,1,<null>>,D,D>;<<org.sunflow.core.parser.RA2Parser:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,local1,4,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:update,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:update,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:valueOf,parmtr,2,<>> = <<org.sunflow.system.UI$PrintLevel:valueOf,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceTransparency,local1,8,<>> = <<org.sunflow.core.ShadingState:traceTransparency,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,11,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,11,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:getPoint,parmtr,4,<>> = <<org.sunflow.math.Point3:set,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,4,<null>>,D,D>;
<org.apache.commons.cli.Options:toString,retrn,53,<>> = <<org.apache.commons.cli.Options:toString,retrn,53,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,parmtr,1,<>> = <<org.codehaus.janino.util.LocatedException:getMessage,argmnt,1,<null>>,D,D>;<<java.lang.Throwable:getMessage,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:getMessage,callback,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,196,<>> = <<org.sunflow.RenderObjectMap:remove,local1,196,<null>>,D,D>;
<org.apache.commons.cli.Option:setLongOpt,parmtr,1,<>> = <<org.apache.commons.cli.Option:setLongOpt,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,321,<>> = <<org.sunflow.core.LightServer:build,local1,321,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,46,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,46,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:init,parmtr,1,<>> = <<org.apache.commons.cli.MissingOptionException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.MissingOptionException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:getRGB,retrn,3,<>> = <<org.sunflow.image.Color:getRGB,retrn,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,local1,7,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:instance,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:set,retrn,1,<>> = <<org.sunflow.math.Point3:set,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point3:set,retrn,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:gammaCorrect,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:gammaCorrect,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,394,<>> = <<org.sunflow.math.Vector3:div,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:length,argmnt,1,<null>>,D,D>;
<org.sunflow.core.bucket.HilbertBucketOrder:getBucketSequence,retrn,53,<>> = <<org.sunflow.core.bucket.HilbertBucketOrder:getBucketSequence,retrn,53,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,282,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,1,<>> = <<org.dacapo.parser.ConfigFile:init,local1,1,<null>>,E,E>;
<org.apache.commons.cli.Option:init,parmtr,1,<>> = <<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,144,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,144,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,146,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,3,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorObjectToWorld,parmtr,2,<>> = <<org.sunflow.core.Instance:transformVectorObjectToWorld,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,11,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,11,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,local1,36,<>> = <<org.dacapo.parser.ConfigFileTokenManager:SwitchTo,local1,36,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,3092,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,3092,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionValue,retrn,3,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,3,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,retrn,3,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,retrn,571,<>> = <<org.sunflow.image.RGBSpace:toString,retrn,571,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,20,<>> = <<java.lang.String:replace,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,244,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getBound,local1,75,<>> = <<org.sunflow.math.BoundingBox:getBound,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,13,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:readable,local1,13,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getParsedOptionValue,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:getParsedOptionValue,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,55,<>> = <<org.sunflow.core.Instance:update,local1,55,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:outputClause,local1,331,<>> = <<org.dacapo.parser.ConfigFile:digestOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:hex,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:outputClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:longInt,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,45,<>> = <<org.dacapo.harness.Benchmark:prepareJars,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getStringArray,local1,19,<>> = <<org.sunflow.core.ParameterList:getStringArray,local1,19,<null>>,E,E>;
<org.sunflow.util.FastHashMap:get,local1,63,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceGlossy,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceGlossy,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<null>>,E,E>;
<org.dacapo.parser.Config$ThreadModel:clinit,local1,59,<>> = <<org.dacapo.parser.Config$ThreadModel:clinit,local1,59,<null>>,E,E>;
<org.sunflow.core.Instance:transformObjectToWorld,parmtr,1,<>> = <<org.sunflow.core.Instance:transformObjectToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,7,<>> = <<org.sunflow.SunflowAPI:parameter,local1,7,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,81,<>> = <<org.codehaus.janino.Scanner:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:init,parmtr,6,<>> = <<org.dacapo.parser.TokenMgrError:init,argmnt,6,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getArgs,parmtr,1,<>> = <<org.dacapo.parser.Config:getArgs,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,201,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:div,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:length,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,36,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,559,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,34,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,28,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getCenter,local1,10,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,retrn,200,<>> = <<org.sunflow.core.ShadingState:occlusion,retrn,200,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,103,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:values,retrn,5,<>> = <<org.sunflow.core.ParameterList$ParameterType:values,retrn,5,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:createMessage,local1,47,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:getIteration,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:getIteration,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceRefractionPhoton,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceRefractionPhoton,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1002,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1002,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,149,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,149,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,14,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,14,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,882,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetImage,local1,71,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,local1,6,<>> = <<org.sunflow.core.ParameterList:add,local1,6,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,parmtr,3,<>> = <<org.sunflow.Benchmark$BenchmarkScene:sphere,argmnt,3,<null>>,D,D>;
<org.sunflow.core.InstanceList:getPrimitiveBound,local1,3,<>> = <<org.sunflow.core.InstanceList:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,parmtr,1,<>> = <<org.sunflow.SunflowAPI:render,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupOptions,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupInstance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getDigest,parmtr,1,<>> = <<org.dacapo.parser.Config:getDigest,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteFile,local1,8,<>> = <<org.dacapo.harness.Benchmark:deleteFile,local1,8,<null>>,E,E>;
<org.sunflow.math.Point3:init,parmtr,2,<>> = <<org.sunflow.math.Point3:init,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:getValue,local1,14,<>> = <<java.util.List:get,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasNoValues,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,589,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,589,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,255,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:inverse,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:determinant,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceShadow,local1,11,<>> = <<org.sunflow.core.ShadingState:traceShadow,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Timer:nanos,parmtr,1,<>> = <<org.sunflow.system.Timer:nanos,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:nanos,callback,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,89,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,89,<null>>,D,D>;
<org.apache.commons.cli.Options:toString,local1,38,<>> = <<org.apache.commons.cli.Options:toString,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,417,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:init,local1,4,<>> = <<org.apache.commons.cli.MissingOptionException:init,local1,4,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,514,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,514,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,989,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,989,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,139,<>> = <<org.sunflow.core.LightServer:addShadingCache,local1,139,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,local1,33,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa4_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa4_0,local1,1,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,290,<>> = <<org.dacapo.parser.ParseException:initialise,local1,290,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:hasArg,parmtr,1,<>> = <<org.apache.commons.cli.Option:hasArg,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArg,callback,1,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,280,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:initCausticSamples,parmtr,1,<>> = <<org.sunflow.core.ShadingState:initCausticSamples,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,545,<>> = <<org.dacapo.harness.TestHarness:main,local1,545,<null>>,E,E>;
<org.sunflow.core.ShadingState:getShader,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,69,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,69,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,3,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,local1,7,<>> = <<java.io.InputStreamReader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Memory:init,parmtr,1,<>> = <<org.sunflow.system.Memory:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,9,<>> = <<org.dacapo.harness.Benchmark:preIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:preprocessArgs,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:bernstein,retrn,3,<>> = <<org.sunflow.core.tesselatable.BezierMesh:bernstein,retrn,3,<null>>,D,D>;
<org.sunflow.system.UI:printDetailed,parmtr,2,<>> = <<org.sunflow.system.UI:printDetailed,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3000,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3000,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,55,<>> = <<org.apache.commons.cli.CommandLine:getOptionProperties,local1,55,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,382,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer$SmallBucket:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,local1,21,<>> = <<org.codehaus.janino.util.CausedException:initCause,local1,21,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,retrn,17,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transform,retrn,17,<null>>,D,D>;<<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:init,local1,18,<>> = <<org.apache.commons.cli.Options:init,argmnt,1,<null>>,D,D>;<<java.util.HashMap:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point2:set,retrn,1,<>> = <<org.sunflow.math.Point2:set,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Point2:set,retrn,1,<null>>,D,D>;
<org.sunflow.system.Timer:toString,retrn,16,<>> = <<org.sunflow.system.Timer:toString,retrn,16,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,127,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setTextFile,parmtr,3,<>> = <<org.dacapo.parser.Config:setTextFile,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:libraries,local1,98,<>> = <<org.dacapo.parser.ConfigFile:libraries,local1,98,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadModel,local1,9,<>> = <<org.dacapo.parser.Config:getThreadModel,local1,9,<null>>,E,E>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,85,<>> = <<org.apache.commons.cli.OptionValidator:validateOption,local1,85,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_0,local1,4,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,51,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,local1,70,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,2,<null>>,D,D>;<<org.sunflow.image.Color:madd,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,370,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,370,<null>>,E,E>;
<org.sunflow.image.Color:blend,parmtr,2,<>> = <<org.sunflow.image.Color:blend,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer$1:init,parmtr,2,<>> = <<org.sunflow.core.LightServer$1:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$1:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:getNextToken,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:getNextToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,367,<>> = <<org.sunflow.image.RGBSpace:toString,local1,367,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,5,<>> = <<org.sunflow.core.ShadingState:occlusion,local1,5,<null>>,E,E>;
<org.sunflow.math.Vector3:clinit,local1,5,<>> = <<org.sunflow.math.Vector3:clinit,local1,5,<null>>,E,E>;
<org.sunflow.math.Vector3:clinit,local1,29,<>> = <<org.sunflow.math.Vector3:clinit,local1,29,<null>>,E,E>;
<org.sunflow.core.Instance:update,local1,91,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,parmtr,6,<>> = <<org.sunflow.core.ParameterList:isValidParameter,argmnt,6,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,155,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,155,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,local1,94,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getPoint,retrn,13,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getPoint,retrn,13,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,38,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,136,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,136,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,parmtr,1,<>> = <<org.dacapo.harness.TestHarness:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:madd,parmtr,3,<>> = <<org.sunflow.image.Color:madd,argmnt,3,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupGeometry,local1,13,<>> = <<org.sunflow.RenderObjectMap:lookupGeometry,local1,13,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:getRadiance,parmtr,2,<>> = <<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.DiffuseShader:getRadiance,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:initLightSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:diffuse,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:initCausticSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,103,<>> = <<org.sunflow.math.QMC:clinit,local1,103,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$4000,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$4000,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,341,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:setModifier,parmtr,1,<>> = <<org.sunflow.core.ShadingState:setModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:addIncludeSearchPath,local1,3,<>> = <<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:addIncludeSearchPath,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupCamera,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:lookupCamera,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:stopIteration,local1,49,<>> = <<org.dacapo.harness.Benchmark:stopIteration,local1,49,<null>>,E,E>;
<org.sunflow.util.FastHashMap:containsKey,parmtr,2,<>> = <<org.sunflow.util.FastHashMap:containsKey,argmnt,2,<null>>,D,D>;<<java.lang.Object:hashCode,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,904,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,904,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,771,<>> = <<org.sunflow.core.accel.KDTree:build,local1,771,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:flatten,local1,164,<>> = <<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;<<java.util.List:toArray,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:flatten,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,parmtr,4,<>> = <<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ParseException:init,argmnt,4,<null>>,D,D>;
<org.sunflow.image.Color:hasContrast,parmtr,2,<>> = <<org.sunflow.image.Color:hasContrast,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,424,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,424,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,85,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,85,<null>>,E,E>;
<org.dacapo.harness.Callback:start,local1,25,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,869,<>> = <<org.sunflow.core.shader.MirrorShader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getColor,local1,7,<>> = <<org.sunflow.core.ParameterList:getColor,local1,7,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,28,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloat,local1,4,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,6,<>> = <<java.io.BufferedReader:init,argmnt,1,<null>>,D,D>;<<java.io.BufferedReader:readLine,argmnt,1,<null>>,D,D>;<<java.io.BufferedReader:close,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,90,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,198,<>> = <<org.sunflow.core.LightServer:showStats,local1,198,<null>>,E,E>;
<org.sunflow.core.LightServer:calculatePhotons,local1,305,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,305,<null>>,E,E>;
<org.sunflow.image.Color:toNonLinear,local1,3,<>> = <<org.sunflow.image.Color:toNonLinear,local1,3,<null>>,E,E>;
<org.sunflow.util.FastHashMap$Entry:access$202,retrn,3,<>> = <<org.sunflow.util.FastHashMap$Entry:access$202,argmnt,3,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:access$202,argmnt,2,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:access$202,retrn,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,49,<>> = <<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,49,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getStringValue,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getStringValue,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,78,<>> = <<java.util.jar.Attributes$Name:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:init,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,parmtr,2,<>> = <<java.lang.String:charAt,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ParseException:add_escapes,argmnt,2,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,parmtr,4,<>> = <<org.sunflow.image.Color:blend,argmnt,4,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getTargetVar,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getTargetVar,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getModifier,retrn,29,<>> = <<org.sunflow.core.Instance:getModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getModifier,retrn,29,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileInScratch,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:fileInScratch,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValues,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,112,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,112,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,local1,11,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,197,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,86,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,86,<null>>,E,E>;
<org.apache.commons.cli.Parser:checkRequiredOptions,parmtr,1,<>> = <<org.apache.commons.cli.Parser:checkRequiredOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getRequiredOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:update,local1,10,<>> = <<org.sunflow.core.Geometry:update,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,19,<>> = <<org.sunflow.image.RGBSpace:toString,local1,19,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,68,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,537,<>> = <<org.sunflow.core.accel.KDTree:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:buildTree,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:dumpObj,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:UpdateLineColumn,local1,184,<>> = <<org.dacapo.parser.SimpleCharStream:UpdateLineColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.util.IntArray:add,parmtr,1,<>> = <<org.sunflow.util.IntArray:add,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:clinit,local1,21,<>> = <<org.sunflow.math.Vector3:clinit,local1,21,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,167,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getCallback,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,275,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:enable_tracing,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:enable_tracing,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:add,parmtr,3,<>> = <<org.sunflow.image.Color:add,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,235,<>> = <<org.sunflow.core.LightServer:showStats,local1,235,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflectionPhoton,local1,46,<>> = <<org.sunflow.core.LightServer:traceReflectionPhoton,local1,46,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,parmtr,2,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,369,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:init,local1,24,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,local1,24,<null>>,E,E>;
<org.sunflow.core.IntersectionState:getRobustStack,parmtr,1,<>> = <<org.sunflow.core.IntersectionState:getRobustStack,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,45,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,152,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,152,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:processed,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:processed,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,parmtr,3,<>> = <<org.dacapo.harness.Benchmark:run,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:add,parmtr,2,<>> = <<org.apache.commons.cli.Option:add,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:transformWorldToObject,parmtr,2,<>> = <<org.sunflow.core.Instance:transformWorldToObject,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:addOutputFile,local1,4,<>> = <<org.dacapo.parser.Config$Size:addOutputFile,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:init,parmtr,4,<>> = <<org.codehaus.janino.util.LocatedException:init,argmnt,4,<null>>,D,D>;
<org.sunflow.system.UI:printInfo,local1,13,<>> = <<org.sunflow.system.UI:printInfo,local1,13,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,158,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,158,<null>>,D,D>;
<org.sunflow.core.ParameterList:getColor,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getColor,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,39,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,local1,39,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,435,<>> = <<org.dacapo.parser.ParseException:initialise,local1,435,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,1015,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,1015,<null>>,D,D>;
<org.sunflow.image.Color:add,parmtr,2,<>> = <<org.sunflow.image.Color:add,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:update,parmtr,3,<>> = <<org.sunflow.core.Instance:update,argmnt,3,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupGeometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,216,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,216,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:access$200,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$Entry:access$200,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,362,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,362,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getBinary,retrn,71,<>> = <<org.dacapo.harness.FileDigest:getBinary,retrn,71,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,54,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,54,<null>>,E,E>;
<org.sunflow.core.ShadingState:faceforward,local1,38,<>> = <<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:flipW,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadLimit,local1,4,<>> = <<org.dacapo.parser.Config$Size:getThreadLimit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceTransparency,retrn,53,<>> = <<org.sunflow.core.ShadingState:traceTransparency,retrn,53,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:class$,parmtr,2,<>> = <<org.codehaus.janino.util.CausedException:class$,argmnt,2,<null>>,D,D>;
<org.sunflow.system.Timer:toString,retrn,134,<>> = <<org.sunflow.system.Timer:toString,retrn,134,<null>>,D,D>;
<org.apache.commons.cli.Option:getValueSeparator,parmtr,1,<>> = <<org.apache.commons.cli.Option:getValueSeparator,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,42,<>> = <<org.sunflow.RenderObjectMap:update,local1,42,<null>>,E,E>;
<org.sunflow.core.ParameterList:getTexCoordArray,local1,12,<>> = <<org.sunflow.core.ParameterList:getTexCoordArray,local1,12,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$000,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$000,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,25,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,145,<>> = <<org.sunflow.core.LightServer:showStats,local1,145,<null>>,E,E>;
<org.apache.commons.cli.Parser:processProperties,local1,57,<>> = <<org.apache.commons.cli.Parser:processProperties,local1,57,<null>>,D,D>;
<org.sunflow.core.InstanceList:getWorldBounds,parmtr,1,<>> = <<org.sunflow.core.InstanceList:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformTransposeV,parmtr,2,<>> = <<org.sunflow.math.Matrix4:transformTransposeV,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,219,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:getKey,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa7_0,local1,21,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa7_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_consume_token,local1,89,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,local1,89,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:createNode,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,231,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,231,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,94,<>> = <<java.util.ListIterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.ListIterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,123,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,local1,123,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,local1,12,<>> = <<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,106,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,106,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:libraries,local1,85,<>> = <<org.dacapo.parser.ConfigFile:libraries,local1,85,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:init,parmtr,2,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:getMessage,retrn,3,<>> = <<org.dacapo.parser.TokenMgrError:getMessage,retrn,3,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,parmtr,1,<>> = <<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:sub,retrn,4,<>> = <<org.sunflow.math.Point3:sub,argmnt,4,<null>>,D,D>;<<org.sunflow.math.Point3:sub,retrn,4,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,19,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,19,<null>>,E,E>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,103,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,103,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,495,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,local1,21,<>> = <<org.sunflow.SunflowAPI:options,local1,21,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,519,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,519,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPrimitiveBound,local1,8,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,14,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,14,<null>>,E,E>;
<org.dacapo.parser.Config:describeSizes,local1,10,<>> = <<org.dacapo.parser.Config:describeSizes,local1,10,<null>>,D,D>;
<org.sunflow.SunflowAPI:modifier,local1,74,<>> = <<org.sunflow.SunflowAPI:modifier,local1,74,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,local1,36,<>> = <<org.sunflow.core.Instance:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,116,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,143,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,143,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,7,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,7,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,800,<>> = <<org.sunflow.core.accel.KDTree:build,local1,800,<null>>,E,E>;
<org.codehaus.janino.CompileException:init,parmtr,2,<>> = <<org.codehaus.janino.CompileException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,243,<>> = <<org.sunflow.image.RGBSpace:toString,local1,243,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,166,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,166,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceShadow,local1,6,<>> = <<org.sunflow.core.Scene:traceShadow,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOptionGroup,local1,11,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:getUniqueName,local1,17,<>> = <<org.sunflow.SunflowAPI:getUniqueName,local1,17,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,526,<>> = <<org.dacapo.harness.TestHarness:main,local1,526,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$600,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$600,argmnt,3,<null>>,D,D>;
<org.sunflow.system.Timer:start,parmtr,1,<>> = <<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,127,<>> = <<org.sunflow.core.LightServer:addShadingCache,local1,127,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,3,<>> = <<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLight:init,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLight:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,26,<>> = <<org.sunflow.RenderObjectMap:updateScene,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:iterator,argmnt,1,<null>>,D,D>;
<Harness:main,local1,19,<>> = <<java.lang.Class:getDeclaredMethod,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,225,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:traceShadow,local1,10,<>> = <<org.sunflow.core.LightSample:traceShadow,local1,10,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,93,<>> = <<org.sunflow.image.RGBSpace:toString,local1,93,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,local1,106,<>> = <<org.sunflow.core.LightServer:getRadiance,local1,106,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,6,<>> = <<org.sunflow.math.BoundingBox:toString,local1,6,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:update,local1,10,<>> = <<org.sunflow.core.light.TriangleMeshLight:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getSize,retrn,10,<>> = <<org.dacapo.harness.CommandLineArgs:getSize,retrn,10,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,local1,83,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,83,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,500,<>> = <<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,69,<>> = <<org.sunflow.image.RGBSpace:toString,local1,69,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformVZ,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformVZ,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,local1,26,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:hasArgName,parmtr,1,<>> = <<org.apache.commons.cli.Option:hasArgName,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1173,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,80,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,80,<null>>,E,E>;
<org.sunflow.math.QMC:clinit,local1,63,<>> = <<org.sunflow.math.QMC:clinit,local1,63,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,565,<>> = <<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getBoolean,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getBoolean,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,221,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,parmtr,6,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,6,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,399,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,399,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,165,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,165,<null>>,E,E>;
<org.dacapo.parser.Config:getOutputs,local1,7,<>> = <<java.util.HashMap:keySet,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,155,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,155,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$2600,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2600,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,55,<>> = <<org.sunflow.Benchmark:main,local1,55,<null>>,D,D>;
<org.dacapo.harness.Callback:start,parmtr,2,<>> = <<org.dacapo.harness.Callback:start,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getGeoNormal,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getGeoNormal,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPointArray,local1,4,<>> = <<org.sunflow.core.ParameterList:getPointArray,local1,4,<null>>,E,E>;
<org.sunflow.core.ShadingState:specularPhong,local1,400,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,34,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,34,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,95,<>> = <<org.sunflow.core.ParameterList:addVectors,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:build,local1,46,<>> = <<org.sunflow.core.Geometry:build,local1,46,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:identifier,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:identifier,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformWorldToObject,retrn,25,<>> = <<org.sunflow.core.Instance:transformWorldToObject,retrn,25,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,83,<>> = <<org.sunflow.Benchmark:init,local1,83,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,57,<>> = <<org.sunflow.math.BoundingBox:toString,local1,57,<null>>,D,D>;
<org.sunflow.core.ShadingState:addSample,parmtr,2,<>> = <<org.sunflow.core.ShadingState:addSample,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:addSample,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloat,local1,16,<>> = <<org.sunflow.core.ParameterList:getFloat,local1,16,<null>>,E,E>;
<org.sunflow.math.Vector3:toString,parmtr,1,<>> = <<org.sunflow.math.Vector3:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceShadow,local1,3,<>> = <<org.sunflow.core.LightServer:getScene,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceShadow,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,183,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1600,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1600,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,1,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,1,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionObject,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:init,local1,3,<>> = <<org.dacapo.harness.TeeOutputStream:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,2,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,2,<null>>,E,E>;
<org.sunflow.image.Color:init,parmtr,1,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,197,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,197,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,152,<>> = <<org.sunflow.image.RGBSpace:toString,local1,152,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,225,<>> = <<org.sunflow.core.Instance:update,local1,225,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,189,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,157,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,local1,2,<>> = <<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;<<java.util.List:toArray,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceTransparency,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceTransparency,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceRefraction,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,7,<>> = <<java.util.HashMap:keySet,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describeSizes,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,88,<>> = <<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSource:getPower,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,11,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,62,<>> = <<org.sunflow.core.camera.PinholeLens:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setJars,local1,9,<>> = <<org.dacapo.parser.Config:setJars,local1,9,<null>>,E,E>;
<org.dacapo.parser.Config:filterScratch,parmtr,3,<>> = <<org.dacapo.parser.Config:filterScratch,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:setArgName,parmtr,1,<>> = <<org.apache.commons.cli.Option:setArgName,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:hasArgName,local1,3,<>> = <<org.apache.commons.cli.Option:hasArgName,argmnt,1,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_ntk,local1,7,<>> = <<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,116,<>> = <<org.dacapo.harness.DacapoClassLoader:create,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,135,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,135,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:benchmarks,retrn,3,<>> = <<org.dacapo.harness.CommandLineArgs:benchmarks,retrn,3,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:benchmarks,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,171,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,171,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,968,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:init,local1,16,<>> = <<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:hashCode,parmtr,1,<>> = <<org.apache.commons.cli.Option:hashCode,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hashCode,callback,1,<null>>,D,D>;
<org.codehaus.janino.Parser$ParseException:init,parmtr,1,<>> = <<org.codehaus.janino.Parser$ParseException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,3,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,623,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,623,<null>>,D,D>;
<org.sunflow.core.gi.GIEngineFactory:create,retrn,115,<>> = <<org.sunflow.core.gi.GIEngineFactory:create,retrn,115,<null>>,D,D>;<<org.sunflow.core.gi.PathTracingGIEngine:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,202,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,169,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,169,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:iterator,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,94,<>> = <<java.lang.Enum:name,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,parmtr,3,<>> = <<org.sunflow.image.Color:blend,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,140,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,140,<null>>,E,E>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,112,<>> = <<org.apache.commons.cli.OptionValidator:validateOption,local1,112,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,114,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,114,<null>>,E,E>;
<org.apache.commons.cli.Parser:processArgs,parmtr,1,<>> = <<org.apache.commons.cli.Parser:processArgs,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getOptions,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:init,parmtr,2,<>> = <<org.apache.commons.cli.MissingArgumentException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.IntersectionState$StackNode:init,parmtr,1,<>> = <<org.sunflow.core.IntersectionState$StackNode:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1136,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1136,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,236,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2200,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2200,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2200,retrn,3,<null>>,D,D>;
<org.sunflow.core.InstanceList:intersectPrimitive,local1,3,<>> = <<org.sunflow.core.InstanceList:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:valueOf,parmtr,2,<>> = <<org.dacapo.harness.Callback$Mode:valueOf,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getUV,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getUV,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,3,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,96,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,96,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,135,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,135,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,14,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,14,<null>>,E,E>;
<org.sunflow.math.BoundingBox:intersects,local1,25,<>> = <<org.sunflow.math.BoundingBox:intersects,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,retrn,2,<>> = <<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,retrn,2,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,342,<>> = <<org.sunflow.core.Scene:render,local1,342,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceRefraction,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:includeSpecular,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.GlassShader:getRadiance,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getCosND,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceReflection,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:isBehind,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,232,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,232,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,18,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,18,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,567,<>> = <<org.sunflow.core.accel.KDTree:build,local1,567,<null>>,E,E>;
<org.sunflow.SunflowAPI:geometry,parmtr,3,<>> = <<org.sunflow.SunflowAPI:geometry,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,1,<>> = <<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:pad,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,481,<>> = <<org.dacapo.harness.Benchmark:validate,local1,481,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,673,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,673,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,55,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,203,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,203,<null>>,D,D>;
<org.sunflow.Benchmark:taskUpdate,parmtr,1,<>> = <<org.sunflow.Benchmark:taskUpdate,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:init,local1,18,<>> = <<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,68,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:valueOf,retrn,5,<>> = <<org.dacapo.parser.Config$ThreadModel:valueOf,retrn,5,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflectionPhoton,local1,21,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceReflectionPhoton,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,192,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,192,<null>>,E,E>;
<org.sunflow.RenderObjectMap$1:clinit,local1,6,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,6,<null>>,E,E>;
<org.dacapo.parser.Token:newToken,retrn,4,<>> = <<org.dacapo.parser.Token:newToken,retrn,4,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getNumPrimitives,local1,3,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$OutputFile:hasDigest,local1,3,<>> = <<org.dacapo.parser.Config$OutputFile:hasDigest,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,local1,14,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:shade,local1,3,<>> = <<org.sunflow.core.ShadingState:shade,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadeHit,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,48,<>> = <<org.sunflow.RenderObjectMap:update,local1,48,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$1600,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$1600,retrn,3,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,105,<>> = <<org.dacapo.harness.Callback:start,local1,105,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,126,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,126,<null>>,E,E>;
<org.sunflow.image.Color:blend,parmtr,4,<>> = <<org.sunflow.image.Color:blend,argmnt,4,<null>>,D,D>;
<org.sunflow.math.Vector3:init,parmtr,1,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:access$400,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$Entry:remove,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:access$400,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:prepareShadingState,parmtr,1,<>> = <<org.sunflow.core.Instance:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,24,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,24,<null>>,D,D>;
<org.sunflow.core.ParameterList:addString,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,912,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,912,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:init,parmtr,2,<>> = <<org.codehaus.janino.util.LocatedException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,143,<>> = <<org.sunflow.image.RGBSpace:toString,local1,143,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,local1,72,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,66,<>> = <<org.dacapo.harness.TestHarness:rmdir,local1,66,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,retrn,5,<>> = <<org.sunflow.image.Color:add,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:madd,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:diffuse,retrn,5,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,parmtr,4,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:store,argmnt,4,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI$PointLight:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,368,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,76,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,76,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,110,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,63,<>> = <<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:getUniqueName,local1,24,<>> = <<org.sunflow.SunflowAPI:getUniqueName,local1,24,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,9,<>> = <<org.dacapo.parser.ParseException:initialise,local1,9,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,110,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,110,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,26,<>> = <<org.dacapo.harness.TestHarness:rmdir,local1,26,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,3,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,127,<>> = <<org.dacapo.harness.Callback:runAgain,local1,127,<null>>,E,E>;
<org.sunflow.core.bucket.BucketOrderFactory:create,local1,47,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createPhotonState,retrn,2,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createPhotonState,retrn,2,<null>>,D,D>;
<org.codehaus.janino.Parser$ParseException:init,parmtr,3,<>> = <<org.codehaus.janino.Parser$ParseException:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,30,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:init,parmtr,1,<>> = <<org.codehaus.janino.util.CausedException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,497,<>> = <<org.sunflow.core.accel.KDTree:build,local1,497,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:init,parmtr,1,<>> = <<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,353,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,353,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,876,<>> = <<org.dacapo.harness.Benchmark:validate,local1,876,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,607,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,607,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,470,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:init,local1,32,<>> = <<org.sunflow.core.renderer.BucketRenderer:init,local1,32,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,3,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,local1,44,<>> = <<org.sunflow.core.ShadingState:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:diffuse,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printError,parmtr,2,<>> = <<org.sunflow.system.UI:printError,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,local1,89,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,89,<null>>,E,E>;
<org.dacapo.parser.Config:print,local1,94,<>> = <<org.dacapo.parser.Config:print,local1,94,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,123,<>> = <<org.sunflow.core.LightServer:showStats,local1,123,<null>>,E,E>;
<org.apache.commons.cli.Parser:processOption,local1,148,<>> = <<org.apache.commons.cli.Parser:getRequiredOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:processOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:processArgs,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:addOption,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:setThreadCount,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:setThreadCount,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,644,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,644,<null>>,E,E>;
<org.sunflow.RenderObjectMap:lookupModifier,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:lookupModifier,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,169,<>> = <<java.io.File:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:valueOf,retrn,5,<>> = <<org.sunflow.system.UI$PrintLevel:valueOf,retrn,5,<null>>,D,D>;
<org.apache.commons.cli.Parser:processArgs,local1,1,<>> = <<org.apache.commons.cli.Parser:processArgs,local1,1,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,105,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,105,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,20,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,20,<null>>,E,E>;
<org.sunflow.core.InstanceList:init,parmtr,1,<>> = <<org.sunflow.core.InstanceList:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,local1,19,<>> = <<org.apache.commons.cli.Options:addOption,local1,19,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,196,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,196,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,165,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,169,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:setArgName,parmtr,2,<>> = <<org.apache.commons.cli.Option:setArgName,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:setArgName,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:setSizeDescription,parmtr,3,<>> = <<org.dacapo.parser.Config:setSizeDescription,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getIntValue,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getIntValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,191,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,191,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,82,<>> = <<org.dacapo.harness.Sunflow:init,local1,82,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,322,<>> = <<java.io.File:getAbsolutePath,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,39,<>> = <<org.dacapo.harness.TestHarness:main,local1,39,<null>>,E,E>;
<org.dacapo.harness.Callback:complete,local1,165,<>> = <<org.dacapo.harness.Callback:complete,local1,165,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,185,<>> = <<org.dacapo.harness.Benchmark:validate,local1,185,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,295,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:addTextureSearchPath,local1,3,<>> = <<org.sunflow.SunflowAPI:addTextureSearchPath,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,272,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,272,<null>>,D,D>;
<org.sunflow.image.Color:add,retrn,11,<>> = <<org.sunflow.image.Color:add,retrn,11,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$4300,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$4300,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$4300,retrn,3,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,130,<>> = <<org.sunflow.image.RGBSpace:toString,local1,130,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,174,<>> = <<org.dacapo.parser.ParseException:initialise,local1,174,<null>>,D,D>;
<org.dacapo.parser.Config:setBytes,local1,8,<>> = <<org.dacapo.parser.Config:setBytes,local1,8,<null>>,D,D>;
<org.sunflow.core.ParameterList:addMatrices,local1,37,<>> = <<org.sunflow.core.ParameterList:addMatrices,local1,37,<null>>,E,E>;
<org.sunflow.math.QMC:clinit,local1,346,<>> = <<org.sunflow.math.QMC:clinit,local1,346,<null>>,E,E>;
<org.sunflow.core.ParameterList$FloatParameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,64,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setDigest,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:config,local1,86,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:config,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,29,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,29,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetImage,retrn,95,<>> = <<org.dacapo.parser.SimpleCharStream:GetImage,retrn,95,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:update,parmtr,2,<>> = <<org.sunflow.core.primitive.Sphere:update,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,local1,26,<>> = <<org.dacapo.harness.Benchmark:startIteration,argmnt,1,<null>>,D,D>;<<java.util.Properties:clone,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:removeShader,local1,3,<>> = <<org.sunflow.core.Instance:removeShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,parmtr,1,<>> = <<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.GIEngineFactory:create,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.GIEngineFactory:create,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getColor,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getColor,retrn,3,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getColor,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2300,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2300,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2300,retrn,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,603,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,603,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,609,<>> = <<org.sunflow.core.Scene:render,local1,609,<null>>,E,E>;
<org.dacapo.parser.Config$Size:getThreadCount,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:getThreadCount,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:getBuildVersion,local1,2,<>> = <<org.dacapo.harness.TestHarness:getBuildVersion,local1,2,<null>>,E,E>;
<org.sunflow.Benchmark:access$000,parmtr,2,<>> = <<org.sunflow.Benchmark:access$000,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,retrn,16,<>> = <<org.dacapo.harness.FileDigest:get,retrn,16,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,261,<>> = <<org.sunflow.math.QMC:clinit,local1,261,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:close,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:close,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:close,callback,1,<null>>,D,D>;<<java.io.FilterOutputStream:close,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,604,<>> = <<org.sunflow.core.Scene:render,local1,604,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:getToken,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:getToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createReflectionBounceState,local1,8,<>> = <<org.sunflow.core.ShadingState:createReflectionBounceState,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getTexCoord,retrn,13,<>> = <<org.sunflow.math.Point2:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getTexCoord,retrn,13,<null>>,D,D>;
<org.dacapo.harness.FileDigest:replaceAllFixed,local1,17,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:init,parmtr,1,<>> = <<org.dacapo.harness.FileDigest:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,67,<>> = <<org.sunflow.math.QMC:clinit,local1,67,<null>>,E,E>;
<org.sunflow.core.Scene:setCamera,parmtr,1,<>> = <<org.sunflow.core.Scene:setCamera,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,2,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:configFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:update,parmtr,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:update,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflectionPhoton,local1,31,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,41,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,parmtr,3,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,3,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,53,<>> = <<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,53,<null>>,E,E>;
<Harness:main,retrn,5,<>> = <<java.lang.ClassLoader:loadClass,argmnt,1,<null>>,D,D>;<<Harness:main,retrn,5,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1507,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1507,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:init,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeHit,parmtr,2,<>> = <<org.sunflow.core.LightServer:shadeHit,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,334,<>> = <<org.sunflow.math.QMC:clinit,local1,334,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:integer,local1,10,<>> = <<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:encode,parmtr,1,<>> = <<org.sunflow.math.Vector3:encode,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:isWarmup,local1,3,<>> = <<org.dacapo.harness.Callback:isWarmup,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,retrn,92,<>> = <<org.sunflow.util.FastHashMap:put,retrn,92,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskStart,parmtr,2,<>> = <<org.sunflow.system.ui.ConsoleInterface:taskStart,argmnt,1,<null>>,D,D>;<<org.sunflow.system.ui.ConsoleInterface:taskStart,argmnt,2,<null>>,D,D>;
<org.sunflow.image.Color:getMin,parmtr,1,<>> = <<org.sunflow.image.Color:getMin,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$OutputFile:hasDigest,parmtr,1,<>> = <<org.dacapo.parser.Config$OutputFile:hasDigest,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:imageUpdate,local1,51,<>> = <<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;<<org.sunflow.Benchmark:imageUpdate,argmnt,6,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,278,<>> = <<org.dacapo.parser.Config:getThreadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadLimit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getThreadCount,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setThreadFactor,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:closeLog,local1,3,<>> = <<org.dacapo.harness.TeeOutputStream:closeLog,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeePrintStream:closeLog,argmnt,1,<null>>,D,D>;
<org.sunflow.util.IntArray:set,parmtr,1,<>> = <<org.sunflow.util.IntArray:set,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,151,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,151,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,local1,21,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,local1,21,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,914,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,914,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,1,<>> = <<org.sunflow.SunflowAPI:create,local1,1,<null>>,E,E>;
<org.sunflow.RenderObjectMap:updateScene,local1,216,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,216,<null>>,E,E>;
<org.dacapo.harness.Benchmark:postIterationCleanup,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:postIterationCleanup,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,local1,58,<>> = <<org.sunflow.core.ParameterList:clear,local1,58,<null>>,D,D>;
<org.dacapo.parser.Config:getLines,parmtr,3,<>> = <<org.dacapo.parser.Config:getLines,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Parser:processArgs,local1,78,<>> = <<org.apache.commons.cli.Parser:processArgs,local1,78,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,3,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,argmnt,4,<null>>,D,D>;<<org.dacapo.parser.Config:printThreadModel,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasDigest,parmtr,2,<>> = <<org.dacapo.parser.Config:hasDigest,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,240,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,240,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,50,<>> = <<org.apache.commons.cli.Option:getValues,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArg,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:addValueForProcessing,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,local1,52,<>> = <<org.dacapo.harness.DacapoClassLoader:getJars,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,144,<>> = <<org.dacapo.harness.TestHarness:main,local1,144,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,498,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,148,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,309,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,309,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:flipV,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:flipV,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addTexCoords,parmtr,4,<>> = <<org.sunflow.core.ParameterList:addTexCoords,argmnt,4,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,165,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,165,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,105,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,105,<null>>,D,D>;<<java.lang.Thread:start,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildTask:init,local1,28,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,139,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,139,<null>>,E,E>;
<org.dacapo.harness.Callback$1:clinit,local1,2,<>> = <<org.dacapo.harness.Callback$1:clinit,local1,2,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,263,<>> = <<org.dacapo.harness.Callback:runAgain,local1,263,<null>>,D,D>;
<org.sunflow.core.Scene:setLightList,parmtr,1,<>> = <<org.sunflow.core.Scene:setLightList,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,73,<>> = <<org.apache.commons.cli.Parser:processOption,local1,73,<null>>,D,D>;
<org.sunflow.Benchmark:execute,local1,2,<>> = <<org.sunflow.system.BenchmarkFramework:execute,argmnt,1,<null>>,D,D>;<<org.sunflow.system.BenchmarkFramework:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,parmtr,2,<>> = <<org.dacapo.harness.Sunflow:init,argmnt,2,<null>>,D,D>;
<org.sunflow.image.Color:init,parmtr,1,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOption,local1,6,<>> = <<org.apache.commons.cli.Options:getOption,local1,6,<null>>,D,D>;
<org.sunflow.core.Geometry:intersect,parmtr,2,<>> = <<org.sunflow.core.Geometry:intersect,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap:alloc,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:parse,local1,1,<>> = <<org.dacapo.parser.Config:parse,local1,1,<null>>,E,E>;
<org.sunflow.core.ParameterList:getFloat,local1,19,<>> = <<org.sunflow.core.ParameterList:getFloat,local1,19,<null>>,E,E>;
<org.sunflow.util.FastHashMap:access$500,retrn,3,<>> = <<org.sunflow.util.FastHashMap:access$500,argmnt,2,<null>>,D,D>;<<org.sunflow.util.FastHashMap:access$500,retrn,3,<null>>,D,D>;<<org.sunflow.util.FastHashMap:access$500,callback,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:insideGamut,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:insideGamut,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:remove,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:remove,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:remove,callback,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getReflectionDepth,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getReflectionDepth,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getMatrix,retrn,13,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getMatrix,retrn,13,<null>>,D,D>;
<org.sunflow.math.BoundingBox:contains,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:contains,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,209,<>> = <<org.dacapo.harness.Benchmark:validate,local1,209,<null>>,E,E>;
<org.sunflow.core.Camera:init,local1,14,<>> = <<org.sunflow.core.Camera:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,local1,71,<>> = <<org.apache.commons.cli.PosixParser:burstToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:getWorldBounds,retrn,2,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.Sphere:getWorldBounds,retrn,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,131,<>> = <<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,75,<>> = <<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getCorner,retrn,75,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getCorner,retrn,75,<null>>,D,D>;
<org.sunflow.core.Camera:getWorldToCamera,local1,3,<>> = <<org.sunflow.core.Camera:getWorldToCamera,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Ray:getDirection,retrn,2,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:getDirection,retrn,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,829,<>> = <<org.sunflow.core.accel.KDTree:build,local1,829,<null>>,E,E>;
<org.dacapo.parser.Config:print,local1,272,<>> = <<org.dacapo.parser.Config:print,local1,272,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,306,<>> = <<org.dacapo.harness.Callback:runAgain,local1,306,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,14,<>> = <<org.dacapo.harness.Benchmark:preIteration,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,253,<>> = <<org.sunflow.system.UI$Module:clinit,local1,253,<null>>,E,E>;
<org.sunflow.SunflowAPI:modifier,local1,34,<>> = <<org.sunflow.SunflowAPI:modifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,398,<>> = <<org.dacapo.parser.ParseException:initialise,local1,398,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,1,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:processOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:checkRequiredOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:processProperties,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:flatten,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:setOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:correctShadingNormal,parmtr,1,<>> = <<org.sunflow.core.ShadingState:correctShadingNormal,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:printStackTrace,parmtr,1,<>> = <<org.codehaus.janino.util.CausedException:printStackTrace,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:printStackTrace,callback,1,<null>>,D,D>;<<java.lang.Throwable:printStackTrace,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:configFile,retrn,6,<>> = <<org.dacapo.parser.ConfigFile:configFile,retrn,6,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,643,<>> = <<org.dacapo.harness.TestHarness:main,local1,643,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,retrn,289,<>> = <<org.dacapo.parser.ParseException:add_escapes,retrn,289,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,local1,17,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,454,<>> = <<org.sunflow.core.LightServer:build,local1,454,<null>>,E,E>;
<org.apache.commons.cli.Options:addOption,local1,37,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;<<java.util.List:remove,argmnt,1,<null>>,D,D>;<<java.util.List:contains,argmnt,1,<null>>,D,D>;<<java.util.List:indexOf,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,189,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,189,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,247,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,247,<null>>,D,D>;
<org.apache.commons.cli.Option:addValueForProcessing,parmtr,2,<>> = <<org.apache.commons.cli.Option:addValueForProcessing,argmnt,2,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,local1,3,<>> = <<org.codehaus.janino.util.LocatedException:getMessage,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.Location:toString,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:getMessage,callback,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,71,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,71,<null>>,E,E>;
<org.sunflow.math.Vector3:normalize,parmtr,1,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:createMessage,local1,28,<>> = <<org.apache.commons.cli.MissingOptionException:createMessage,local1,28,<null>>,E,E>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,2,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:createFinalGatherState,local1,8,<>> = <<org.sunflow.core.ShadingState:createFinalGatherState,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addIntegerArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addIntegerArray,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,496,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,496,<null>>,D,D>;
<org.sunflow.core.LightServer:traceGlossy,parmtr,2,<>> = <<org.sunflow.core.LightServer:traceGlossy,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getReflectionDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,parmtr,1,<>> = <<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Options:update,local1,31,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Options:update,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,228,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,228,<null>>,E,E>;
<org.dacapo.harness.TestHarness:runBenchmark,parmtr,3,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:hasOptionalArg,parmtr,1,<>> = <<org.apache.commons.cli.Option:hasOptionalArg,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadFactor,local1,4,<>> = <<org.dacapo.parser.Config$Size:getThreadCount,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,52,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:div,parmtr,2,<>> = <<org.sunflow.image.Color:div,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:getValue,retrn,3,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,retrn,3,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,483,<>> = <<org.sunflow.core.LightServer:build,local1,483,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,8,<>> = <<org.sunflow.core.ShadingState:occlusion,local1,8,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa2_0,local1,21,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa2_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setTextFile,parmtr,2,<>> = <<org.dacapo.parser.Config:setTextFile,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,local1,135,<>> = <<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:burstToken,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,93,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:cross,parmtr,2,<>> = <<org.sunflow.math.Vector3:cross,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,67,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,67,<null>>,E,E>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,196,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,local1,196,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getBinary,local1,5,<>> = <<java.security.MessageDigest:update,argmnt,1,<null>>,D,D>;<<java.security.MessageDigest:digest,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,72,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,72,<null>>,E,E>;
<org.sunflow.core.InstanceList:getPrimitiveBound,local1,8,<>> = <<org.sunflow.math.BoundingBox:getBound,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,local1,11,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasLines,parmtr,1,<>> = <<org.dacapo.parser.Config:hasLines,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getPoint,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getThreadFactor,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getThreadFactor,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,492,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,492,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,35,<>> = <<org.sunflow.math.QMC:clinit,local1,35,<null>>,E,E>;
<org.dacapo.parser.Config:checkExists,local1,7,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,49,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjCanMove_0,local1,22,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCanMove_0,local1,22,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1027,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1027,<null>>,D,D>;
<org.apache.commons.cli.Option:init,parmtr,2,<>> = <<org.apache.commons.cli.Option:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descId,local1,269,<>> = <<org.dacapo.parser.ConfigFile:descId,local1,269,<null>>,E,E>;
<org.dacapo.parser.Config:setThreadLimit,local1,48,<>> = <<org.dacapo.parser.Config$Size:setThreadLimit,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,15,<>> = <<org.sunflow.Benchmark:main,local1,15,<null>>,E,E>;
<org.sunflow.core.LightServer:init,local1,13,<>> = <<org.sunflow.core.LightServer:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformP,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformP,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getShader,parmtr,2,<>> = <<org.sunflow.core.LightServer:getShader,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,27,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapVW,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:swapVW,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,449,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,36,<>> = <<org.dacapo.parser.TokenMgrError:LexicalError,local1,36,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:iterator,local1,3,<>> = <<org.apache.commons.cli.CommandLine:iterator,argmnt,1,<null>>,D,D>;<<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,74,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,115,<>> = <<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:values,local1,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:values,local1,2,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,191,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,191,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:hex,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:hex,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,46,<>> = <<org.dacapo.parser.Config:describe,local1,46,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,11,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:init,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,1,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:parse,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,275,<>> = <<org.sunflow.RenderObjectMap:updateScene,local1,275,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloats,local1,25,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,103,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,103,<null>>,E,E>;
<org.sunflow.core.ParameterList$1:clinit,local1,86,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,86,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:getLine,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:getLine,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,56,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,56,<null>>,E,E>;
<org.dacapo.parser.Config:setKeep,local1,8,<>> = <<org.dacapo.parser.Config:setKeep,local1,8,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,local1,51,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,51,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,348,<>> = <<org.sunflow.SunflowAPI:create,local1,348,<null>>,E,E>;
<org.dacapo.harness.FileDigest:replaceAllFixed,local1,31,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:reset,local1,25,<>> = <<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.ProgressiveRenderer:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,9,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,9,<null>>,E,E>;
<org.sunflow.math.Vector3:decode,local1,17,<>> = <<org.sunflow.math.Vector3:decode,local1,17,<null>>,E,E>;
<org.dacapo.parser.Config:getLines,parmtr,1,<>> = <<org.dacapo.parser.Config:getLines,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,435,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,435,<null>>,E,E>;
<org.sunflow.core.ShadingState:occlusion,local1,33,<>> = <<org.sunflow.image.Color:add,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,324,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,324,<null>>,E,E>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,94,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,94,<null>>,E,E>;
<org.sunflow.system.SearchPath:resolvePath,local1,23,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,23,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,36,<>> = <<java.net.JarURLConnection:getJarFile,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,18,<>> = <<org.sunflow.math.BoundingBox:toString,local1,18,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,1146,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,1146,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:init,parmtr,3,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,567,<>> = <<org.sunflow.core.Scene:render,local1,567,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,356,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,101,<>> = <<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,43,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,local1,43,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,567,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:imageFill,parmtr,1,<>> = <<org.sunflow.Benchmark:imageFill,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,448,<>> = <<org.sunflow.core.Scene:render,local1,448,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,148,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,254,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,254,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,parmtr,5,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,5,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,99,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,99,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,75,<>> = <<org.sunflow.core.Scene:render,local1,75,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1096,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1096,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,local1,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getShader,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:hasLongOpt,local1,3,<>> = <<org.apache.commons.cli.Option:hasLongOpt,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getColor,retrn,3,<>> = <<org.sunflow.core.ParameterList:getColor,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList:getColor,retrn,3,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:processOptionToken,parmtr,2,<>> = <<org.apache.commons.cli.PosixParser:processOptionToken,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:newLog,local1,3,<>> = <<org.dacapo.harness.TeeOutputStream:newLog,argmnt,1,<null>>,D,D>;<<java.io.FileOutputStream:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$Size:getDesc,retrn,3,<>> = <<org.dacapo.parser.Config$Size:getDesc,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config$Size:getDesc,retrn,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,443,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree$BuildStats:printStats,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:next,local1,3,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:next,callback,1,<null>>,D,D>;
<org.sunflow.core.filter.TriangleFilter:getSize,parmtr,1,<>> = <<org.sunflow.core.filter.TriangleFilter:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupInstance,local1,9,<>> = <<org.sunflow.RenderObjectMap:lookupInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,retrn,50,<>> = <<org.sunflow.core.Scene:getRadiance,retrn,50,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,133,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,133,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,454,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,351,<>> = <<org.sunflow.math.Vector3:div,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:length,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,71,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,20,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,20,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,554,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,554,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,388,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,388,<null>>,E,E>;
<org.sunflow.SunflowAPI:reset,local1,73,<>> = <<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:set,retrn,1,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:set,retrn,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,7,<>> = <<org.sunflow.SunflowAPI:parameter,local1,7,<null>>,E,E>;
<org.sunflow.core.primitive.Sphere:getWorldBounds,parmtr,1,<>> = <<org.sunflow.core.primitive.Sphere:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,local1,85,<>> = <<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:light,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupLight,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,597,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,597,<null>>,D,D>;
<org.dacapo.parser.Config$1:clinit,local1,6,<>> = <<org.dacapo.parser.Config$1:clinit,local1,6,<null>>,E,E>;
<org.sunflow.math.BoundingBox:include,local1,39,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:setShaderOverride,parmtr,1,<>> = <<org.sunflow.core.Scene:setShaderOverride,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,6,<>> = <<java.lang.Runtime:maxMemory,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,18,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:negate,retrn,1,<>> = <<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:negate,retrn,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:remove,parmtr,2,<>> = <<org.sunflow.util.FastHashMap:remove,argmnt,2,<null>>,D,D>;<<java.lang.Object:hashCode,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,69,<>> = <<org.apache.commons.cli.Parser:processProperties,local1,69,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,137,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Options:helpOptions,retrn,2,<>> = <<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:helpOptions,retrn,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap:containsKey,local1,24,<>> = <<org.sunflow.util.FastHashMap:containsKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,245,<>> = <<org.sunflow.core.LightServer$1:run,local1,245,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,retrn,84,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.DacapoClassLoader:create,retrn,84,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,238,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,238,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,local1,76,<>> = <<org.apache.commons.cli.Option:equals,callback,2,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,argmnt,2,<null>>,D,D>;<<java.lang.Object:getClass,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorWorldToObject,parmtr,2,<>> = <<org.sunflow.core.Instance:transformVectorWorldToObject,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:resolveOption,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:resolveOption,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,94,<>> = <<org.sunflow.system.UI$Module:clinit,local1,94,<null>>,E,E>;
<org.dacapo.harness.DacapoException:init,parmtr,2,<>> = <<org.dacapo.harness.DacapoException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getMaximum,retrn,3,<>> = <<org.sunflow.math.BoundingBox:getMaximum,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMaximum,retrn,3,<null>>,D,D>;
<org.sunflow.core.Scene:traceBake,local1,4,<>> = <<org.sunflow.core.Scene:traceBake,argmnt,3,<null>>,D,D>;<<org.sunflow.core.Scene:traceBake,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,166,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,85,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,85,<null>>,D,D>;
<org.apache.commons.cli.Options:helpOptions,parmtr,1,<>> = <<org.apache.commons.cli.Options:helpOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,222,<>> = <<org.sunflow.SunflowAPI:create,local1,222,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,191,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,48,<>> = <<org.dacapo.harness.Sunflow:init,argmnt,3,<null>>,D,D>;<<org.dacapo.harness.Sunflow:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,42,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,42,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,125,<>> = <<org.sunflow.SunflowAPI:compile,local1,125,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:processOptionToken,local1,46,<>> = <<org.apache.commons.cli.PosixParser:processOptionToken,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,54,<>> = <<org.sunflow.image.Color:clinit,local1,54,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,194,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:init,parmtr,1,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,424,<>> = <<org.sunflow.image.RGBSpace:toString,local1,424,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,148,<>> = <<org.sunflow.Benchmark:main,argmnt,2,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,45,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,45,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,retrn,13,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,retrn,13,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:getDiffuse,retrn,3,<>> = <<org.sunflow.core.shader.DiffuseShader:getDiffuse,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.DiffuseShader:getDiffuse,retrn,3,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,1,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,1,<null>>,E,E>;
<org.sunflow.core.ShadingState:getRefractionDepth,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getRefractionDepth,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,retrn,12,<>> = <<org.sunflow.image.Color:blend,retrn,12,<null>>,D,D>;
<org.sunflow.core.ShadingState:getGlobalRadiance,local1,3,<>> = <<org.sunflow.core.ShadingState:getGlobalRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,561,<>> = <<org.sunflow.math.Vector3:length,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:sub,parmtr,2,<>> = <<org.sunflow.image.Color:sub,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteFile,local1,27,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:init,parmtr,1,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,108,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,108,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,1,<>> = <<org.dacapo.harness.FileDigest:main,local1,1,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,32,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,595,<>> = <<org.sunflow.core.accel.KDTree:build,local1,595,<null>>,D,D>;
<org.sunflow.core.Ray:init,parmtr,3,<>> = <<org.sunflow.core.Ray:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:traceFinalGather,parmtr,2,<>> = <<org.sunflow.core.LightServer:traceFinalGather,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,128,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,32,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,32,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:access$1400,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:getFloatValue,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:access$1400,argmnt,2,<null>>,D,D>;
<org.sunflow.core.InstanceList:getBakingPrimitives,parmtr,1,<>> = <<org.sunflow.core.InstanceList:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOptionGroup,local1,3,<>> = <<java.util.Collection:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getVector,local1,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getVector,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,11,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,11,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:flipU,local1,3,<>> = <<org.sunflow.math.OrthoNormalBasis:flipU,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,553,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,97,<>> = <<org.sunflow.SunflowAPI:compile,local1,97,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,94,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,54,<>> = <<org.sunflow.core.Scene:getThreadPriority,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getThreads,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addMatrices,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getResult,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getArgs,local1,3,<>> = <<java.util.List:toArray,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getArgs,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,local1,18,<>> = <<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,75,<>> = <<org.dacapo.harness.Sunflow:preIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,369,<>> = <<org.sunflow.core.LightServer:build,local1,369,<null>>,D,D>;
<org.dacapo.harness.Callback:stop,local1,8,<>> = <<org.dacapo.harness.Callback:stop,local1,8,<null>>,E,E>;
<org.sunflow.system.UI:printDetailed,local1,9,<>> = <<org.sunflow.system.UI:printDetailed,local1,9,<null>>,E,E>;
<org.sunflow.core.Camera:update,local1,128,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:update,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:inverse,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,137,<>> = <<org.sunflow.Benchmark:init,local1,137,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeBakeResult,parmtr,1,<>> = <<org.sunflow.core.LightServer:shadeBakeResult,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,1681,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,1681,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,898,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createReflectionBounceState,parmtr,3,<>> = <<org.sunflow.core.ShadingState:createReflectionBounceState,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.Config:addDesc,parmtr,2,<>> = <<org.dacapo.parser.Config:addDesc,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,7,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,7,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,71,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,71,<null>>,D,D>;
<org.sunflow.core.ParameterList:addMatrices,local1,33,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Ray:getPoint,retrn,2,<>> = <<org.sunflow.core.Ray:getPoint,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:getPoint,retrn,2,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,159,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,331,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,331,<null>>,D,D>;
<org.sunflow.core.LightServer:init,parmtr,2,<>> = <<org.sunflow.core.LightServer:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,276,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,276,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,58,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,92,<>> = <<java.lang.Object:hashCode,argmnt,1,<null>>,D,D>;
<org.sunflow.core.IntersectionState:getStack,retrn,3,<>> = <<org.sunflow.core.IntersectionState:getStack,retrn,3,<null>>,D,D>;<<org.sunflow.core.IntersectionState:getStack,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,505,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,505,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAddStates,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjAddStates,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,retrn,31,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,retrn,31,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,198,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,198,<null>>,E,E>;
<org.sunflow.system.SearchPath:addSearchPath,local1,83,<>> = <<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,101,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructure:build,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,88,<>> = <<org.sunflow.core.Scene:render,local1,88,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPointArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getPointArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloatParameter,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:checkRequiredOptions,local1,14,<>> = <<org.apache.commons.cli.Parser:checkRequiredOptions,local1,14,<null>>,E,E>;
<org.sunflow.core.Scene:setBakingInstance,parmtr,2,<>> = <<org.sunflow.core.Scene:setBakingInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:setBakingInstance,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,232,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,648,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,648,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupLight,retrn,29,<>> = <<org.sunflow.RenderObjectMap:lookupLight,retrn,29,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,489,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,489,<null>>,D,D>;
<org.sunflow.math.Vector3:add,retrn,4,<>> = <<org.sunflow.math.Vector3:add,argmnt,4,<null>>,D,D>;<<org.sunflow.math.Vector3:add,retrn,4,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,34,<>> = <<org.dacapo.harness.Benchmark:validate,local1,34,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,244,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,244,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,832,<>> = <<org.sunflow.core.accel.KDTree:build,local1,832,<null>>,E,E>;
<org.sunflow.core.Ray:normalize,parmtr,1,<>> = <<org.sunflow.core.Ray:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupInstance,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:lookupInstance,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,546,<>> = <<org.sunflow.core.Scene:render,local1,546,<null>>,E,E>;
<org.apache.commons.cli.Options:addOption,parmtr,3,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,1,<>> = <<org.apache.commons.cli.Option:clone,local1,1,<null>>,E,E>;
<org.apache.commons.cli.Option:processValue,local1,26,<>> = <<org.apache.commons.cli.Option:hasValueSeparator,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValueSeparator,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:processValue,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:postIteration,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:postIteration,argmnt,2,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:init,parmtr,2,<>> = <<org.codehaus.janino.util.CausedException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,196,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$2100,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$2100,retrn,3,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:access$2100,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,224,<>> = <<org.sunflow.image.RGBSpace:toString,local1,224,<null>>,D,D>;
<org.codehaus.janino.Scanner$ScanException:init,local1,9,<>> = <<org.codehaus.janino.Scanner$ScanException:init,local1,9,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:init,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$Entry:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa9_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa9_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa10_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,17,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,367,<>> = <<org.sunflow.core.Scene:render,local1,367,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,144,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,144,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,150,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,150,<null>>,E,E>;
<org.dacapo.harness.Sunflow:preIteration,parmtr,1,<>> = <<org.dacapo.harness.Sunflow:preIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:revertClassLoader,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:configOption,local1,110,<>> = <<org.dacapo.parser.ConfigFile:identifier,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:libraries,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:threadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:configOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:update,parmtr,1,<>> = <<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,86,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,86,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,782,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,782,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,508,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,229,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,229,<null>>,D,D>;
<org.dacapo.parser.Config:filterScratch,parmtr,2,<>> = <<org.dacapo.parser.Config:filterScratch,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:resolveOption,local1,16,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,314,<>> = <<org.sunflow.image.RGBSpace:toString,local1,314,<null>>,D,D>;
<org.sunflow.image.Color:div,local1,4,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,979,<>> = <<org.sunflow.core.accel.KDTree:build,local1,979,<null>>,E,E>;
<org.apache.commons.cli.Parser:processProperties,local1,11,<>> = <<java.util.Enumeration:nextElement,argmnt,1,<null>>,D,D>;<<java.util.Enumeration:hasMoreElements,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getInformation,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getInformation,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$1:clinit,local1,11,<>> = <<org.dacapo.harness.Callback$1:clinit,local1,11,<null>>,E,E>;
<org.sunflow.image.RGBSpace:main,local1,8,<>> = <<org.sunflow.image.RGBSpace:main,local1,8,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,parmtr,8,<>> = <<org.sunflow.core.accel.KDTree:buildTree,argmnt,8,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,184,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$CacheEntry:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$Sample:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Timer:seconds,parmtr,1,<>> = <<org.sunflow.system.Timer:seconds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,202,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,202,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,parmtr,2,<>> = <<org.sunflow.core.gi.InstantGI:init,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Scene:calculatePhotons,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,158,<>> = <<org.dacapo.parser.Config:printThreadModel,local1,158,<null>>,E,E>;
<org.sunflow.RenderObjectMap:lookupOptions,retrn,29,<>> = <<org.sunflow.RenderObjectMap:lookupOptions,retrn,29,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,84,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,84,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,311,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:getAbsoluteFile,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,local1,2,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,local1,2,<null>>,E,E>;
<org.sunflow.SunflowAPI:parameter,parmtr,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,parmtr,3,<>> = <<org.dacapo.parser.Config:preprocessArgs,argmnt,3,<null>>,D,D>;<<java.io.File:getAbsolutePath,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupModifier,parmtr,2,<>> = <<org.sunflow.SunflowAPI:lookupModifier,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark:kernelBegin,parmtr,1,<>> = <<org.sunflow.Benchmark:kernelBegin,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,381,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,381,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,local1,14,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getThreadCount,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getThreadCount,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,6,<>> = <<org.dacapo.harness.Callback:complete,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,local1,16,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,93,<>> = <<org.sunflow.SunflowAPI:create,local1,93,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,90,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,90,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,108,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,108,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,retrn,10,<>> = <<org.dacapo.parser.Config:preprocessArgs,retrn,10,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,58,<>> = <<org.dacapo.harness.Benchmark:preIteration,local1,58,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,22,<>> = <<org.dacapo.harness.TestHarness:dump,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,40,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,local1,40,<null>>,D,D>;
<org.sunflow.image.Color:blend,parmtr,3,<>> = <<org.sunflow.image.Color:blend,argmnt,3,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:access$302,parmtr,2,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:access$302,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,72,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,72,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,31,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,31,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,231,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,231,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$500,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$500,argmnt,2,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:typeName,argmnt,1,<null>>,D,D>;
<Harness:init,parmtr,1,<>> = <<Harness:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,101,<>> = <<org.sunflow.core.accel.KDTree:build,local1,101,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,parmtr,6,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,argmnt,6,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,13,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,2,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Options:helpOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:stopIteration,local1,12,<>> = <<org.dacapo.harness.Benchmark:stopIteration,local1,12,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,351,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,351,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,local1,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteTree,local1,20,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,753,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,753,<null>>,E,E>;
<org.codehaus.janino.util.CausedException:clinit,local1,26,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,26,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,160,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,160,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:getPoint,local1,11,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,627,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,627,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,358,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:isWarmup,parmtr,1,<>> = <<org.dacapo.harness.Callback:isWarmup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,269,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,269,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,60,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,60,<null>>,E,E>;
<org.codehaus.janino.util.CausedException:init,parmtr,1,<>> = <<org.codehaus.janino.util.CausedException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,local1,89,<>> = <<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:outputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,11,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,11,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,43,<>> = <<org.dacapo.harness.Callback:start,local1,43,<null>>,E,E>;
<org.sunflow.SunflowAPI:parameter,parmtr,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:traceGlossy,local1,20,<>> = <<org.sunflow.core.LightServer:traceGlossy,local1,20,<null>>,E,E>;
<org.sunflow.SunflowAPI:render,local1,23,<>> = <<org.sunflow.core.Options:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,138,<>> = <<org.sunflow.core.LightServer:showStats,local1,138,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$300,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$300,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,19,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,186,<>> = <<org.sunflow.math.QMC:clinit,local1,186,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:clinit,local1,17,<>> = <<org.dacapo.parser.Config$ThreadModel:clinit,local1,17,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:access$400,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$400,argmnt,2,<null>>,D,D>;
<org.codehaus.janino.Scanner$ScanException:init,local1,4,<>> = <<org.codehaus.janino.Location:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,4,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,4,<null>>,E,E>;
<org.sunflow.system.ui.ConsoleInterface:print,parmtr,1,<>> = <<org.sunflow.system.ui.ConsoleInterface:print,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,1,<>> = <<org.sunflow.Benchmark:init,local1,1,<null>>,E,E>;
<org.sunflow.core.ParameterList:addFloat,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addFloat,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,269,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,269,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:init,local1,32,<>> = <<org.sunflow.Benchmark$BenchmarkScene:init,local1,32,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,39,<>> = <<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,39,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,402,<>> = <<org.dacapo.harness.TestHarness:main,local1,402,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,996,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,local1,3,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,local1,3,<null>>,E,E>;
<org.dacapo.parser.Token:init,parmtr,1,<>> = <<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,parmtr,10,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,10,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,290,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,290,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,572,<>> = <<org.dacapo.harness.TestHarness:main,local1,572,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:update,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:update,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,parmtr,3,<>> = <<org.dacapo.harness.DacapoClassLoader:getJars,argmnt,3,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,22,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer$SmallBucket:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,51,<>> = <<org.sunflow.math.BoundingBox:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:toString,callback,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,local1,74,<>> = <<org.sunflow.SunflowAPI:shader,local1,74,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa3_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa3_0,local1,1,<null>>,E,E>;
<org.sunflow.RenderObjectMap:lookupOptions,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:lookupOptions,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:closeLog,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:closeLog,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:flush,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,191,<>> = <<org.dacapo.harness.Benchmark:validate,local1,191,<null>>,D,D>;
<org.dacapo.parser.Config:setSizeDescription,local1,4,<>> = <<org.dacapo.parser.Config$Size:setDesc,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,local1,24,<>> = <<org.dacapo.harness.FileDigest:get,local1,24,<null>>,E,E>;
<org.sunflow.core.ParameterList$1:clinit,local1,102,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,102,<null>>,E,E>;
<org.sunflow.core.LightServer:access$200,parmtr,2,<>> = <<org.sunflow.core.LightServer:access$200,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,parmtr,2,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRasterY,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRasterX,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,151,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,local1,6,<>> = <<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,local1,6,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,27,<>> = <<org.sunflow.core.Scene:render,local1,27,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,parmtr,2,<>> = <<org.dacapo.harness.FileDigest:getText,argmnt,2,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,104,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:dot,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getGlobalRadiance,parmtr,2,<>> = <<org.sunflow.core.LightServer:getGlobalRadiance,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:traceGlossy,parmtr,1,<>> = <<org.sunflow.core.LightServer:traceGlossy,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadeHit,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,217,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,217,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:class$,retrn,3,<>> = <<org.codehaus.janino.util.CausedException:class$,retrn,3,<null>>,D,D>;
<org.sunflow.core.Instance:init,parmtr,1,<>> = <<org.sunflow.core.Instance:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,6,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,6,<null>>,E,E>;
<org.dacapo.parser.Config:describeSizes,local1,105,<>> = <<org.dacapo.parser.Config:describeSizes,local1,105,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,20,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,20,<null>>,D,D>;
<org.sunflow.core.gi.GIEngineFactory:create,retrn,43,<>> = <<org.sunflow.core.gi.GIEngineFactory:create,retrn,43,<null>>,D,D>;<<org.sunflow.core.gi.AmbientOcclusionGIEngine:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,53,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,9,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:setBasis,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getV,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:setModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getGeoNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getUV,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPrimitiveID,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getU,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,109,<>> = <<org.dacapo.harness.TestHarness:main,local1,109,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,267,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,267,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,114,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,114,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,182,<>> = <<org.sunflow.SunflowAPI:create,local1,182,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,72,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,749,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,749,<null>>,D,D>;
<org.sunflow.image.Color:madd,parmtr,2,<>> = <<org.sunflow.image.Color:madd,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,74,<>> = <<org.sunflow.SunflowAPI:geometry,local1,74,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,2,<>> = <<java.util.zip.ZipInputStream:init,argmnt,1,<null>>,D,D>;<<java.util.zip.ZipInputStream:close,argmnt,1,<null>>,D,D>;<<java.util.zip.ZipInputStream:getNextEntry,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloats,local1,6,<>> = <<org.sunflow.core.ParameterList:addFloats,local1,6,<null>>,E,E>;
<org.sunflow.core.Camera:update,local1,143,<>> = <<org.sunflow.core.Camera:update,local1,143,<null>>,E,E>;
<org.dacapo.harness.Callback:runAgain,local1,289,<>> = <<org.dacapo.harness.Callback:runAgain,local1,289,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:prepareJars,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,60,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,214,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Memory:bytesToString,local1,62,<>> = <<org.sunflow.system.Memory:bytesToString,local1,62,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,41,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getBytes,parmtr,3,<>> = <<org.dacapo.parser.Config:getBytes,argmnt,3,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,121,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,121,<null>>,D,D>;<<org.sunflow.core.bucket.SpiralBucketOrder:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:init,local1,17,<>> = <<org.dacapo.parser.Config:init,argmnt,1,<null>>,D,D>;<<java.util.HashMap:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa5_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa5_0,local1,1,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,95,<>> = <<org.sunflow.core.accel.KDTree:build,local1,95,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,45,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList:addVectors,parmtr,4,<>> = <<org.sunflow.core.ParameterList:addVectors,argmnt,4,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,36,<>> = <<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,36,<null>>,D,D>;
<org.sunflow.image.Color:sub,retrn,11,<>> = <<org.sunflow.image.Color:sub,retrn,11,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,28,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,28,<null>>,E,E>;
<org.sunflow.core.Ray:setMax,parmtr,1,<>> = <<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,49,<>> = <<java.net.URL:openStream,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,parmtr,3,<>> = <<org.dacapo.parser.ConfigFile:sizeClause,argmnt,3,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:getDiffuse,parmtr,1,<>> = <<org.sunflow.core.shader.DiffuseShader:getDiffuse,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,parmtr,8,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,8,<null>>,D,D>;
<org.sunflow.core.ShadingState:getIrradiance,local1,3,<>> = <<org.sunflow.core.ShadingState:getIrradiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getIrradiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,45,<>> = <<org.dacapo.parser.ConfigFile:main,local1,45,<null>>,E,E>;
<org.sunflow.system.UI:printError,parmtr,3,<>> = <<org.sunflow.system.UI:printError,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,25,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,25,<null>>,D,D>;
<org.dacapo.parser.Config:getArgs,retrn,10,<>> = <<org.dacapo.parser.Config:getArgs,retrn,10,<null>>,D,D>;
<org.sunflow.math.Vector3:cross,retrn,4,<>> = <<org.sunflow.math.Vector3:cross,argmnt,4,<null>>,D,D>;<<org.sunflow.math.Vector3:cross,retrn,4,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,234,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,234,<null>>,E,E>;
<org.apache.commons.cli.Options:getOptionGroups,parmtr,1,<>> = <<org.apache.commons.cli.Options:getOptionGroups,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getBounds,parmtr,1,<>> = <<org.sunflow.core.Instance:getBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setKeep,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.Scanner$ScanException:init,parmtr,1,<>> = <<org.codehaus.janino.Scanner$ScanException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,25,<>> = <<org.dacapo.harness.Sunflow:init,local1,25,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,retrn,49,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:addArg,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:parse,retrn,49,<null>>,D,D>;<<org.apache.commons.cli.Parser:processOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:checkRequiredOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:processProperties,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:getOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:flatten,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:setOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,128,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:getKey,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,35,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TestHarness:makeCleanScratch,argmnt,2,<null>>,D,D>;<<org.dacapo.harness.TestHarness:runBenchmark,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:getUniqueName,parmtr,1,<>> = <<org.sunflow.SunflowAPI:getUniqueName,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point2:init,parmtr,1,<>> = <<org.sunflow.math.Point2:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,440,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,5,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,5,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,288,<>> = <<org.sunflow.RenderObjectMap:remove,local1,288,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,local1,11,<>> = <<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,28,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:isDirectory,argmnt,1,<null>>,D,D>;<<java.io.File:getAbsoluteFile,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOptionGroup,local1,61,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;<<java.util.Map:put,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:addOptionGroup,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,176,<>> = <<org.sunflow.image.RGBSpace:toString,local1,176,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,328,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,328,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,159,<>> = <<org.sunflow.SunflowAPI:create,local1,159,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,parmtr,4,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,argmnt,4,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,538,<>> = <<org.sunflow.image.RGBSpace:toString,local1,538,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,457,<>> = <<org.sunflow.image.RGBSpace:toString,local1,457,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:init,parmtr,1,<>> = <<org.sunflow.core.AccelerationStructureFactory:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:hasContrast,parmtr,3,<>> = <<org.sunflow.image.Color:hasContrast,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:threadModel,local1,72,<>> = <<org.dacapo.parser.ConfigFile:threadModel,local1,72,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,394,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,394,<null>>,E,E>;
<org.sunflow.RenderObjectMap:update,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:update,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getWorldToCamera,local1,9,<>> = <<org.sunflow.core.Camera:getWorldToCamera,local1,9,<null>>,E,E>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,66,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,66,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,702,<>> = <<java.io.FileWriter:init,argmnt,1,<null>>,D,D>;<<java.io.FileWriter:write,argmnt,1,<null>>,D,D>;<<java.io.FileWriter:close,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,49,<>> = <<org.sunflow.core.accel.KDTree:build,local1,49,<null>>,D,D>;
<org.sunflow.core.IntersectionState:hit,parmtr,1,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:clinit,local1,32,<>> = <<org.dacapo.parser.Config$ThreadModel:clinit,local1,32,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,callback,1,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:init,parmtr,1,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,210,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,210,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:intersect,local1,715,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,715,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:unpackZipFileResource,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,119,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,7,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,232,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,232,<null>>,D,D>;
<org.dacapo.parser.Config:getOutputs,local1,4,<>> = <<org.dacapo.parser.Config:getOutputs,local1,4,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,487,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,487,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,946,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,946,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,parmtr,5,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,5,<null>>,D,D>;
<org.apache.commons.cli.Options:addOptionGroup,retrn,1,<>> = <<org.apache.commons.cli.Options:addOptionGroup,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:addOptionGroup,retrn,1,<null>>,D,D>;<<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:trace,local1,16,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:generateParseException,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,175,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:replaceAllFixed,retrn,2,<>> = <<org.dacapo.harness.FileDigest:replaceAllFixed,retrn,2,<null>>,D,D>;<<java.lang.String:indexOf,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.FileDigest:replaceAllFixed,argmnt,2,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,50,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:init,local1,39,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:getPrimitiveBound,local1,7,<>> = <<org.sunflow.core.InstanceList:getPrimitiveBound,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:setRay,parmtr,1,<>> = <<org.sunflow.core.ShadingState:setRay,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,143,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,304,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,304,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,14,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,parmtr,2,<>> = <<org.apache.commons.cli.PosixParser:flatten,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:flatten,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:getOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,390,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,390,<null>>,D,D>;
<org.sunflow.image.Color:getLuminance,parmtr,1,<>> = <<org.sunflow.image.Color:getLuminance,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:start,parmtr,1,<>> = <<org.dacapo.harness.Callback:start,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:start,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,parmtr,3,<>> = <<org.sunflow.SunflowAPI:geometry,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,381,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,381,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,40,<>> = <<org.sunflow.SunflowAPI:render,local1,40,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,local1,37,<>> = <<org.dacapo.harness.FileDigest:get,local1,37,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,41,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,41,<null>>,E,E>;
<org.sunflow.Benchmark:init,local1,49,<>> = <<org.sunflow.Benchmark:init,local1,49,<null>>,E,E>;
<org.sunflow.core.Scene:calculatePhotons,local1,3,<>> = <<org.sunflow.core.Scene:calculatePhotons,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,164,<>> = <<org.sunflow.SunflowAPI:parse,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,122,<>> = <<org.dacapo.harness.Callback:complete,local1,122,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,21,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:init,parmtr,2,<>> = <<org.dacapo.harness.Callback$Mode:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.InstanceList:intersectPrimitive,parmtr,1,<>> = <<org.sunflow.core.InstanceList:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,1,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:parse,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,67,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,parmtr,2,<>> = <<org.dacapo.harness.DacapoClassLoader:getJars,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadLimit,local1,22,<>> = <<org.dacapo.parser.Config:setThreadLimit,local1,22,<null>>,E,E>;
<org.sunflow.math.BoundingBox:init,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree:buildTree,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:buildTree,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:initLightSamples,local1,6,<>> = <<org.sunflow.core.LightServer:initLightSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:remove,local1,3,<>> = <<org.sunflow.SunflowAPI:remove,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,22,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,22,<null>>,D,D>;
<org.dacapo.parser.Config:hasDigest,parmtr,1,<>> = <<org.dacapo.parser.Config:hasDigest,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,324,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,324,<null>>,E,E>;
<org.sunflow.core.Instance:transformWorldToObject,local1,21,<>> = <<org.sunflow.core.Instance:transformWorldToObject,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformP,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,561,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,parmtr,3,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:revertClassLoader,local1,3,<>> = <<org.dacapo.harness.Benchmark:revertClassLoader,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descElement,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:descElement,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:descId,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:update,parmtr,2,<>> = <<org.sunflow.core.shader.GlassShader:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getColor,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloat,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getIntersectionState,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:toString,local1,24,<>> = <<org.sunflow.image.Color:toString,local1,24,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,388,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,388,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,846,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,846,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,local1,227,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,local1,31,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformP,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,399,<>> = <<org.dacapo.harness.TestHarness:main,local1,399,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,691,<>> = <<org.sunflow.core.Scene:render,local1,691,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,264,<>> = <<java.util.List:isEmpty,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addIntegerArray,local1,6,<>> = <<org.sunflow.core.ParameterList:addIntegerArray,local1,6,<null>>,E,E>;
<org.sunflow.core.ShadingState:occlusion,retrn,4,<>> = <<org.sunflow.core.ShadingState:occlusion,argmnt,4,<null>>,D,D>;<<org.sunflow.core.ShadingState:occlusion,retrn,4,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,local1,47,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,54,<>> = <<org.sunflow.core.LightServer:showStats,local1,54,<null>>,E,E>;
<org.sunflow.core.ParameterList:getColor,retrn,31,<>> = <<org.sunflow.core.ParameterList:getColor,retrn,31,<null>>,D,D>;
<org.sunflow.core.Geometry:getWorldBounds,parmtr,1,<>> = <<org.sunflow.core.Geometry:getWorldBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:getURL,local1,20,<>> = <<org.dacapo.harness.Benchmark:getURL,local1,20,<null>>,E,E>;
<org.sunflow.core.LightServer:calculatePhotons,local1,380,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,380,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getLight,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printInfo,local1,9,<>> = <<org.sunflow.system.UI:printInfo,local1,9,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,local1,207,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:setFaceVertexCount,parmtr,1,<>> = <<org.sunflow.core.ParameterList:setFaceVertexCount,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapUV,local1,6,<>> = <<org.sunflow.math.OrthoNormalBasis:swapUV,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:swapUV,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,38,<>> = <<org.sunflow.core.Ray:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$2000,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$2000,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,13,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,435,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,435,<null>>,D,D>;
<org.sunflow.core.ShadingState:createFinalGatherState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:createFinalGatherState,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,228,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:setLights,parmtr,2,<>> = <<org.sunflow.core.LightServer:setLights,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:setLights,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadCount,local1,71,<>> = <<org.dacapo.parser.Config:getThreadCount,local1,71,<null>>,E,E>;
<org.sunflow.RenderObjectMap:remove,local1,231,<>> = <<org.sunflow.RenderObjectMap:remove,local1,231,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,193,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,15,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,284,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,362,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,45,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,45,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,71,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,71,<null>>,D,D>;
<org.dacapo.parser.Config:getThreadLimit,parmtr,1,<>> = <<org.dacapo.parser.Config:getThreadLimit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,570,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,570,<null>>,D,D>;
<org.dacapo.parser.Config:getBytes,parmtr,1,<>> = <<org.dacapo.parser.Config:getBytes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,28,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,28,<null>>,E,E>;
<org.dacapo.harness.Callback:runAgain,local1,152,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1031,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1031,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:numEmit,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:numEmit,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getBound,local1,43,<>> = <<org.sunflow.math.BoundingBox:getBound,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:valueOf,retrn,5,<>> = <<org.sunflow.system.UI$Module:valueOf,retrn,5,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,411,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,411,<null>>,D,D>;
<org.sunflow.core.Scene:render,parmtr,4,<>> = <<org.sunflow.core.Scene:render,argmnt,4,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,257,<>> = <<org.dacapo.harness.Benchmark:validate,local1,257,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,550,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,11,<>> = <<org.sunflow.SunflowAPI:parameter,local1,11,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,24,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,24,<null>>,D,D>;
<org.sunflow.core.ParameterList:getString,local1,7,<>> = <<org.sunflow.core.ParameterList:getString,local1,7,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:libraries,local1,101,<>> = <<org.dacapo.parser.ConfigFile:libraries,local1,101,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,87,<>> = <<org.dacapo.parser.Config:describeSizes,local1,87,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorWorldToObject,parmtr,1,<>> = <<org.sunflow.core.Instance:transformVectorWorldToObject,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,41,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,41,<null>>,E,E>;
<org.dacapo.harness.Callback:init,parmtr,2,<>> = <<org.dacapo.harness.Callback:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:addOutputFile,parmtr,3,<>> = <<org.dacapo.parser.Config:addOutputFile,argmnt,3,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.GIEngineFactory:init,parmtr,1,<>> = <<org.sunflow.core.gi.GIEngineFactory:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:traceBake,parmtr,1,<>> = <<org.sunflow.core.Scene:traceBake,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPrimitiveBound,local1,3,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,1,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,1,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getBoolValue,local1,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getBoolValue,argmnt,1,<null>>,D,D>;<<java.lang.Boolean:booleanValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getThreadPriority,parmtr,1,<>> = <<org.sunflow.core.Scene:getThreadPriority,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,2246,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,2246,<null>>,E,E>;
<org.dacapo.harness.FileDigest:getText,retrn,155,<>> = <<org.dacapo.harness.FileDigest:getText,retrn,155,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,98,<>> = <<org.sunflow.core.accel.UniformGrid:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,98,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,2,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transform,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformP,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:iterator,retrn,2,<>> = <<org.sunflow.core.ShadingState:iterator,retrn,2,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,598,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,598,<null>>,D,D>;
<org.sunflow.core.ShadingState:getWorldToCamera,local1,12,<>> = <<org.sunflow.core.Camera:getWorldToCamera,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:intersect,parmtr,1,<>> = <<org.sunflow.core.Geometry:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,77,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,77,<null>>,D,D>;
<org.sunflow.core.ShadingState:getWorldToCamera,local1,6,<>> = <<org.sunflow.core.Scene:getCamera,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Memory:bytesToString,local1,51,<>> = <<org.sunflow.system.Memory:bytesToString,local1,51,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,12,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:distanceTo,parmtr,1,<>> = <<org.sunflow.math.Point3:distanceTo,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getVerbose,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getVerbose,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,271,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,271,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,50,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,50,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrixArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getMatrixArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloatParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,774,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,774,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,43,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,43,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,40,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,40,<null>>,E,E>;
<org.sunflow.util.FastHashMap$Entry:init,parmtr,4,<>> = <<org.sunflow.util.FastHashMap$Entry:init,argmnt,4,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,7,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,7,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:flatten,local1,243,<>> = <<org.apache.commons.cli.PosixParser:burstToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;<<java.util.List:toArray,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:flatten,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:gobble,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,2,<null>>,D,D>;<<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,282,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,282,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,160,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,160,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,434,<>> = <<org.sunflow.image.RGBSpace:toString,local1,434,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,328,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,328,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,local1,326,<>> = <<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,2,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:processed,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceDiffusePhoton,local1,31,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:add,retrn,4,<>> = <<org.sunflow.image.Color:add,argmnt,4,<null>>,D,D>;<<org.sunflow.image.Color:add,retrn,4,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,566,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,566,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,48,<>> = <<org.apache.commons.cli.Option:clone,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,58,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,221,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,2,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:formatOutput,parmtr,3,<>> = <<org.sunflow.system.UI:formatOutput,argmnt,3,<null>>,D,D>;<<java.lang.Enum:name,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,local1,30,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,callback,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,67,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOptionGroup,local1,40,<>> = <<org.apache.commons.cli.Option:setRequired,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getKey,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,36,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,624,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,6,<>> = <<java.io.InputStreamReader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPoint,local1,7,<>> = <<org.sunflow.core.ParameterList:getPoint,local1,7,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,6,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,retrn,7,<>> = <<org.apache.commons.cli.Parser:parse,retrn,7,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,266,<>> = <<org.dacapo.parser.ParseException:add_escapes,local1,266,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,290,<>> = <<org.sunflow.core.Instance:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,23,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,23,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:getColumn,local1,3,<>> = <<org.dacapo.parser.SimpleCharStream:getColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,7,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,7,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,121,<>> = <<org.sunflow.core.accel.KDTree:build,local1,121,<null>>,D,D>;
<org.sunflow.util.FastHashMap:remove,local1,11,<>> = <<org.sunflow.util.FastHashMap:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getIrradiance,local1,20,<>> = <<org.sunflow.core.LightServer:getIrradiance,local1,20,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:scatterPhoton,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight:scatterPhoton,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,3,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,3,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,109,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,109,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,11,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:setLightList,parmtr,2,<>> = <<org.sunflow.core.Scene:setLightList,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:getSize,local1,30,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,local1,24,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:sampled,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,511,<>> = <<org.sunflow.core.Scene:render,local1,511,<null>>,D,D>;
<org.apache.commons.cli.Parser:processProperties,local1,77,<>> = <<org.apache.commons.cli.Parser:processProperties,local1,77,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,32,<>> = <<org.dacapo.harness.Callback:complete,local1,32,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceReflectionPhoton,local1,3,<>> = <<org.sunflow.core.PhotonStore:allowReflectionBounced,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceReflectionPhoton,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_consume_token,retrn,8,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,retrn,8,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,488,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,164,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getIntArray,retrn,31,<>> = <<org.sunflow.core.ParameterList:getIntArray,retrn,31,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,local1,54,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,5,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:configFile,local1,142,<>> = <<org.dacapo.parser.ConfigFile:description,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeSpec,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:config,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:configFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,487,<>> = <<org.sunflow.core.accel.KDTree:build,local1,487,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:createMessage,local1,59,<>> = <<org.apache.commons.cli.MissingOptionException:createMessage,local1,59,<null>>,D,D>;
<org.apache.commons.cli.Option:getArgName,retrn,3,<>> = <<org.apache.commons.cli.Option:getArgName,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getArgName,retrn,3,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,2,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,2,<null>>,E,E>;
<org.dacapo.harness.Callback:runAgain,parmtr,1,<>> = <<org.dacapo.harness.Callback:runAgain,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:isWarmup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,531,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,531,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:swapUV,local1,9,<>> = <<org.sunflow.math.OrthoNormalBasis:swapUV,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:swapUV,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Options:update,local1,9,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:postIteration,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:postIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:postIterationCleanup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,35,<>> = <<org.sunflow.core.renderer.BucketRenderer:aaDepthToString,local1,35,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPower,local1,19,<>> = <<org.sunflow.image.Color:getLuminance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,336,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,31,<>> = <<org.sunflow.RenderObjectMap:remove,local1,31,<null>>,E,E>;
<org.sunflow.system.UI:formatOutput,retrn,29,<>> = <<org.sunflow.system.UI:formatOutput,retrn,29,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,78,<>> = <<org.sunflow.core.ParameterList$InterpolationType:clinit,local1,78,<null>>,E,E>;
<org.sunflow.core.LightSample:dot,parmtr,1,<>> = <<org.sunflow.core.LightSample:dot,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_2,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_2,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_2,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,3,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,3,<null>>,D,D>;
<org.sunflow.system.Timer:toString,local1,97,<>> = <<org.sunflow.system.Timer:toString,local1,97,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,4220,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,4220,<null>>,E,E>;
<org.sunflow.system.UI$Module:init,parmtr,1,<>> = <<org.sunflow.system.UI$Module:init,argmnt,1,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:getJars,local1,22,<>> = <<org.dacapo.harness.DacapoClassLoader:getJars,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.NullAccelerator:intersect,local1,13,<>> = <<org.sunflow.core.accel.NullAccelerator:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,local1,51,<>> = <<org.dacapo.parser.SimpleCharStream:GetSuffix,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:backup,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,60,<>> = <<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,60,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addPoints,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,parmtr,3,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,203,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,203,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:validate,local1,1,<>> = <<org.dacapo.harness.Sunflow:validate,local1,1,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,458,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,81,<>> = <<org.dacapo.parser.Config:describe,local1,81,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,local1,53,<>> = <<org.sunflow.core.Scene:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,34,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,local1,34,<null>>,D,D>;
<org.sunflow.system.UI$Module:valueOf,parmtr,2,<>> = <<org.sunflow.system.UI$Module:valueOf,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,6,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,6,<null>>,E,E>;
<org.sunflow.core.gi.GIEngineFactory:create,retrn,97,<>> = <<org.sunflow.core.gi.GIEngineFactory:create,retrn,97,<null>>,D,D>;<<org.sunflow.core.gi.IrradianceCacheGIEngine:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,2,<>> = <<java.util.TreeSet:init,argmnt,1,<null>>,D,D>;<<java.util.TreeSet:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,109,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,790,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformTransposeVZ,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformTransposeVZ,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:configFile,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:configFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:config,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:sizeSpec,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:description,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,564,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,564,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,153,<>> = <<org.dacapo.harness.Benchmark:validate,local1,153,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,parmtr,1,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,29,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,29,<null>>,E,E>;
<org.sunflow.math.Vector3:clinit,local1,64,<>> = <<org.sunflow.math.Vector3:clinit,local1,64,<null>>,E,E>;
<org.sunflow.core.Scene:render,local1,442,<>> = <<org.sunflow.core.Scene:render,local1,442,<null>>,E,E>;
<org.sunflow.core.ParameterList:getString,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,191,<>> = <<org.dacapo.parser.Config:print,local1,191,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,112,<>> = <<org.dacapo.harness.TestHarness:main,local1,112,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,62,<>> = <<org.dacapo.parser.ConfigFile:main,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,1,<>> = <<org.sunflow.SunflowAPI:compile,local1,1,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:init,local1,215,<>> = <<org.sunflow.core.gi.InstantGI:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupOptions,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:lookupOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetImage,local1,40,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getDescription,retrn,3,<>> = <<org.apache.commons.cli.Option:getDescription,retrn,3,<null>>,D,D>;<<org.apache.commons.cli.Option:getDescription,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,local1,54,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,local1,54,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,82,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,82,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,952,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,952,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,28,<>> = <<org.sunflow.image.RGBSpace:toString,local1,28,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,181,<>> = <<org.sunflow.util.FastHashMap:resize,local1,181,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:init,parmtr,1,<>> = <<org.apache.commons.cli.MissingArgumentException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.MissingArgumentException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeBakeResult,parmtr,2,<>> = <<org.sunflow.core.LightServer:shadeBakeResult,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:setResult,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,233,<>> = <<org.sunflow.image.RGBSpace:toString,local1,233,<null>>,D,D>;
<org.sunflow.math.Vector3:dot,parmtr,2,<>> = <<org.sunflow.math.Vector3:dot,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,195,<>> = <<org.dacapo.harness.Callback:isWarmup,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:runAgain,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:hasOption,parmtr,2,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,1127,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,1127,<null>>,E,E>;
<org.sunflow.image.Color:set,retrn,1,<>> = <<org.sunflow.image.Color:set,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:set,retrn,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,697,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,697,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,120,<>> = <<org.sunflow.core.gi.InstantGI:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceDiffusePhoton,local1,46,<>> = <<org.sunflow.core.LightServer:traceDiffusePhoton,local1,46,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,91,<>> = <<java.lang.Thread:setPriority,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:update,local1,8,<>> = <<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,local1,6,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,local1,6,<null>>,E,E>;
<org.sunflow.core.ShadingState:createRefractionBounceState,retrn,2,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createRefractionBounceState,retrn,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addTexCoords,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addTexCoords,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,17,<>> = <<org.sunflow.SunflowAPI:camera,local1,17,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,32,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,32,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_3,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_3,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopAtPos,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,49,<>> = <<org.dacapo.parser.ConfigFile:init,local1,49,<null>>,E,E>;
<org.sunflow.SunflowAPI:geometry,parmtr,1,<>> = <<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupGeometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,17,<>> = <<org.sunflow.system.SearchPath:resolvePath,local1,17,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,168,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,local1,168,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,56,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,56,<null>>,E,E>;
<org.dacapo.harness.Callback:complete,local1,49,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,retrn,1,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:addOption,retrn,1,<null>>,D,D>;<<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloats,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addFloats,argmnt,3,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,960,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,960,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa10_0,local1,22,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa10_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,92,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,156,<>> = <<org.sunflow.RenderObjectMap:remove,local1,156,<null>>,E,E>;
<org.sunflow.Benchmark:init,local1,70,<>> = <<org.sunflow.Benchmark:init,local1,70,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,15,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,15,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:init,parmtr,1,<>> = <<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Parser:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,164,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,164,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,59,<>> = <<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:negate,parmtr,1,<>> = <<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Ray:init,parmtr,3,<>> = <<org.sunflow.core.Ray:init,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,16,<>> = <<java.lang.Object:clone,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:clone,callback,1,<null>>,D,D>;<<org.apache.commons.cli.Option:clone,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:prepareShadingState,parmtr,2,<>> = <<org.sunflow.core.InstanceList:prepareShadingState,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:init,local1,19,<>> = <<org.sunflow.core.Scene:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,136,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,local1,385,<>> = <<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_1,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,416,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,416,<null>>,D,D>;
<org.sunflow.core.ShadingState:getInstance,retrn,3,<>> = <<org.sunflow.core.ShadingState:getInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getInstance,retrn,3,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,3,<>> = <<org.sunflow.core.LightServer:addShadingCache,local1,3,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,8426,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,8426,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,local1,682,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersectBox,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,165,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,165,<null>>,E,E>;
<org.sunflow.RenderObjectMap:update,parmtr,3,<>> = <<org.sunflow.RenderObjectMap:update,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValues,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceFinalGather,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceFinalGather,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,3,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,207,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,207,<null>>,E,E>;
<org.apache.commons.cli.UnrecognizedOptionException:init,parmtr,1,<>> = <<org.apache.commons.cli.UnrecognizedOptionException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.ParseException:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:loadClass,retrn,29,<>> = <<org.dacapo.harness.DacapoClassLoader:loadClass,retrn,29,<null>>,D,D>;
<org.dacapo.parser.Config:getSizes,retrn,9,<>> = <<org.dacapo.parser.Config:getSizes,retrn,9,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,local1,48,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,4,<null>>,D,D>;
<org.apache.commons.cli.Option:hasArgs,parmtr,1,<>> = <<org.apache.commons.cli.Option:hasArgs,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArgs,callback,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,local1,10,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,41,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:setLength,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_3,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_2,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:getNextToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_1,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:SkipLexicalActions,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_0,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,2,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,2,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,371,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,828,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,828,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,64,<>> = <<org.sunflow.core.primitive.TriangleMesh:writeObj,local1,64,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getCallback,retrn,3,<>> = <<org.dacapo.harness.CommandLineArgs:getCallback,retrn,3,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getCallback,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,41,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,41,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,830,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:get,local1,35,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getStringArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceReflection,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceReflection,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,12,<null>>,E,E>;
<org.sunflow.core.ShadingState:storePhoton,local1,3,<>> = <<org.sunflow.core.PhotonStore:store,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:storePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:has,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:has,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config$Size:init,local1,40,<>> = <<org.dacapo.parser.Config$Size:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:jj_la1_init_0,local1,4,<>> = <<org.dacapo.parser.ConfigFile:jj_la1_init_0,local1,4,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:getNumPrimitives,local1,3,<>> = <<org.sunflow.core.InstanceList:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:update,parmtr,2,<>> = <<org.sunflow.core.InstanceList:update,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,147,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,147,<null>>,E,E>;
<org.dacapo.harness.Benchmark:byteCount,parmtr,2,<>> = <<java.io.File:length,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:byteCount,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,local1,42,<>> = <<org.dacapo.harness.Benchmark:run,local1,42,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:GetImage,local1,92,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,150,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,150,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,132,<>> = <<org.sunflow.core.accel.KDTree:build,local1,132,<null>>,E,E>;
<org.sunflow.system.SearchPath:resolvePath,parmtr,1,<>> = <<org.sunflow.system.SearchPath:resolvePath,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformVY,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformVY,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addStringArray,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addStringArray,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,8,<>> = <<org.dacapo.harness.Benchmark:validate,local1,8,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,249,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,100,<>> = <<org.sunflow.math.Point3:distanceToSquared,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,255,<>> = <<org.sunflow.Benchmark:init,local1,255,<null>>,D,D>;
<org.apache.commons.cli.Options:toString,parmtr,1,<>> = <<org.apache.commons.cli.Options:toString,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:toString,callback,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,75,<>> = <<org.dacapo.harness.CommandLineArgs:getTargetVar,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:isWarmup,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getWindow,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getVerbose,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getIterations,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:runAgain,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getMethodology,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getMaxIterations,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3100,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3100,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3100,retrn,3,<null>>,D,D>;
<org.sunflow.math.Vector3:dot,parmtr,1,<>> = <<org.sunflow.math.Vector3:dot,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,91,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:shaderOverride,local1,3,<>> = <<org.sunflow.core.Scene:setShaderOverride,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:shaderOverride,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,36,<>> = <<org.sunflow.core.accel.KDTree:build,local1,36,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,retrn,96,<>> = <<org.sunflow.SunflowAPI:build,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:setCurrentFrame,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:create,retrn,96,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,159,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,159,<null>>,E,E>;
<org.dacapo.harness.TeeOutputStream:finalize,local1,1,<>> = <<org.dacapo.harness.TeeOutputStream:finalize,local1,1,<null>>,E,E>;
<org.sunflow.SunflowAPI:getUniqueName,local1,29,<>> = <<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:getUniqueName,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getPhotonShader,parmtr,1,<>> = <<org.sunflow.core.LightServer:getPhotonShader,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,39,<>> = <<org.dacapo.harness.Benchmark:extractFileResource,local1,39,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getIterations,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getIterations,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,51,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,51,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,245,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,245,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,524,<>> = <<org.sunflow.core.Scene:render,local1,524,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:setInstanceLists,parmtr,3,<>> = <<org.sunflow.core.Scene:setInstanceLists,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,20,<>> = <<org.dacapo.harness.Callback:init,local1,20,<null>>,E,E>;
<org.sunflow.core.LightServer:calculatePhotons,local1,22,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,22,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,9,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,9,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,129,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:isDirectory,argmnt,1,<null>>,D,D>;<<java.io.File:listFiles,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:sub,local1,4,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getArgList,retrn,3,<>> = <<org.apache.commons.cli.CommandLine:getArgList,retrn,3,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getArgList,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1800,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1800,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1800,retrn,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,1,<>> = <<org.dacapo.harness.TestHarness:init,local1,1,<null>>,E,E>;
<org.sunflow.util.FastHashMap$Entry:init,parmtr,2,<>> = <<org.sunflow.util.FastHashMap$Entry:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Options:update,local1,50,<>> = <<org.sunflow.core.Options:update,local1,50,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupModifier,local1,9,<>> = <<org.sunflow.RenderObjectMap:lookupModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,558,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:init,local1,29,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:checkExists,parmtr,3,<>> = <<org.dacapo.parser.Config:checkExists,argmnt,3,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,parmtr,2,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.ProgressiveRenderer:render,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Display:imageEnd,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Display:imageBegin,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:clearValues,local1,3,<>> = <<java.util.List:clear,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:clearValues,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1476,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1476,<null>>,D,D>;
<org.sunflow.core.Scene:getBounds,parmtr,1,<>> = <<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resetSearchPath,local1,3,<>> = <<org.sunflow.system.SearchPath:resetSearchPath,argmnt,1,<null>>,D,D>;<<java.util.LinkedList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,261,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,261,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,967,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,967,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,93,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,93,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,local1,3,<>> = <<java.io.InputStreamReader:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,local1,23,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:burstToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:getOption,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,139,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,2,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,187,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,187,<null>>,E,E>;
<org.dacapo.parser.Config:setThreadFactor,local1,44,<>> = <<org.dacapo.parser.Config$Size:setThreadCount,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,44,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPrimitiveBound,local1,54,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:normalize,retrn,2,<>> = <<org.sunflow.math.Vector3:normalize,retrn,2,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,31,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,99,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,parmtr,3,<>> = <<org.dacapo.harness.Benchmark:extractFileResource,argmnt,3,<null>>,D,D>;<<java.io.File:getCanonicalPath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:setShaderOverride,parmtr,2,<>> = <<org.sunflow.core.LightServer:setShaderOverride,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:setShaderOverride,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,53,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,441,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,441,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,86,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:length,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:sizeClause,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:integer,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:outputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:class$,local1,13,<>> = <<org.codehaus.janino.util.CausedException:class$,local1,13,<null>>,D,D>;
<org.dacapo.parser.Config:printThreadModel,local1,65,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,86,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,86,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,81,<>> = <<org.sunflow.SunflowAPI:camera,local1,81,<null>>,D,D>;
<org.sunflow.math.Vector3:mul,retrn,1,<>> = <<org.sunflow.math.Vector3:mul,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:mul,retrn,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrix,retrn,3,<>> = <<org.sunflow.core.ParameterList:getMatrix,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ParameterList:getMatrix,retrn,3,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:flipW,local1,3,<>> = <<org.sunflow.math.Vector3:negate,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:flipW,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,739,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,739,<null>>,D,D>;
<org.dacapo.parser.Token:init,parmtr,1,<>> = <<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:disable_tracing,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:disable_tracing,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,763,<>> = <<org.dacapo.harness.Benchmark:validate,local1,763,<null>>,E,E>;
<org.dacapo.parser.Config:setExists,local1,4,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,372,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:parse,retrn,14,<>> = <<org.dacapo.parser.Config:parse,retrn,14,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,parmtr,1,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:access$200,retrn,3,<>> = <<org.sunflow.core.LightServer:access$200,retrn,3,<null>>,D,D>;<<org.sunflow.core.LightServer:access$200,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,22,<>> = <<org.sunflow.SunflowAPI:parameter,local1,22,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,2,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflection,local1,31,<>> = <<org.sunflow.core.Scene:trace,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceReflection,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,local1,107,<>> = <<org.apache.commons.cli.PosixParser:flatten,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:gobble,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:burstToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processOptionToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:prepareShadingState,local1,36,<>> = <<org.sunflow.core.Modifier:modify,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,645,<>> = <<org.sunflow.core.accel.KDTree:build,local1,645,<null>>,E,E>;
<org.sunflow.math.Point2:init,parmtr,1,<>> = <<org.sunflow.math.Point2:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,45,<>> = <<java.lang.Enum:name,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,418,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,418,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,local1,16,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjCheckNAdd,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,938,<>> = <<org.dacapo.harness.Benchmark:validate,local1,938,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getParsedOptionValue,local1,24,<>> = <<org.apache.commons.cli.CommandLine:getParsedOptionValue,local1,24,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorObjectToWorld,local1,3,<>> = <<org.sunflow.core.Instance:transformVectorObjectToWorld,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformV,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,124,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:get,parmtr,1,<>> = <<org.sunflow.math.Point3:get,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,2,<>> = <<org.dacapo.parser.Config:describe,argmnt,2,<null>>,D,D>;<<java.io.PrintStream:println,argmnt,1,<null>>,D,D>;<<java.io.PrintStream:print,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,local1,75,<>> = <<org.sunflow.SunflowAPI:options,local1,75,<null>>,E,E>;
<org.apache.commons.cli.Option:getValue,retrn,18,<>> = <<org.apache.commons.cli.Option:getValue,retrn,18,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,local1,44,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:isRequired,parmtr,1,<>> = <<org.apache.commons.cli.Option:isRequired,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,parmtr,3,<>> = <<org.sunflow.core.Scene:render,argmnt,3,<null>>,D,D>;<<org.sunflow.core.ImageSampler:prepare,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ImageSampler:render,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getRasterY,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getRasterY,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,178,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,178,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,137,<>> = <<org.dacapo.parser.ParseException:initialise,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,29,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:clinit,local1,29,<null>>,E,E>;
<org.dacapo.parser.Config:parse,local1,2,<>> = <<java.io.FileInputStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$600,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$600,argmnt,2,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,795,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,local1,35,<>> = <<org.dacapo.harness.FileDigest:get,local1,35,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,35,<>> = <<org.dacapo.harness.FileDigest:main,argmnt,2,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,48,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,48,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,99,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,local1,99,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptionGroup,retrn,10,<>> = <<org.apache.commons.cli.Options:getOptionGroup,retrn,10,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,180,<>> = <<org.sunflow.image.RGBSpace:toString,local1,180,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,parmtr,3,<>> = <<org.apache.commons.cli.PosixParser:flatten,argmnt,3,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,227,<>> = <<org.sunflow.core.tesselatable.BezierMesh:tesselate,local1,227,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,55,<>> = <<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,11,<>> = <<org.sunflow.SunflowAPI:parameter,local1,11,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,2,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,2,<null>>,E,E>;
<org.codehaus.janino.util.LocatedException:init,parmtr,3,<>> = <<org.codehaus.janino.util.LocatedException:init,argmnt,3,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:newLog,parmtr,1,<>> = <<org.dacapo.harness.TeeOutputStream:newLog,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,153,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;<<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,68,<>> = <<org.sunflow.core.accel.KDTree:build,local1,68,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,31,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,31,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:libraries,parmtr,2,<>> = <<org.dacapo.parser.Config:setJars,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:libraries,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.MissingOptionException:init,parmtr,2,<>> = <<org.apache.commons.cli.MissingOptionException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.MissingOptionException:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.MissingOptionException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,794,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,794,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,parmtr,2,<>> = <<org.dacapo.harness.Callback:complete,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,277,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,277,<null>>,E,E>;
<org.sunflow.core.LightServer:setShaderOverride,parmtr,1,<>> = <<org.sunflow.core.LightServer:setShaderOverride,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,68,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,268,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,268,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjAddStates,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjAddStates,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,83,<>> = <<org.sunflow.math.BoundingBox:toString,local1,83,<null>>,D,D>;
<org.sunflow.math.Solvers:solveQuartic,retrn,306,<>> = <<org.sunflow.math.Solvers:solveQuartic,retrn,306,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1106,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1106,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,2,<>> = <<org.sunflow.image.Color:clinit,local1,2,<null>>,E,E>;
<org.sunflow.RenderObjectMap:remove,local1,297,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,143,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:closeLog,parmtr,1,<>> = <<org.dacapo.harness.TeePrintStream:closeLog,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepareJars,local1,68,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,51,<>> = <<org.sunflow.core.Scene:render,local1,51,<null>>,E,E>;
<org.dacapo.harness.TestHarness:init,local1,30,<>> = <<java.lang.String:replace,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getRadiance,local1,161,<>> = <<org.sunflow.core.Scene:getRadiance,local1,161,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:size,local1,89,<>> = <<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,callback,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,186,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,186,<null>>,D,D>;
<org.sunflow.core.LightServer:getPhotonShader,retrn,3,<>> = <<org.sunflow.core.LightServer:getPhotonShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getPhotonShader,retrn,3,<null>>,D,D>;
<org.sunflow.core.Geometry:build,parmtr,1,<>> = <<org.sunflow.core.Geometry:build,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:resolveIncludeFilename,parmtr,2,<>> = <<org.sunflow.SunflowAPI:resolveIncludeFilename,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,362,<>> = <<org.sunflow.RenderObjectMap:remove,local1,362,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,400,<>> = <<org.sunflow.image.RGBSpace:toString,local1,400,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,108,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,108,<null>>,D,D>;
<org.dacapo.parser.Config:setJars,local1,3,<>> = <<org.dacapo.parser.Config:setJars,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3200,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3200,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,5,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,126,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,83,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,83,<null>>,D,D>;
<org.sunflow.math.Solvers:solveQuartic,retrn,520,<>> = <<org.sunflow.math.Solvers:solveQuartic,retrn,520,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,503,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,92,<>> = <<org.dacapo.harness.FileDigest:getText,local1,92,<null>>,D,D>;
<org.dacapo.harness.Callback:stop,local1,5,<>> = <<org.dacapo.harness.Callback:stop,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:toString,local1,24,<>> = <<org.sunflow.math.Vector3:toString,local1,24,<null>>,D,D>;
<org.sunflow.core.ParameterList:getStringArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getStringArray,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:addOutputFile,parmtr,1,<>> = <<org.dacapo.parser.Config:addOutputFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setTextFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setFilterScratch,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,103,<>> = <<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,103,<null>>,D,D>;
<org.dacapo.parser.Config:getDesc,retrn,7,<>> = <<org.dacapo.parser.Config:getDesc,retrn,7,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,256,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,322,<>> = <<org.sunflow.core.LightServer$1:run,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$1:run,callback,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,parmtr,2,<>> = <<org.sunflow.SunflowAPI:instance,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:init,parmtr,1,<>> = <<org.sunflow.core.LightServer:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadingCache,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:init,parmtr,1,<>> = <<org.dacapo.parser.ParseException:init,argmnt,1,<null>>,D,D>;<<java.lang.Exception:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:resolveIncludeFilename,retrn,7,<>> = <<org.sunflow.SunflowAPI:resolveIncludeFilename,retrn,7,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:prepare,parmtr,2,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:prepare,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,80,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,80,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,420,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,59,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,59,<null>>,E,E>;
<org.sunflow.image.Color:mul,parmtr,3,<>> = <<org.sunflow.image.Color:mul,argmnt,3,<null>>,D,D>;
<org.sunflow.util.FastHashMap:containsKey,local1,47,<>> = <<org.sunflow.util.FastHashMap:containsKey,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:values,local1,2,<>> = <<org.dacapo.parser.Config$ThreadModel:values,local1,2,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ReInit,local1,3,<>> = <<java.io.InputStreamReader:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,254,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputFile,local1,71,<>> = <<org.dacapo.parser.ConfigFile:outputFile,local1,71,<null>>,E,E>;
<org.sunflow.core.Scene:setLightList,local1,3,<>> = <<org.sunflow.core.Scene:setLightList,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:setLights,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:start,parmtr,2,<>> = <<org.dacapo.harness.Callback:start,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,146,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,146,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,470,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,470,<null>>,D,D>;
<org.dacapo.parser.Config$Size:getOutputFile,parmtr,2,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,454,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,51,<>> = <<org.sunflow.core.ParameterList:isValidParameter,local1,51,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,parmtr,3,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,509,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback$Mode:values,local1,2,<>> = <<org.dacapo.harness.Callback$Mode:values,local1,2,<null>>,E,E>;
<org.dacapo.harness.Benchmark:init,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,227,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,227,<null>>,D,D>;
<org.dacapo.harness.Callback:start,local1,8,<>> = <<org.dacapo.harness.Callback:start,local1,8,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,110,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,194,<>> = <<org.dacapo.harness.TestHarness:main,local1,194,<null>>,E,E>;
<org.sunflow.math.QMC:halton,local1,169,<>> = <<org.sunflow.math.QMC:halton,local1,169,<null>>,E,E>;
<org.apache.commons.cli.Option:getOpt,parmtr,1,<>> = <<org.apache.commons.cli.Option:getOpt,argmnt,1,<null>>,D,D>;
<org.sunflow.core.bucket.HilbertBucketOrder:init,parmtr,1,<>> = <<org.sunflow.core.bucket.HilbertBucketOrder:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,119,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addTexCoords,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getId,local1,3,<>> = <<java.lang.String:charAt,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:clear,local1,10,<>> = <<org.sunflow.util.FastHashMap:clear,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasBytes,parmtr,3,<>> = <<org.dacapo.parser.Config:hasBytes,argmnt,3,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$700,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$700,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$700,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:update,local1,7,<>> = <<org.sunflow.core.shader.GlassShader:update,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,113,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,163,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,18,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,16,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,16,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,64,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,local1,64,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,81,<>> = <<org.sunflow.core.accel.KDTree:build,local1,81,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,303,<>> = <<org.sunflow.core.Instance:update,local1,303,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:access$1900,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1900,retrn,3,<null>>,D,D>;
<org.sunflow.system.Memory:sizeof,retrn,15,<>> = <<org.sunflow.system.Memory:sizeof,retrn,15,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getBakingPrimitives,local1,3,<>> = <<org.sunflow.core.Geometry:getBakingPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getBakingPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,37,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,37,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,101,<>> = <<java.util.Collection:iterator,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,207,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupShader,retrn,29,<>> = <<org.sunflow.RenderObjectMap:lookupShader,retrn,29,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:gobble,local1,19,<>> = <<org.apache.commons.cli.PosixParser:gobble,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,592,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,592,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,339,<>> = <<org.sunflow.core.LightServer:build,local1,339,<null>>,D,D>;
<org.apache.commons.cli.Options:init,local1,29,<>> = <<org.apache.commons.cli.Options:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,20,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,local1,20,<null>>,E,E>;
<org.dacapo.harness.DacapoClassLoader:create,local1,49,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,49,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI$PointLightStore:init,parmtr,2,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI$PointLightStore:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,918,<>> = <<org.dacapo.harness.Benchmark:validate,local1,918,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,432,<>> = <<org.sunflow.core.LightServer:build,local1,432,<null>>,E,E>;
<org.dacapo.harness.Benchmark:lineCount,local1,21,<>> = <<org.dacapo.harness.Benchmark:lineCount,local1,21,<null>>,D,D>;
<org.sunflow.system.UI:printDetailed,parmtr,4,<>> = <<org.sunflow.system.UI:printDetailed,argmnt,4,<null>>,D,D>;
<org.sunflow.math.Point3:normal,retrn,5,<>> = <<org.sunflow.math.Point3:normal,retrn,5,<null>>,D,D>;<<org.sunflow.math.Point3:normal,argmnt,5,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,17,<>> = <<org.dacapo.parser.ConfigFile:ReInit,local1,17,<null>>,E,E>;
<org.dacapo.parser.Config$1:clinit,local1,14,<>> = <<org.dacapo.parser.Config$1:clinit,local1,14,<null>>,E,E>;
<org.sunflow.system.UI$PrintLevel:init,parmtr,1,<>> = <<org.sunflow.system.UI$PrintLevel:init,argmnt,1,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:init,parmtr,2,<>> = <<org.sunflow.core.ShadingState:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:bmInfo,local1,6,<>> = <<org.dacapo.harness.TestHarness:bmInfo,local1,6,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,62,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,62,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,3,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,3,<null>>,D,D>;
<org.sunflow.Benchmark:kernelEnd,local1,148,<>> = <<org.sunflow.Benchmark:kernelEnd,local1,148,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:clinit,local1,31,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,31,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,629,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLight:init,parmtr,2,<>> = <<org.sunflow.core.gi.InstantGI$PointLight:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,66,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,67,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:reset,local1,36,<>> = <<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2500,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2500,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,70,<>> = <<org.dacapo.harness.TestHarness:rmdir,local1,70,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,988,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,988,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupCamera,retrn,7,<>> = <<org.sunflow.SunflowAPI:lookupCamera,retrn,7,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,128,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,128,<null>>,E,E>;
<org.dacapo.parser.Config:setLines,local1,8,<>> = <<org.dacapo.parser.Config:setLines,local1,8,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,136,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,231,<>> = <<org.sunflow.math.QMC:clinit,local1,231,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,84,<>> = <<org.dacapo.harness.Callback:init,local1,84,<null>>,E,E>;
<org.sunflow.core.Scene:calculatePhotons,parmtr,1,<>> = <<org.sunflow.core.Scene:calculatePhotons,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,107,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printError,local1,8,<>> = <<org.sunflow.system.UI:printError,local1,8,<null>>,E,E>;
<org.sunflow.math.QMC:clinit,local1,84,<>> = <<org.sunflow.math.QMC:clinit,local1,84,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPower,local1,6,<>> = <<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,parmtr,2,<>> = <<java.lang.String:charAt,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:burstToken,argmnt,2,<null>>,D,D>;<<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,58,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,58,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,143,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addMatrices,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,argmnt,2,<null>>,D,D>;<<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:getMin,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,138,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,138,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,parmtr,4,<>> = <<org.dacapo.parser.Config:describeSizes,argmnt,4,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,parmtr,2,<>> = <<org.sunflow.core.ShadingState:traceRefractionPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.shader.GlassShader:scatterPhoton,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRay,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getCosND,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:isBehind,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:traceReflectionPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,77,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,77,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,94,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,94,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,448,<>> = <<org.sunflow.image.RGBSpace:toString,local1,448,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,985,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,985,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,573,<>> = <<org.sunflow.core.accel.KDTree:build,local1,573,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,42,<>> = <<org.dacapo.harness.TestHarness:main,local1,42,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,76,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,83,<>> = <<org.apache.commons.cli.Options:getOptionGroup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,61,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,61,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,685,<>> = <<org.sunflow.core.Scene:render,local1,685,<null>>,E,E>;
<org.dacapo.parser.Config:setThreadFactor,local1,17,<>> = <<org.dacapo.parser.Config:setThreadFactor,local1,17,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:burstToken,local1,47,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Ray:dot,parmtr,1,<>> = <<org.sunflow.core.Ray:dot,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:addEscapes,local1,260,<>> = <<org.dacapo.parser.TokenMgrError:addEscapes,local1,260,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,57,<>> = <<java.net.URI:toURL,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:getRay,parmtr,1,<>> = <<org.sunflow.core.Camera:getRay,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:specularPhong,local1,128,<>> = <<org.sunflow.core.LightSample:getSpecularRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:dot,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,14,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,14,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,parmtr,1,<>> = <<org.apache.commons.cli.PosixParser:burstToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,175,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,558,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,317,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOptions,parmtr,1,<>> = <<org.apache.commons.cli.Options:getOptions,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:helpOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,109,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addPoints,local1,13,<>> = <<org.sunflow.core.ParameterList:addPoints,local1,13,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,25,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:init,local1,7,<>> = <<org.dacapo.parser.ConfigFileTokenManager:init,local1,7,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,3,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,41,<>> = <<org.sunflow.math.QMC:clinit,local1,41,<null>>,D,D>;
<org.sunflow.math.Matrix4:fromBasis,local1,41,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,parmtr,3,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:extractBenchmarkSet,local1,50,<>> = <<java.util.Enumeration:nextElement,argmnt,1,<null>>,D,D>;<<java.util.Enumeration:hasMoreElements,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformV,retrn,2,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformV,retrn,2,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,2,<>> = <<org.dacapo.harness.Callback:complete,local1,2,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getDebug,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getDebug,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,local1,36,<>> = <<org.sunflow.math.Matrix4:transform,local1,36,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getRadiance,local1,59,<>> = <<org.sunflow.core.LightServer:getRadiance,local1,59,<null>>,E,E>;
<org.dacapo.harness.FileDigest:getText,local1,87,<>> = <<org.dacapo.harness.FileDigest:getText,local1,87,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,27,<>> = <<org.sunflow.image.Color:getAverage,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getPrimitiveBound,local1,8,<>> = <<org.sunflow.core.primitive.TriangleMesh:getPrimitiveBound,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,166,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,166,<null>>,E,E>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,11,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,11,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getOptionProperties,local1,121,<>> = <<org.apache.commons.cli.CommandLine:getOptionProperties,local1,121,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,16,<>> = <<java.lang.String:endsWith,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,108,<>> = <<org.sunflow.math.QMC:clinit,local1,108,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipStream,local1,38,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,170,<>> = <<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,local1,38,<>> = <<org.sunflow.SunflowAPI:options,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,local1,8,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setClass,parmtr,1,<>> = <<org.dacapo.parser.Config:setClass,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,175,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,175,<null>>,E,E>;
<org.sunflow.core.ParameterList:getIntArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getIntArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,51,<>> = <<org.apache.commons.cli.Option:clone,local1,51,<null>>,D,D>;
<org.apache.commons.cli.Option:getValue,retrn,6,<>> = <<org.apache.commons.cli.Option:getValue,retrn,6,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,parmtr,4,<>> = <<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,argmnt,4,<null>>,D,D>;<<org.sunflow.core.IntersectionState:setIntersection,argmnt,1,<null>>,D,D>;<<org.sunflow.core.IntersectionState:getRobustStack,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,42,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,804,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,804,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,3,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceFinalGather,retrn,42,<>> = <<org.sunflow.core.LightServer:traceFinalGather,retrn,42,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,936,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,936,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,85,<>> = <<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupGeometry,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:stopIteration,local1,37,<>> = <<org.dacapo.harness.Benchmark:stopIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:revertClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,parmtr,2,<>> = <<org.sunflow.core.ParameterList:isValidParameter,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Scene:init,local1,30,<>> = <<org.sunflow.core.Scene:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,parmtr,1,<>> = <<org.sunflow.Benchmark:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$2200,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$2200,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:size,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,161,<>> = <<org.sunflow.Benchmark:init,local1,161,<null>>,D,D>;
<org.dacapo.parser.Config:isTextFile,local1,10,<>> = <<org.dacapo.parser.Config:isTextFile,local1,10,<null>>,D,D>;
<org.dacapo.parser.Config:isKept,parmtr,2,<>> = <<org.dacapo.parser.Config:isKept,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,5,<>> = <<java.security.MessageDigest:update,argmnt,1,<null>>,D,D>;<<java.security.MessageDigest:digest,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,483,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,124,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addColor,local1,6,<>> = <<org.sunflow.core.ParameterList:addColor,local1,6,<null>>,E,E>;
<org.sunflow.system.UI$Module:clinit,local1,28,<>> = <<org.sunflow.system.UI$Module:clinit,local1,28,<null>>,E,E>;
<org.codehaus.janino.Scanner$ScanException:init,parmtr,3,<>> = <<org.codehaus.janino.Scanner$ScanException:init,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,4,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,4,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,13,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,162,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,162,<null>>,E,E>;
<org.dacapo.parser.Config:hasLines,parmtr,3,<>> = <<org.dacapo.parser.Config:hasLines,argmnt,3,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,local1,11,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addInteger,parmtr,2,<>> = <<org.sunflow.core.ParameterList:addInteger,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:radix12,parmtr,2,<>> = <<org.sunflow.core.accel.KDTree:radix12,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:makeOption,local1,12,<>> = <<org.dacapo.harness.CommandLineArgs:makeOption,local1,12,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,200,<>> = <<org.dacapo.harness.TestHarness:main,local1,200,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,70,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,70,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:print,parmtr,3,<>> = <<org.sunflow.system.ui.ConsoleInterface:print,argmnt,3,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:getCause,parmtr,1,<>> = <<org.codehaus.janino.util.CausedException:getCause,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:getCause,callback,1,<null>>,D,D>;
<org.dacapo.parser.Config:main,parmtr,2,<>> = <<org.dacapo.parser.Config:main,argmnt,2,<null>>,D,D>;
<org.sunflow.core.filter.FilterFactory:get,retrn,82,<>> = <<org.sunflow.core.filter.BlackmanHarrisFilter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.filter.FilterFactory:get,retrn,82,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,100,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getFloatArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloatParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:access$008,parmtr,2,<>> = <<org.sunflow.core.LightServer:access$008,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config$OutputFile:hasLines,parmtr,1,<>> = <<org.dacapo.parser.Config$OutputFile:hasLines,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,5348,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,5348,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,parmtr,6,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,argmnt,6,<null>>,D,D>;
<org.sunflow.core.ShadingState:getLightServer,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getLightServer,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,336,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,147,<>> = <<org.dacapo.harness.FileDigest:main,local1,147,<null>>,E,E>;
<org.sunflow.core.bucket.BucketOrderFactory:create,local1,173,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,local1,173,<null>>,E,E>;
<org.sunflow.core.ShadingState:traceRefractionPhoton,local1,22,<>> = <<org.sunflow.core.ShadingState:traceRefractionPhoton,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadFactor,local1,55,<>> = <<org.dacapo.parser.Config:setThreadFactor,local1,55,<null>>,E,E>;
<org.sunflow.math.Matrix4:inverse,retrn,304,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:inverse,retrn,304,<null>>,D,D>;
<org.dacapo.parser.Config:setLines,parmtr,1,<>> = <<org.dacapo.parser.Config:setLines,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,78,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,119,<>> = <<org.sunflow.SunflowAPI:create,local1,119,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getExtents,local1,10,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,69,<>> = <<org.sunflow.SunflowAPI:render,local1,69,<null>>,D,D>;
<org.sunflow.util.FastHashMap:get,local1,48,<>> = <<org.sunflow.util.FastHashMap:get,local1,48,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getArgList,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getArgList,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,356,<>> = <<org.sunflow.core.LightServer:build,local1,356,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,1,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,1,<null>>,E,E>;
<org.dacapo.harness.Digest:create,local1,1,<>> = <<org.dacapo.harness.Digest:create,local1,1,<null>>,E,E>;
<org.sunflow.system.UI:formatOutput,parmtr,4,<>> = <<org.sunflow.system.UI:formatOutput,argmnt,4,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,349,<>> = <<org.sunflow.core.Scene:render,local1,349,<null>>,E,E>;
<org.sunflow.image.Color:mul,retrn,1,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,retrn,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,460,<>> = <<org.sunflow.core.LightServer:build,local1,460,<null>>,D,D>;
<org.dacapo.parser.Config:addOutputFile,parmtr,2,<>> = <<org.dacapo.parser.Config:addOutputFile,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:isTextFile,parmtr,1,<>> = <<org.dacapo.parser.Config:isTextFile,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.ParseException:init,parmtr,2,<>> = <<org.apache.commons.cli.ParseException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,parmtr,2,<>> = <<org.sunflow.core.gi.InstantGI:init,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloat,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,335,<>> = <<org.dacapo.harness.Callback:runAgain,local1,335,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,340,<>> = <<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,484,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,59,<>> = <<org.sunflow.SunflowAPI:compile,local1,59,<null>>,D,D>;
<org.sunflow.core.Scene:render,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:render,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getBoolean,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,50,<>> = <<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$800,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$800,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark:print,local1,23,<>> = <<org.sunflow.Benchmark:print,local1,23,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,97,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,97,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,parmtr,10,<>> = <<org.sunflow.core.accel.KDTree:buildTree,argmnt,10,<null>>,D,D>;<<org.sunflow.util.IntArray:add,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:set,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,35,<>> = <<org.sunflow.util.FastHashMap:resize,local1,35,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,301,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflection,parmtr,1,<>> = <<org.sunflow.core.LightServer:traceReflection,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadeHit,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parse,local1,154,<>> = <<org.sunflow.SunflowAPI:parse,local1,154,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,113,<>> = <<org.sunflow.SunflowAPI:create,local1,113,<null>>,E,E>;
<org.sunflow.math.QMC:clinit,local1,114,<>> = <<org.sunflow.math.QMC:clinit,local1,114,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getDebug,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getDebug,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,835,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,444,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,444,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1000,retrn,3,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1000,retrn,3,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:init,parmtr,1,<>> = <<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:update,parmtr,1,<>> = <<org.sunflow.core.shader.GlassShader:update,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:configOption,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:configOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:libraries,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:threadModel,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:identifier,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,476,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,476,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,local1,19,<>> = <<org.sunflow.core.gi.InstantGI$PointLight:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.IntersectionState:setIntersection,parmtr,1,<>> = <<org.sunflow.core.IntersectionState:setIntersection,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:init,parmtr,1,<>> = <<org.sunflow.core.shader.MirrorShader:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descId,retrn,281,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:descId,retrn,281,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:descId,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,38,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,38,<null>>,D,D>;
<org.sunflow.core.Instance:getShader,parmtr,1,<>> = <<org.sunflow.core.Instance:getShader,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printUsage,local1,13,<>> = <<org.dacapo.harness.CommandLineArgs:printUsage,local1,13,<null>>,E,E>;
<org.sunflow.core.LightServer:traceRefractionPhoton,parmtr,3,<>> = <<org.sunflow.core.LightServer:traceRefractionPhoton,argmnt,3,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:access$300,parmtr,2,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:access$300,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,retrn,13,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getCamera,retrn,13,<null>>,D,D>;
<org.sunflow.core.gi.GIEngineFactory:create,local1,9,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,local1,4,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,local1,4,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,100,<>> = <<org.dacapo.harness.FileDigest:getText,local1,100,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,105,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,34,<>> = <<org.sunflow.SunflowAPI:camera,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformPY,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformPY,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processArgs,parmtr,2,<>> = <<org.apache.commons.cli.Parser:processArgs,argmnt,2,<null>>,D,D>;<<org.apache.commons.cli.Option:getValues,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasOptionalArg,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:addValueForProcessing,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,789,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,789,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,787,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,787,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$4200,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$4200,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$4200,retrn,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa3_0,local1,21,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa3_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,229,<>> = <<org.sunflow.core.LightServer:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:calculatePhotons,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,99,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,99,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,3,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:getAverage,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setTextFile,local1,7,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addStringArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addStringArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_3,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_2,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_1,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:SkipLexicalActions,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_0,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,parmtr,1,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,169,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,169,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,24,<>> = <<org.sunflow.core.Geometry:tesselate,local1,24,<null>>,E,E>;
<org.apache.commons.cli.Option:toString,local1,90,<>> = <<org.apache.commons.cli.Option:hasArgs,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasArg,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:toString,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:toString,callback,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,111,<>> = <<java.awt.image.BufferedImage:getRGB,argmnt,1,<null>>,D,D>;<<java.awt.image.BufferedImage:getHeight,argmnt,1,<null>>,D,D>;<<java.awt.image.BufferedImage:getWidth,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:getUniqueName,parmtr,2,<>> = <<org.sunflow.SunflowAPI:getUniqueName,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefractionPhoton,parmtr,1,<>> = <<org.sunflow.core.LightServer:traceRefractionPhoton,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:shadePhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,local1,17,<>> = <<org.sunflow.SunflowAPI:shader,local1,17,<null>>,E,E>;
<org.apache.commons.cli.UnrecognizedOptionException:init,parmtr,2,<>> = <<org.apache.commons.cli.UnrecognizedOptionException:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,56,<>> = <<org.dacapo.harness.Sunflow:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,718,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,718,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:access$1000,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:getStrings,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:access$1000,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:access$200,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$200,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getCorner,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:getCorner,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,65,<>> = <<org.dacapo.harness.Callback:runAgain,local1,65,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_3,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_3,local1,1,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,224,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,1968,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,1968,<null>>,E,E>;
<org.codehaus.janino.util.LocatedException:getMessage,local1,39,<>> = <<org.codehaus.janino.util.LocatedException:getMessage,local1,39,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:getNextToken,retrn,6,<>> = <<org.dacapo.parser.ConfigFile:getNextToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getNextToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:getNextToken,retrn,6,<null>>,D,D>;
<org.sunflow.core.Ray:init,parmtr,2,<>> = <<org.sunflow.core.Ray:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,548,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,150,<>> = <<org.sunflow.system.UI$Module:clinit,local1,150,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildTask:init,parmtr,3,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,24,<>> = <<java.lang.String:length,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,200,<>> = <<org.dacapo.harness.Benchmark:validate,local1,200,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:init,local1,64,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,64,<null>>,D,D>;
<org.sunflow.math.Matrix4:clinit,local1,13,<>> = <<org.sunflow.math.Matrix4:clinit,local1,13,<null>>,E,E>;
<org.apache.commons.cli.Option:init,parmtr,4,<>> = <<org.apache.commons.cli.Option:init,argmnt,4,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,retrn,7,<>> = <<org.apache.commons.cli.Parser:parse,retrn,7,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,394,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Timer:toString,local1,2,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,local1,17,<>> = <<org.apache.commons.cli.Option:toString,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:toString,callback,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:createFinalGatherState,retrn,2,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createFinalGatherState,retrn,2,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,149,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,149,<null>>,D,D>;
<org.sunflow.core.ParameterList:getIntArray,local1,19,<>> = <<org.sunflow.core.ParameterList:getIntArray,local1,19,<null>>,E,E>;
<org.sunflow.util.IntArray:get,local1,3,<>> = <<org.sunflow.util.IntArray:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,149,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Ray:setMax,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,515,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getExtents,local1,7,<>> = <<org.sunflow.math.BoundingBox:getExtents,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,358,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,358,<null>>,E,E>;
<org.sunflow.util.FastHashMap:put,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,97,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,argmnt,3,<null>>,D,D>;
<org.apache.commons.cli.Option:hasNoValues,parmtr,1,<>> = <<org.apache.commons.cli.Option:hasNoValues,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeSpec,local1,15,<>> = <<org.dacapo.parser.ConfigFile:sizeSpec,local1,15,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,115,<>> = <<org.sunflow.core.accel.KDTree:build,local1,115,<null>>,E,E>;
<org.sunflow.SunflowAPI:create,local1,57,<>> = <<org.sunflow.SunflowAPI:create,local1,57,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,119,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,local1,119,<null>>,D,D>;
<org.sunflow.core.ShadingState:getGeoNormal,retrn,3,<>> = <<org.sunflow.core.ShadingState:getGeoNormal,retrn,3,<null>>,D,D>;<<org.sunflow.core.ShadingState:getGeoNormal,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,289,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,289,<null>>,E,E>;
<Harness:main,local1,35,<>> = <<java.lang.reflect.Method:invoke,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:hasGeometry,parmtr,1,<>> = <<org.sunflow.core.Instance:hasGeometry,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:getOutputs,parmtr,2,<>> = <<org.dacapo.parser.Config:getOutputs,argmnt,2,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,retrn,45,<>> = <<org.codehaus.janino.util.LocatedException:getMessage,retrn,45,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,257,<>> = <<org.sunflow.core.accel.KDTree:buildTree,argmnt,8,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,36,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,36,<null>>,E,E>;
<org.sunflow.system.UI:taskUpdate,local1,2,<>> = <<org.sunflow.system.UI:taskUpdate,local1,2,<null>>,E,E>;
<org.sunflow.util.FastHashMap:resize,local1,137,<>> = <<org.sunflow.util.FastHashMap:resize,local1,137,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,172,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Solvers:solveQuartic,retrn,466,<>> = <<org.sunflow.math.Solvers:solveQuartic,retrn,466,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,local1,33,<>> = <<org.sunflow.core.ParameterList:add,local1,33,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,25,<>> = <<org.sunflow.core.light.TriangleMeshLight:init,local1,25,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,56,<>> = <<org.sunflow.math.QMC:clinit,local1,56,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,510,<>> = <<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:init,parmtr,1,<>> = <<org.sunflow.core.renderer.BucketRenderer:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,local1,1,<>> = <<org.codehaus.janino.util.CausedException:initCause,local1,1,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:build,local1,868,<>> = <<org.sunflow.core.accel.KDTree:build,local1,868,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildTask:init,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,79,<>> = <<org.dacapo.harness.Benchmark:extractFileResource,local1,79,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,local1,71,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,parmtr,1,<>> = <<org.dacapo.parser.Config:describeSizes,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describeSizes,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:addOption,local1,81,<>> = <<org.apache.commons.cli.Options:addOption,argmnt,1,<null>>,D,D>;<<java.util.Map:put,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,463,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,463,<null>>,E,E>;
<org.codehaus.janino.Scanner$ScanException:init,parmtr,2,<>> = <<org.codehaus.janino.Scanner$ScanException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.LocatedException:init,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.Scanner$ScanException:init,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,167,<>> = <<org.sunflow.image.RGBSpace:toString,local1,167,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,99,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,local1,32,<>> = <<java.lang.Object:getClass,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,callback,1,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,argmnt,1,<null>>,D,D>;<<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Options:update,parmtr,2,<>> = <<org.sunflow.core.Options:update,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getTabSize,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:getTabSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:createNode,parmtr,2,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:createNode,argmnt,2,<null>>,D,D>;<<org.sunflow.util.IntArray:set,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,local1,60,<>> = <<org.sunflow.math.Matrix4:transform,local1,60,<null>>,D,D>;
<org.sunflow.core.Geometry:intersect,local1,25,<>> = <<org.sunflow.core.AccelerationStructure:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:tesselate,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:build,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:correctShadingNormal,local1,27,<>> = <<org.sunflow.core.ShadingState:correctShadingNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.math.OrthoNormalBasis:flipW,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatArray,local1,4,<>> = <<org.sunflow.core.ParameterList:getFloatArray,local1,4,<null>>,E,E>;
<org.sunflow.math.Matrix4:clinit,local1,2,<>> = <<org.sunflow.math.Matrix4:clinit,local1,2,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,274,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,274,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa2_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa2_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa3_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,147,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addColor,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addColor,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,8,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:GetImage,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:getEndLine,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:getEndColumn,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:BeginToken,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:backup,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,64,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,14,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,14,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:getCause,retrn,3,<>> = <<org.codehaus.janino.util.CausedException:getCause,retrn,3,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:getCause,callback,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:getCause,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,33,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,33,<null>>,E,E>;
<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,9,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:progressiveRenderNext,local1,9,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,parmtr,2,<>> = <<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;<<org.sunflow.core.gi.InstantGI$PointLightStore:store,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,local1,13,<>> = <<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetSuffix,retrn,3,<>> = <<org.dacapo.parser.SimpleCharStream:GetSuffix,retrn,3,<null>>,D,D>;
<org.dacapo.harness.FileDigest:get,parmtr,5,<>> = <<org.dacapo.harness.FileDigest:get,argmnt,5,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,9,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$300,retrn,4,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$300,retrn,4,<null>>,D,D>;
<org.sunflow.core.Camera:update,parmtr,2,<>> = <<org.sunflow.core.Camera:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,11,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$2700,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$2700,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$2700,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,59,<>> = <<org.dacapo.harness.TestHarness:main,local1,59,<null>>,E,E>;
<org.sunflow.math.Vector3:normalizeLength,parmtr,1,<>> = <<org.sunflow.math.Vector3:normalizeLength,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,721,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,371,<>> = <<org.sunflow.image.RGBSpace:toString,local1,371,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,56,<>> = <<org.sunflow.core.Geometry:tesselate,local1,56,<null>>,E,E>;
<org.dacapo.harness.TestHarness:isValidSize,parmtr,1,<>> = <<org.dacapo.harness.TestHarness:isValidSize,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,local1,1,<null>>,E,E>;
<org.sunflow.RenderObjectMap:lookupCamera,local1,13,<>> = <<org.sunflow.RenderObjectMap:lookupCamera,local1,13,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,11,<>> = <<org.sunflow.core.primitive.TriangleMesh$1:clinit,local1,11,<null>>,E,E>;
<org.dacapo.harness.Callback:start,local1,96,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,30,<>> = <<org.sunflow.math.QMC:clinit,local1,30,<null>>,E,E>;
<org.codehaus.janino.util.CausedException:clinit,local1,16,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,16,<null>>,E,E>;
<org.sunflow.util.FastHashMap:resize,local1,146,<>> = <<org.sunflow.util.FastHashMap:resize,local1,146,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,77,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:init,parmtr,3,<>> = <<org.codehaus.janino.util.CausedException:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,182,<>> = <<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,182,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,139,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,139,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:traceReflection,parmtr,3,<>> = <<org.sunflow.core.LightServer:traceReflection,argmnt,3,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:init,parmtr,1,<>> = <<org.sunflow.core.tesselatable.BezierMesh:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,965,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,965,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,172,<>> = <<org.dacapo.harness.FileDigest:main,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoord,local1,19,<>> = <<org.sunflow.core.ParameterList:getTexCoord,local1,19,<null>>,E,E>;
<org.sunflow.core.LightServer:traceReflection,retrn,55,<>> = <<org.sunflow.core.LightServer:traceReflection,retrn,55,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,192,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,192,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,1,<>> = <<org.sunflow.core.accel.KDTree:build,local1,1,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:addOption,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:addOption,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getValues,local1,26,<>> = <<org.apache.commons.cli.Option:getValues,local1,26,<null>>,D,D>;
<org.sunflow.core.Instance:getShader,local1,3,<>> = <<org.sunflow.core.Instance:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,152,<>> = <<org.sunflow.system.SearchPath:addSearchPath,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,523,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,46,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,46,<null>>,E,E>;
<org.sunflow.core.ParameterList$ParameterType:valueOf,retrn,5,<>> = <<org.sunflow.core.ParameterList$ParameterType:valueOf,retrn,5,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,24,<>> = <<org.sunflow.RenderObjectMap:remove,local1,24,<null>>,D,D>;
<org.sunflow.SunflowAPI:modifier,local1,17,<>> = <<org.sunflow.SunflowAPI:modifier,local1,17,<null>>,E,E>;
<org.sunflow.core.Instance:update,local1,25,<>> = <<org.sunflow.core.Instance:update,local1,25,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,561,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,561,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,40,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:isAbsolute,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:getNumPrimitives,local1,3,<>> = <<org.sunflow.core.Instance:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getMinimum,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:getMinimum,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,local1,2,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,582,<>> = <<org.sunflow.core.accel.KDTree:build,local1,582,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,12,<>> = <<org.dacapo.parser.ConfigFile:main,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Ray:getDirection,parmtr,1,<>> = <<org.sunflow.core.Ray:getDirection,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:processOptionToken,parmtr,1,<>> = <<org.apache.commons.cli.PosixParser:processOptionToken,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,714,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,53,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,53,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,100,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,100,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,5,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,local1,5,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,78,<>> = <<java.lang.Iterable:iterator,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,662,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,662,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,241,<>> = <<org.sunflow.system.UI$Module:clinit,local1,241,<null>>,E,E>;
<org.sunflow.core.ShadingState:getWorldToCamera,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getWorldToCamera,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,5,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:init,parmtr,1,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:closeLog,local1,1,<>> = <<org.dacapo.harness.TeeOutputStream:closeLog,local1,1,<null>>,E,E>;
<org.sunflow.system.Timer:toString,local1,103,<>> = <<org.sunflow.system.Timer:toString,local1,103,<null>>,D,D>;
<org.sunflow.core.ParameterList:addVectors,local1,36,<>> = <<org.sunflow.core.ParameterList:addVectors,local1,36,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getIterations,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getIterations,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,68,<>> = <<java.util.List:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,328,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,328,<null>>,E,E>;
<org.sunflow.core.ParameterList:getMatrix,retrn,31,<>> = <<org.sunflow.core.ParameterList:getMatrix,retrn,31,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteFile,local1,30,<>> = <<org.dacapo.harness.Benchmark:deleteFile,local1,30,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,12,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,12,<null>>,D,D>;
<org.dacapo.harness.Benchmark:getURL,retrn,13,<>> = <<org.dacapo.harness.Benchmark:getURL,retrn,13,<null>>,D,D>;
<org.dacapo.parser.Config:setDigest,parmtr,1,<>> = <<org.dacapo.parser.Config:setDigest,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,37,<>> = <<org.sunflow.RenderObjectMap:remove,local1,37,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,518,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,518,<null>>,E,E>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,90,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,90,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,parmtr,1,<>> = <<org.sunflow.core.shader.MirrorShader:scatterPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getColor,local1,16,<>> = <<org.sunflow.core.ParameterList:getColor,local1,16,<null>>,E,E>;
<org.sunflow.math.Vector3:mul,retrn,3,<>> = <<org.sunflow.math.Vector3:mul,argmnt,3,<null>>,D,D>;<<org.sunflow.math.Vector3:mul,retrn,3,<null>>,D,D>;
<org.dacapo.parser.Config:parse,parmtr,2,<>> = <<org.dacapo.parser.Config:parse,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ShadingState:getCameraToWorld,local1,12,<>> = <<org.sunflow.core.Camera:getCameraToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,738,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,738,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:init,local1,66,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,4,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,4,<null>>,D,D>;<<java.lang.String:toUpperCase,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:add,parmtr,2,<>> = <<org.sunflow.math.Point3:add,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,parmtr,2,<>> = <<org.sunflow.math.Matrix4:transformPZ,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformPY,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getWorldBounds,argmnt,2,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformPX,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:init,parmtr,1,<>> = <<org.sunflow.SunflowAPI:init,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,317,<>> = <<org.dacapo.parser.Config:print,local1,317,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,151,<>> = <<org.sunflow.math.QMC:clinit,local1,151,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,78,<>> = <<org.dacapo.parser.ConfigFile:main,local1,78,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:processNonOptionToken,parmtr,2,<>> = <<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,61,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addVectors,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addVectors,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:getBounds,local1,3,<>> = <<org.sunflow.SunflowAPI:getBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,3,<>> = <<org.sunflow.core.ShadingState:occlusion,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa8_0,local1,22,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa8_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:config,local1,21,<>> = <<org.dacapo.parser.ConfigFile:config,local1,21,<null>>,D,D>;
<org.dacapo.parser.Config:getLines,parmtr,2,<>> = <<org.dacapo.parser.Config:getLines,argmnt,2,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,160,<>> = <<org.sunflow.core.renderer.BucketRenderer:render,local1,160,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,3,<>> = <<org.dacapo.parser.Config:describe,argmnt,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,39,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,39,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,local1,18,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,64,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,64,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,parmtr,2,<>> = <<org.dacapo.harness.TestHarness:main,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,20,<>> = <<org.dacapo.harness.Benchmark:preIteration,local1,20,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,local1,16,<>> = <<org.codehaus.janino.util.CausedException:initCause,local1,16,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,parmtr,1,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:clinit,local1,45,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,45,<null>>,E,E>;
<org.sunflow.core.ShadingState:createReflectionBounceState,retrn,2,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createReflectionBounceState,retrn,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:values,retrn,5,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:values,retrn,5,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,193,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,193,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:unHex,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:unHex,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:setCurrentFrame,parmtr,1,<>> = <<org.sunflow.SunflowAPI:setCurrentFrame,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.NullAccelerator:intersect,parmtr,2,<>> = <<org.sunflow.core.accel.NullAccelerator:intersect,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,46,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,46,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,222,<>> = <<org.dacapo.harness.Benchmark:validate,local1,222,<null>>,E,E>;
<org.sunflow.core.Camera:getCameraToWorld,retrn,20,<>> = <<org.sunflow.core.Camera:getCameraToWorld,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:getCameraToWorld,retrn,20,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getTimeoutDialation,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getTimeoutDialation,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,226,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,226,<null>>,D,D>;
<org.sunflow.SunflowAPI:resolveTextureFilename,parmtr,2,<>> = <<org.sunflow.SunflowAPI:resolveTextureFilename,argmnt,2,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,156,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3200,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3200,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3200,argmnt,2,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,482,<>> = <<org.sunflow.core.Instance:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:GetSuffix,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:GetSuffix,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,32,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoord,local1,16,<>> = <<org.sunflow.core.ParameterList:getTexCoord,local1,16,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,161,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,224,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,224,<null>>,E,E>;
<org.sunflow.util.FastHashMap$Entry:getKey,retrn,3,<>> = <<org.sunflow.util.FastHashMap$Entry:getKey,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$Entry:getKey,retrn,3,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:hasOption,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:hasOption,argmnt,2,<null>>,D,D>;
<org.sunflow.core.InstanceList:init,local1,8,<>> = <<org.sunflow.core.InstanceList:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:setRadiance,parmtr,1,<>> = <<org.sunflow.core.LightSample:setRadiance,argmnt,1,<null>>,D,D>;
<Harness:main,retrn,6,<>> = <<java.lang.Thread:setContextClassLoader,argmnt,1,<null>>,D,D>;<<Harness:main,retrn,6,<null>>,D,D>;<<Harness:main,retrn,6,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$300,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$300,argmnt,2,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,213,<>> = <<org.sunflow.core.LightServer:showStats,local1,213,<null>>,D,D>;
<org.sunflow.system.UI$Module:values,local1,2,<>> = <<org.sunflow.system.UI$Module:values,local1,2,<null>>,E,E>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,53,<>> = <<org.apache.commons.cli.OptionValidator:validateOption,local1,53,<null>>,D,D>;
<org.sunflow.core.Instance:removeModifier,parmtr,1,<>> = <<org.sunflow.core.Instance:removeModifier,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:setArgs,parmtr,1,<>> = <<org.apache.commons.cli.Option:setArgs,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,312,<>> = <<org.sunflow.core.Ray:getMax,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ReInit,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,local1,36,<>> = <<org.dacapo.parser.Config:preprocessArgs,local1,36,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,1,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,1,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getValidateOutput,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getValidateOutput,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,44,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:preprocessArgs,local1,53,<>> = <<org.dacapo.parser.Config:preprocessArgs,local1,53,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeSpec,parmtr,2,<>> = <<org.dacapo.parser.ConfigFile:sizeSpec,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,local1,9,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:replaceAllFixed,local1,53,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,local1,49,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Util:stripLeadingHyphens,retrn,42,<>> = <<org.apache.commons.cli.Util:stripLeadingHyphens,retrn,42,<null>>,D,D>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,103,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,local1,103,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa6_0,local1,21,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa6_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefractionPhoton,parmtr,4,<>> = <<org.sunflow.core.LightServer:traceRefractionPhoton,argmnt,4,<null>>,D,D>;
<org.sunflow.core.ParameterList:addBoolean,local1,4,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,439,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,439,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,74,<>> = <<org.dacapo.harness.FileDigest:getText,local1,74,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,67,<>> = <<org.sunflow.system.UI$Module:clinit,local1,67,<null>>,E,E>;
<org.sunflow.image.Color:mul,retrn,1,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:mul,retrn,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,693,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,693,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:main,local1,6,<>> = <<java.io.FileInputStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,local1,29,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,parmtr,2,<>> = <<org.dacapo.harness.Benchmark:extractFileResource,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Options:init,local1,7,<>> = <<org.apache.commons.cli.Options:init,argmnt,1,<null>>,D,D>;<<java.util.HashMap:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,19,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:init,local1,19,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,local1,23,<>> = <<org.sunflow.SunflowAPI:shader,local1,23,<null>>,D,D>;
<org.sunflow.core.ParameterList:addVectors,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addVectors,argmnt,3,<null>>,D,D>;
<org.sunflow.core.LightServer:initCausticSamples,parmtr,1,<>> = <<org.sunflow.core.LightServer:initCausticSamples,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:fromBasis,local1,54,<>> = <<org.sunflow.math.Matrix4:fromBasis,local1,54,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:intersect,local1,684,<>> = <<org.sunflow.core.accel.KDTree:intersect,local1,684,<null>>,D,D>;
<org.sunflow.core.ShadingState:faceforward,parmtr,1,<>> = <<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,508,<>> = <<org.sunflow.core.LightServer:build,local1,508,<null>>,D,D>;
<org.apache.commons.cli.Option:getOpt,retrn,3,<>> = <<org.apache.commons.cli.Option:getOpt,retrn,3,<null>>,D,D>;<<org.apache.commons.cli.Option:getOpt,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,376,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,345,<>> = <<java.util.List:isEmpty,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getBeginColumn,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:getBeginColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,254,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:update,local1,10,<>> = <<org.sunflow.core.shader.DiffuseShader:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:intersect,local1,4,<>> = <<org.sunflow.core.Instance:intersect,argmnt,3,<null>>,D,D>;<<org.sunflow.core.Instance:intersect,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:getDiffuseRadiance,retrn,3,<>> = <<org.sunflow.core.LightSample:getDiffuseRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:getDiffuseRadiance,retrn,3,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,341,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,local1,50,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,local1,50,<null>>,D,D>;
<org.sunflow.math.Solvers:solveQuadric,retrn,97,<>> = <<org.sunflow.math.Solvers:solveQuadric,retrn,97,<null>>,D,D>;
<org.dacapo.parser.Config:pad,local1,10,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:startIteration,local1,8,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,8,<null>>,E,E>;
<org.sunflow.util.FastHashMap:put,parmtr,2,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,2,<null>>,D,D>;<<java.lang.Object:hashCode,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,275,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,275,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,retrn,2,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,retrn,2,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,387,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getPoint,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,218,<>> = <<org.dacapo.harness.TestHarness:main,local1,218,<null>>,E,E>;
<org.dacapo.parser.Config:getSizes,local1,6,<>> = <<org.dacapo.parser.Config:getSizes,local1,6,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,1,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,336,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatArray,local1,8,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloatArray,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,516,<>> = <<org.sunflow.image.Bitmap:setPixel,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Bitmap:init,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Bitmap:save,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:init,parmtr,1,<>> = <<org.sunflow.system.SearchPath:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:unHex,local1,7,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:init,parmtr,1,<>> = <<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:ungammaCorrect,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:ungammaCorrect,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,local1,28,<>> = <<org.sunflow.core.IntersectionState:hit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,local1,39,<>> = <<org.sunflow.core.ParameterList:add,local1,39,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,182,<>> = <<org.sunflow.core.LightServer:showStats,local1,182,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,local1,33,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:sampled,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI:printInfo,local1,18,<>> = <<org.sunflow.system.UI:printInfo,local1,18,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceRefractionPhoton,parmtr,1,<>> = <<org.sunflow.core.ShadingState:traceRefractionPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:copy,retrn,2,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:copy,retrn,2,<null>>,D,D>;
<org.dacapo.parser.Config$Size:getOutputFile,local1,3,<>> = <<org.dacapo.parser.Config$Size:getOutputFile,argmnt,1,<null>>,D,D>;<<java.util.HashMap:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:init,local1,18,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$FloatParameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,616,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,616,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,205,<>> = <<org.dacapo.parser.ParseException:initialise,local1,205,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,retrn,77,<>> = <<org.sunflow.core.ParameterList$Parameter:toString,retrn,77,<null>>,D,D>;
<org.sunflow.core.LightServer:getIrradiance,parmtr,1,<>> = <<org.sunflow.core.LightServer:getIrradiance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,765,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,68,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,parmtr,1,<>> = <<org.sunflow.core.LightServer:showStats,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:iterator,local1,7,<>> = <<org.sunflow.core.ShadingState:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:iterator,callback,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,71,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,71,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,480,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,187,<>> = <<org.dacapo.harness.Benchmark:initialize,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:prepareJars,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:fileInScratch,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,parmtr,5,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,5,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,321,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,321,<null>>,D,D>;
<org.apache.commons.cli.Parser:checkRequiredOptions,local1,3,<>> = <<java.util.List:isEmpty,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,216,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,216,<null>>,E,E>;
<org.dacapo.harness.Benchmark:prepare,local1,18,<>> = <<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,108,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,108,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,186,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,parmtr,4,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,argmnt,4,<null>>,D,D>;<<org.sunflow.core.IntersectionState:setIntersection,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:init,local1,24,<>> = <<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:getRGB,parmtr,1,<>> = <<org.sunflow.image.Color:getRGB,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:update,local1,7,<>> = <<org.sunflow.core.light.TriangleMeshLight:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,552,<>> = <<org.sunflow.core.Scene:render,local1,552,<null>>,D,D>;
<org.sunflow.util.FastHashMap:init,parmtr,1,<>> = <<org.sunflow.util.FastHashMap:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersect,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:intersect,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:prepare,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getScratchDir,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getScratchDir,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getText,local1,10,<>> = <<java.io.FileReader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,53,<>> = <<org.sunflow.SunflowAPI:compile,local1,53,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,102,<>> = <<org.sunflow.image.RGBSpace:toString,local1,102,<null>>,D,D>;
<org.sunflow.core.ShadingState:isBehind,parmtr,1,<>> = <<org.sunflow.core.ShadingState:isBehind,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:sub,retrn,4,<>> = <<org.sunflow.math.Vector3:sub,argmnt,4,<null>>,D,D>;<<org.sunflow.math.Vector3:sub,retrn,4,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:getRadiance,retrn,31,<>> = <<org.sunflow.core.light.TriangleMeshLight:getRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:getRadiance,retrn,31,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteFile,local1,20,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,132,<>> = <<java.lang.Object:equals,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeClause,local1,2,<>> = <<java.util.Vector:init,argmnt,1,<null>>,D,D>;<<java.util.Vector:add,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,29,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa10_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa10_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa11_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,930,<>> = <<org.sunflow.core.accel.KDTree:build,local1,930,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,local1,165,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,local1,165,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:GetSuffix,local1,38,<>> = <<org.dacapo.parser.SimpleCharStream:GetSuffix,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:main,local1,161,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:updateScene,local1,32,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeBakeResult,local1,27,<>> = <<org.sunflow.core.LightServer:shadeBakeResult,local1,27,<null>>,E,E>;
<org.dacapo.harness.FileDigest:main,local1,96,<>> = <<org.dacapo.harness.FileDigest:main,local1,96,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupInstance,retrn,7,<>> = <<org.sunflow.SunflowAPI:lookupInstance,retrn,7,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:getDiffuse,parmtr,2,<>> = <<org.sunflow.core.shader.DiffuseShader:getDiffuse,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,575,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,29,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,29,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,88,<>> = <<org.dacapo.harness.Benchmark:validate,local1,88,<null>>,D,D>;
<org.sunflow.image.RGBSpace:main,local1,26,<>> = <<org.sunflow.image.RGBSpace:main,local1,26,<null>>,E,E>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getNumSamples,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getNumSamples,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,1,<>> = <<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:describe,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasLines,local1,10,<>> = <<org.dacapo.parser.Config$OutputFile:hasLines,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,201,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getPhoton,local1,201,<null>>,D,D>;
<org.sunflow.image.Color:toString,local1,14,<>> = <<org.sunflow.image.Color:toString,local1,14,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,926,<>> = <<org.sunflow.core.accel.KDTree:build,local1,926,<null>>,D,D>;
<org.sunflow.core.IntersectionState:getStackTop,parmtr,1,<>> = <<org.sunflow.core.IntersectionState:getStackTop,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:main,local1,171,<>> = <<org.sunflow.Benchmark:main,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,26,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,173,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,173,<null>>,E,E>;
<org.sunflow.core.Scene:traceShadow,local1,15,<>> = <<org.sunflow.core.Scene:traceShadow,local1,15,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:init,local1,45,<>> = <<org.sunflow.Benchmark$BenchmarkScene:init,local1,45,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,60,<>> = <<org.sunflow.core.accel.NullAccelerator:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,60,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,23,<>> = <<org.sunflow.SunflowAPI:geometry,local1,23,<null>>,D,D>;
<org.dacapo.parser.Config:getOutputs,retrn,13,<>> = <<org.dacapo.parser.Config:getOutputs,retrn,13,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,local1,57,<>> = <<org.sunflow.math.Matrix4:transform,local1,57,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:refineSamples,local1,54,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:sampled,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,2,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,81,<>> = <<org.sunflow.image.Color:mul,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,246,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,246,<null>>,D,D>;
<org.sunflow.image.Color:mul,local1,4,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:main,local1,12,<>> = <<org.dacapo.parser.Config:main,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config$Size:getDesc,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:getDesc,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeHit,parmtr,1,<>> = <<org.sunflow.core.LightServer:shadeHit,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getShader,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:add,parmtr,3,<>> = <<org.sunflow.image.Color:add,argmnt,3,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:clinit,local1,37,<>> = <<org.codehaus.janino.util.CausedException:clinit,local1,37,<null>>,E,E>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,75,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,75,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:ReInit,local1,13,<>> = <<org.dacapo.parser.ConfigFile:ReInit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,45,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,306,<>> = <<org.sunflow.system.UI$Module:clinit,local1,306,<null>>,E,E>;
<org.dacapo.harness.Callback:init,local1,26,<>> = <<org.dacapo.harness.CommandLineArgs:getWindow,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getIterations,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Callback:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getMethodology,argmnt,1,<null>>,D,D>;
<org.sunflow.system.Timer:init,parmtr,1,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,retrn,1,<>> = <<org.codehaus.janino.util.CausedException:initCause,argmnt,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:initCause,retrn,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:initCause,callback,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,576,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,576,<null>>,D,D>;
<org.sunflow.core.LightServer:traceRefraction,parmtr,2,<>> = <<org.sunflow.core.LightServer:traceRefraction,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getRefractionDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getIntersectionState,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,parmtr,1,<>> = <<org.sunflow.SunflowAPI:options,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setBytes,parmtr,2,<>> = <<org.dacapo.parser.Config:setBytes,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:toString,local1,70,<>> = <<org.sunflow.math.BoundingBox:toString,local1,70,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,48,<>> = <<java.util.jar.Manifest:getMainAttributes,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,73,<>> = <<org.dacapo.harness.Benchmark:validate,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:getURL,local1,36,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,240,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,240,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,300,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,300,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,51,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,51,<null>>,D,D>;
<org.sunflow.SunflowAPI:update,local1,3,<>> = <<org.sunflow.RenderObjectMap:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:render,local1,41,<>> = <<org.sunflow.system.Timer:init,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:start,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:toString,argmnt,1,<null>>,D,D>;<<org.sunflow.system.Timer:end,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getVector,local1,7,<>> = <<org.sunflow.core.ParameterList:getVector,local1,7,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:valueOf,retrn,5,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:valueOf,retrn,5,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,58,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,58,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:ReInit,local1,58,<>> = <<org.dacapo.parser.SimpleCharStream:ReInit,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,767,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,767,<null>>,E,E>;
<org.dacapo.harness.Benchmark:validate,local1,888,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:faceforward,local1,3,<>> = <<org.sunflow.core.Ray:dot,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:faceforward,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,39,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,39,<null>>,E,E>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,306,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,306,<null>>,E,E>;
<org.sunflow.image.Color:copy,parmtr,1,<>> = <<org.sunflow.image.Color:copy,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:create,local1,100,<>> = <<org.dacapo.harness.DacapoClassLoader:create,local1,100,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,local1,58,<>> = <<org.dacapo.parser.ConfigFileTokenManager:MoreLexicalActions,local1,58,<null>>,D,D>;
<Harness:main,local1,24,<>> = <<Harness:main,local1,24,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransformX,local1,4,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformX,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_2,local1,4,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_2,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,98,<>> = <<org.dacapo.harness.Sunflow:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,745,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,745,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,167,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,167,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:update,local1,3,<>> = <<org.sunflow.core.RenderObject:update,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,72,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getModifier,retrn,3,<>> = <<org.sunflow.core.ShadingState:getModifier,retrn,3,<null>>,D,D>;<<org.sunflow.core.ShadingState:getModifier,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,599,<>> = <<org.sunflow.core.Scene:render,local1,599,<null>>,E,E>;
<org.dacapo.parser.Config:setThreadLimit,local1,16,<>> = <<org.dacapo.parser.Config:setThreadLimit,local1,16,<null>>,E,E>;
<org.sunflow.core.Instance:transformNormalWorldToObject,parmtr,1,<>> = <<org.sunflow.core.Instance:transformNormalWorldToObject,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:render,local1,81,<>> = <<org.sunflow.core.Scene:render,local1,81,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,10,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:isBlack,parmtr,1,<>> = <<org.sunflow.image.Color:isBlack,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:instance,parmtr,1,<>> = <<org.sunflow.SunflowAPI:instance,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:update,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState$LightSampleIterator:next,parmtr,1,<>> = <<org.sunflow.core.ShadingState$LightSampleIterator:next,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState$LightSampleIterator:next,callback,1,<null>>,D,D>;
<org.sunflow.core.Geometry:prepareShadingState,local1,3,<>> = <<org.sunflow.core.PrimitiveList:prepareShadingState,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,94,<>> = <<org.dacapo.harness.Sunflow:init,local1,94,<null>>,E,E>;
<org.sunflow.image.Color:clamp,retrn,1,<>> = <<org.sunflow.image.Color:clamp,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:clamp,retrn,1,<null>>,D,D>;
<org.sunflow.image.Color:div,parmtr,2,<>> = <<org.sunflow.image.Color:div,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config$Size:addOutputFile,parmtr,1,<>> = <<org.dacapo.parser.Config$Size:addOutputFile,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transform,retrn,9,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transform,retrn,9,<null>>,D,D>;
<org.apache.commons.cli.Option:add,local1,27,<>> = <<org.apache.commons.cli.Option:add,local1,27,<null>>,E,E>;
<org.sunflow.core.Geometry:update,parmtr,1,<>> = <<org.sunflow.core.Geometry:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildTask:init,parmtr,1,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformTransposeV,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformTransposeV,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,33,<>> = <<org.sunflow.core.LightServer:showStats,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasLines,parmtr,2,<>> = <<org.dacapo.parser.Config:hasLines,argmnt,2,<null>>,D,D>;
<org.sunflow.core.Instance:intersect,parmtr,1,<>> = <<org.sunflow.core.Instance:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:intersect,argmnt,3,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,29,<>> = <<org.sunflow.system.SearchPath:resolvePath,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:init,parmtr,1,<>> = <<org.dacapo.parser.TokenMgrError:init,argmnt,1,<null>>,D,D>;<<java.lang.Error:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,parmtr,4,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getPatchPoint,argmnt,4,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:init,local1,18,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,501,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,501,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,121,<>> = <<org.sunflow.math.QMC:clinit,local1,121,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:access$100,retrn,3,<>> = <<org.sunflow.core.renderer.BucketRenderer:access$100,retrn,3,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:access$100,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getIntArray,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getIntArray,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValue,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:addPoints,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addPoints,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,177,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,177,<null>>,E,E>;
<org.sunflow.core.Instance:prepareShadingState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:correctShadingNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:prepareShadingState,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:getGeoNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getModifier,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,local1,1,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_3,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_3,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_3,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getWorldToCamera,retrn,18,<>> = <<org.sunflow.core.ShadingState:getWorldToCamera,retrn,18,<null>>,D,D>;
<org.sunflow.image.Color:div,retrn,1,<>> = <<org.sunflow.image.Color:div,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:div,retrn,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,10,<>> = <<org.sunflow.core.Instance:getModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformVectorObjectToWorld,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformNormalObjectToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:getShader,retrn,3,<>> = <<org.sunflow.core.LightServer:getShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:getShader,retrn,3,<null>>,D,D>;
<org.sunflow.RenderObjectMap:update,local1,109,<>> = <<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteTree,local1,11,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,121,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,121,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getIgnoreValidation,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getIgnoreValidation,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getMatrixArray,local1,12,<>> = <<org.sunflow.core.ParameterList:getMatrixArray,local1,12,<null>>,D,D>;
<org.sunflow.core.Instance:removeModifier,parmtr,2,<>> = <<org.sunflow.core.Instance:removeModifier,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,parmtr,3,<>> = <<org.dacapo.harness.Sunflow:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,101,<>> = <<org.sunflow.core.bucket.BucketOrderFactory:create,retrn,101,<null>>,D,D>;<<org.sunflow.core.bucket.DiagonalBucketOrder:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,341,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:init,parmtr,5,<>> = <<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:init,argmnt,5,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorWorldToObject,local1,21,<>> = <<org.sunflow.core.Instance:transformVectorWorldToObject,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:transformV,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:digestOption,parmtr,4,<>> = <<org.dacapo.parser.ConfigFile:digestOption,argmnt,4,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,32,<>> = <<org.sunflow.math.BoundingBox:getMaximum,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.math.BoundingBox:getMinimum,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:getValues,local1,14,<>> = <<java.util.List:toArray,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:hasNoValues,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:getValues,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:init,parmtr,1,<>> = <<org.dacapo.harness.Benchmark:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:initialize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:update,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:update,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:write,local1,19,<>> = <<org.dacapo.harness.TeeOutputStream:write,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:write,callback,1,<null>>,D,D>;<<java.io.FilterOutputStream:flush,argmnt,1,<null>>,D,D>;<<java.io.FilterOutputStream:write,argmnt,1,<null>>,D,D>;<<java.io.OutputStream:flush,argmnt,1,<null>>,D,D>;<<java.io.OutputStream:write,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,115,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,115,<null>>,E,E>;
<org.dacapo.harness.DacapoClassLoader:getJars,local1,41,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;<<java.io.File:toURL,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,local1,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.core.InstanceList:prepareShadingState,local1,3,<>> = <<org.sunflow.core.Instance:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$1:clinit,local1,118,<>> = <<org.sunflow.core.ParameterList$1:clinit,local1,118,<null>>,E,E>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,6,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,6,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,53,<>> = <<org.dacapo.harness.TestHarness:main,local1,53,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,669,<>> = <<org.dacapo.parser.ConfigFileTokenManager:getNextToken,local1,669,<null>>,E,E>;
<org.sunflow.core.Scene:calculatePhotons,parmtr,2,<>> = <<org.sunflow.core.Scene:calculatePhotons,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,599,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,599,<null>>,D,D>;
<org.sunflow.math.Point3:init,parmtr,1,<>> = <<org.sunflow.math.Point3:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,75,<>> = <<org.dacapo.harness.TestHarness:main,local1,75,<null>>,E,E>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,115,<>> = <<org.sunflow.core.accel.NullAccelerator:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,115,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,147,<>> = <<org.sunflow.SunflowAPI:compile,local1,147,<null>>,D,D>;
<org.sunflow.system.SearchPath:addSearchPath,local1,77,<>> = <<org.sunflow.system.SearchPath:addSearchPath,local1,77,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,366,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,366,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,local1,79,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,79,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:config,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:config,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:configOption,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,128,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:isValidParameter,local1,85,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,21,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setFilterScratch,parmtr,3,<>> = <<org.dacapo.parser.Config:setFilterScratch,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:descElement,local1,6,<>> = <<org.dacapo.parser.ConfigFile:descElement,local1,6,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,47,<>> = <<org.sunflow.core.Camera:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,20,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getPreIterationGC,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getPreIterationGC,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,local1,18,<>> = <<org.apache.commons.cli.Option:equals,local1,18,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,325,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,325,<null>>,E,E>;
<org.sunflow.util.FastHashMap$EntryIterator:next,local1,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:next,local1,1,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:getParsedOptionValue,local1,7,<>> = <<org.apache.commons.cli.CommandLine:getParsedOptionValue,local1,7,<null>>,D,D>;
<org.dacapo.parser.Config:parse,local1,1,<>> = <<org.dacapo.parser.Config:parse,local1,1,<null>>,E,E>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,54,<>> = <<org.dacapo.harness.Benchmark:extractFileResource,local1,54,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,3,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,3,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,150,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,272,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,272,<null>>,D,D>;
<org.sunflow.math.BoundingBox:contains,local1,26,<>> = <<org.sunflow.math.BoundingBox:contains,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:makeOption,retrn,20,<>> = <<org.apache.commons.cli.Option:init,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:setValueSeparator,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:setArgName,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:makeOption,retrn,20,<null>>,D,D>;
<org.sunflow.core.ParameterList:getIntArray,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getIntArray,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,37,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:checkNanInf,local1,37,<null>>,E,E>;
<org.sunflow.math.OrthoNormalBasis:makeFromWV,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:makeFromWV,argmnt,2,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,549,<>> = <<org.sunflow.core.accel.KDTree:build,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:buildTree,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.KDTree:dumpObj,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,95,<>> = <<org.apache.commons.cli.Options:getOptionGroup,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getResult,parmtr,1,<>> = <<org.sunflow.core.ShadingState:getResult,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,204,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,204,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:flatten,local1,141,<>> = <<org.apache.commons.cli.PosixParser:flatten,local1,141,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:init,parmtr,2,<>> = <<org.dacapo.parser.SimpleCharStream:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,33,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,33,<null>>,E,E>;
<org.sunflow.math.BoundingBox:intersects,local1,14,<>> = <<org.sunflow.math.BoundingBox:intersects,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:run,local1,68,<>> = <<org.dacapo.harness.Benchmark:run,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:preIteration,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:prepare,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:parse,local1,2,<>> = <<java.io.File:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,local1,41,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:init,local1,57,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getNumPrimitives,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh$WaldTriangle:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:identifier,local1,10,<>> = <<org.dacapo.parser.ConfigFile:identifier,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:addValue,parmtr,2,<>> = <<org.apache.commons.cli.Option:addValue,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,166,<>> = <<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,166,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,298,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,298,<null>>,E,E>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,216,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,216,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,333,<>> = <<org.sunflow.core.LightServer:build,local1,333,<null>>,E,E>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,parmtr,1,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,argmnt,1,<null>>,D,D>;<<org.sunflow.core.accel.BoundingIntervalHierarchy:subdivide,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,97,<>> = <<org.dacapo.harness.TestHarness:runBenchmark,local1,97,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:FillBuff,local1,141,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:FillBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,222,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,222,<null>>,D,D>;
<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,221,<>> = <<org.sunflow.core.renderer.ProgressiveRenderer:render,local1,221,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,366,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,366,<null>>,D,D>;
<org.sunflow.util.FastHashMap:put,local1,88,<>> = <<org.sunflow.util.FastHashMap:put,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,770,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,770,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,115,<>> = <<org.sunflow.core.LightServer:build,local1,115,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,2810,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,2810,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:getStringValue,retrn,13,<>> = <<org.sunflow.core.ParameterList$Parameter:getStringValue,retrn,13,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getStringValue,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,96,<>> = <<org.sunflow.math.QMC:clinit,local1,96,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,490,<>> = <<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,490,<null>>,E,E>;
<org.dacapo.harness.TestHarness:main,local1,161,<>> = <<org.dacapo.harness.TestHarness:main,local1,161,<null>>,E,E>;
<org.dacapo.harness.Benchmark:startIteration,local1,18,<>> = <<org.dacapo.harness.Benchmark:startIteration,local1,18,<null>>,E,E>;
<org.sunflow.core.ParameterList:getInt,local1,19,<>> = <<org.sunflow.core.ParameterList:getInt,local1,19,<null>>,E,E>;
<org.sunflow.SunflowAPI:reset,local1,3,<>> = <<org.sunflow.SunflowAPI:reset,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Scene:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,local1,12,<>> = <<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjFillToken,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionValues,local1,11,<>> = <<org.apache.commons.cli.CommandLine:getOptionValues,argmnt,1,<null>>,D,D>;<<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addColor,local1,16,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:toString,local1,86,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,33,<>> = <<org.dacapo.harness.CommandLineArgs:init,local1,33,<null>>,D,D>;
<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,local1,3,<>> = <<org.dacapo.harness.Benchmark:useBenchmarkClassLoader,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,100,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,100,<null>>,D,D>;
<org.sunflow.core.ParameterList:add,local1,12,<>> = <<org.sunflow.core.ParameterList:add,local1,12,<null>>,D,D>;
<org.sunflow.core.AccelerationStructureFactory:create,retrn,132,<>> = <<org.sunflow.core.accel.KDTree:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.AccelerationStructureFactory:create,retrn,132,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,29,<>> = <<java.lang.Enum:ordinal,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,86,<>> = <<org.dacapo.harness.Callback:complete,local1,86,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getCnfOverride,retrn,9,<>> = <<org.dacapo.harness.CommandLineArgs:getCnfOverride,retrn,9,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,6,<>> = <<org.dacapo.harness.TestHarness:init,local1,6,<null>>,E,E>;
<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,parmtr,3,<>> = <<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,346,<>> = <<org.dacapo.harness.TestHarness:main,local1,346,<null>>,E,E>;
<org.sunflow.core.shader.MirrorShader:scatterPhoton,local1,59,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,134,<>> = <<org.dacapo.parser.Config:print,local1,134,<null>>,D,D>;
<org.sunflow.core.Camera:getCameraToWorld,local1,3,<>> = <<org.sunflow.core.Camera:getCameraToWorld,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,64,<>> = <<org.sunflow.Benchmark:init,local1,64,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,14,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,14,<null>>,E,E>;
<org.sunflow.SunflowAPI:parameter,parmtr,1,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,54,<>> = <<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,54,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa4_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa4_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa5_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:preIteration,local1,90,<>> = <<org.dacapo.harness.Sunflow:preIteration,local1,90,<null>>,D,D>;
<org.dacapo.harness.Benchmark:initialize,local1,26,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadLimit,parmtr,1,<>> = <<org.dacapo.parser.Config:setThreadLimit,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,916,<>> = <<org.sunflow.core.accel.KDTree:build,local1,916,<null>>,D,D>;
<org.dacapo.parser.Token:init,parmtr,3,<>> = <<org.dacapo.parser.Token:init,argmnt,3,<null>>,D,D>;<<org.dacapo.parser.Token:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:initCause,local1,2,<>> = <<org.codehaus.janino.util.CausedException:initCause,local1,2,<null>>,E,E>;
<org.sunflow.math.Matrix4:inverse,parmtr,1,<>> = <<org.sunflow.math.Matrix4:inverse,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:mul,retrn,4,<>> = <<org.sunflow.image.Color:mul,argmnt,4,<null>>,D,D>;<<org.sunflow.image.Color:mul,retrn,4,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3600,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3600,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3600,retrn,3,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:renderBucket,local1,971,<>> = <<org.sunflow.core.Filter:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:refineSamples,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:renderBucket,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,718,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,718,<null>>,D,D>;
<org.sunflow.core.LightServer:shadeBakeResult,local1,7,<>> = <<org.sunflow.core.Shader:getRadiance,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Option:equals,local1,89,<>> = <<org.apache.commons.cli.Option:equals,callback,2,<null>>,D,D>;<<org.apache.commons.cli.Option:equals,argmnt,2,<null>>,D,D>;<<java.lang.Object:getClass,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,144,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,144,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,316,<>> = <<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,316,<null>>,D,D>;
<org.apache.commons.cli.Option:clone,parmtr,1,<>> = <<org.apache.commons.cli.Option:clone,argmnt,1,<null>>,D,D>;<<java.lang.Object:clone,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Option:clone,callback,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$300,retrn,3,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$300,retrn,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,71,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:addPoints,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getBinary,parmtr,2,<>> = <<org.dacapo.harness.FileDigest:getBinary,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap:containsKey,local1,35,<>> = <<org.sunflow.util.FastHashMap:containsKey,argmnt,1,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,22,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,parmtr,2,<>> = <<org.sunflow.core.ShadingState:getRandom,argmnt,1,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:addSample,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getGeoNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getDiffuseDepth,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getPoint,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point3:toString,local1,34,<>> = <<org.sunflow.math.Point3:toString,local1,34,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,211,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,211,<null>>,E,E>;
<org.sunflow.RenderObjectMap:remove,local1,253,<>> = <<org.sunflow.RenderObjectMap:remove,local1,253,<null>>,D,D>;
<org.dacapo.parser.Config:setDigest,parmtr,3,<>> = <<org.dacapo.parser.Config:setDigest,argmnt,3,<null>>,D,D>;
<org.sunflow.math.Point2:toString,local1,14,<>> = <<org.sunflow.math.Point2:toString,local1,14,<null>>,D,D>;
<org.dacapo.harness.Benchmark:fileFromInputStream,parmtr,2,<>> = <<java.io.InputStream:read,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:fileFromInputStream,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,60,<>> = <<org.sunflow.SunflowAPI:camera,local1,60,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,36,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getMethodology,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getMethodology,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceFinalGather,local1,3,<>> = <<org.sunflow.core.ShadingState:traceFinalGather,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:traceFinalGather,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.DacapoClassLoader:init,parmtr,1,<>> = <<org.dacapo.harness.DacapoClassLoader:init,argmnt,1,<null>>,D,D>;<<java.net.URLClassLoader:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:asColMajor,parmtr,1,<>> = <<org.sunflow.math.Matrix4:asColMajor,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getThreadFactor,retrn,10,<>> = <<org.dacapo.harness.CommandLineArgs:getThreadFactor,retrn,10,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,60,<>> = <<java.lang.String:toLowerCase,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoordArray,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getTexCoordArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getFloatParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformV,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformV,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:init,local1,7,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:get,parmtr,1,<>> = <<org.sunflow.math.Vector3:get,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Camera:update,local1,51,<>> = <<org.sunflow.core.Camera:update,local1,51,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1083,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,1083,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$BucketThread:run,local1,2,<>> = <<org.sunflow.core.IntersectionState:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,322,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,322,<null>>,E,E>;
<org.apache.commons.cli.MissingOptionException:createMessage,local1,2,<>> = <<java.lang.StringBuffer:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;<<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,572,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,572,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,782,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,782,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,local1,16,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:isDifferent,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:init,parmtr,1,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:create,retrn,6,<>> = <<org.sunflow.SunflowAPI:init,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:create,retrn,6,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$4300,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$4300,argmnt,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,41,<>> = <<org.sunflow.RenderObjectMap$RenderObjectType:clinit,local1,41,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,76,<>> = <<org.sunflow.core.tesselatable.BezierMesh:bernstein,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:bernsteinDeriv,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:update,local1,10,<>> = <<org.sunflow.core.shader.GlassShader:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:toString,local1,42,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Digest:toString,local1,32,<>> = <<org.dacapo.harness.Digest:toString,local1,32,<null>>,D,D>;
<org.sunflow.math.Matrix4:transformVX,parmtr,1,<>> = <<org.sunflow.math.Matrix4:transformVX,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Matrix4:translation,retrn,2,<>> = <<org.sunflow.math.Matrix4:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Matrix4:translation,retrn,2,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,172,<>> = <<org.dacapo.parser.Config:describe,local1,172,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getIgnoreValidation,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getIgnoreValidation,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,local1,76,<>> = <<org.dacapo.parser.Config:describe,local1,76,<null>>,E,E>;
<org.dacapo.harness.TeeOutputStream:version,local1,24,<>> = <<java.io.File:getAbsolutePath,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeeOutputStream:version,argmnt,1,<null>>,D,D>;<<java.io.File:renameTo,argmnt,1,<null>>,D,D>;
<org.sunflow.math.QMC:clinit,local1,328,<>> = <<org.sunflow.math.QMC:clinit,local1,328,<null>>,E,E>;
<org.sunflow.core.ParameterList$Parameter:access$1800,parmtr,2,<>> = <<org.sunflow.core.ParameterList$Parameter:access$1800,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:getTexCoord,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:transform,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,2,<null>>,D,D>;<<org.sunflow.math.Vector3:set,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,60,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,60,<null>>,E,E>;
<org.dacapo.parser.SimpleCharStream:GetImage,local1,52,<>> = <<org.dacapo.parser.SimpleCharStream:GetImage,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:makeOption,parmtr,3,<>> = <<org.dacapo.harness.CommandLineArgs:makeOption,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadFactor,parmtr,1,<>> = <<org.dacapo.parser.Config:setThreadFactor,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$FloatParameter:init,local1,7,<>> = <<org.sunflow.core.ParameterList$FloatParameter:init,local1,7,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$200,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$200,argmnt,2,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getInstance,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,770,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,770,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,359,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,359,<null>>,E,E>;
<org.sunflow.core.LightServer:calculatePhotons,local1,188,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,109,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,109,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,8,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,8,<null>>,D,D>;
<org.sunflow.core.ShadingState:diffuse,local1,30,<>> = <<org.sunflow.core.LightSample:getDiffuseRadiance,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightSample:dot,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,184,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,55,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setDigest,local1,8,<>> = <<org.dacapo.parser.Config:setDigest,local1,8,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoord,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getTexCoord,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:getBounds,parmtr,1,<>> = <<org.sunflow.SunflowAPI:getBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:lookupCamera,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:lookupCamera,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,158,<>> = <<org.dacapo.harness.Benchmark:validate,local1,158,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupLight,parmtr,2,<>> = <<org.sunflow.SunflowAPI:lookupLight,argmnt,2,<null>>,D,D>;
<org.codehaus.janino.CompileException:init,parmtr,4,<>> = <<org.codehaus.janino.CompileException:init,argmnt,4,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,36,<>> = <<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,36,<null>>,E,E>;
<org.sunflow.core.LightSample:traceShadow,local1,28,<>> = <<org.sunflow.core.LightSample:traceShadow,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,391,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,391,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,local1,7,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:init,parmtr,1,<>> = <<org.dacapo.parser.TokenMgrError:init,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.TokenMgrError:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,316,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:shader,local1,53,<>> = <<org.sunflow.SunflowAPI:shader,local1,53,<null>>,D,D>;
<org.sunflow.SunflowAPI:shaderOverride,parmtr,2,<>> = <<org.sunflow.SunflowAPI:shaderOverride,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoordArray,retrn,18,<>> = <<org.sunflow.core.ParameterList:getTexCoordArray,retrn,18,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:setFaceVertexCount,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:setVertexCount,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getIntArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getVectorArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:setFaceCount,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getPointArray,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getTexCoordArray,argmnt,1,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransform,parmtr,2,<>> = <<org.sunflow.math.OrthoNormalBasis:untransform,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,20,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:build,local1,20,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:init,parmtr,2,<>> = <<org.dacapo.parser.ConfigFileTokenManager:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:deleteTree,parmtr,2,<>> = <<java.io.File:isDirectory,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.Benchmark:deleteTree,argmnt,2,<null>>,D,D>;<<java.io.File:delete,argmnt,1,<null>>,D,D>;<<java.io.File:getName,argmnt,1,<null>>,D,D>;<<java.io.File:listFiles,argmnt,1,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,8,<>> = <<java.lang.ClassLoader:getResource,argmnt,1,<null>>,D,D>;<<java.net.URLClassLoader:newInstance,argmnt,3,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,81,<>> = <<org.dacapo.harness.Callback:complete,local1,81,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,287,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,287,<null>>,D,D>;
<org.sunflow.math.OrthoNormalBasis:untransformZ,local1,4,<>> = <<org.sunflow.math.OrthoNormalBasis:untransformZ,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,829,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,829,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,189,<>> = <<org.sunflow.image.RGBSpace:toString,local1,189,<null>>,D,D>;
<org.apache.commons.cli.Util:stripLeadingAndTrailingQuotes,retrn,41,<>> = <<org.apache.commons.cli.Util:stripLeadingAndTrailingQuotes,retrn,41,<null>>,D,D>;
<org.apache.commons.cli.Options:init,parmtr,1,<>> = <<org.apache.commons.cli.Options:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Point2:set,parmtr,2,<>> = <<org.sunflow.math.Point2:set,argmnt,2,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getStringValue,local1,3,<>> = <<org.sunflow.core.ParameterList$Parameter:getStringValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addPoints,parmtr,3,<>> = <<org.sunflow.core.ParameterList:addPoints,argmnt,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,135,<>> = <<org.sunflow.SunflowAPI:compile,local1,135,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getPreIterationGC,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getPreIterationGC,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:hasOption,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:mul,retrn,11,<>> = <<org.sunflow.image.Color:mul,retrn,11,<null>>,D,D>;
<org.sunflow.core.ParameterList:addTexCoords,local1,32,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,219,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,219,<null>>,E,E>;
<org.dacapo.harness.Callback:complete,local1,42,<>> = <<org.dacapo.harness.Callback:complete,local1,42,<null>>,E,E>;
<org.sunflow.core.ParameterList:getStringArray,local1,3,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getStringArray,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:update,local1,38,<>> = <<org.sunflow.core.primitive.TriangleMesh:update,local1,38,<null>>,D,D>;
<org.sunflow.SunflowAPI:runSystemCheck,local1,134,<>> = <<org.sunflow.SunflowAPI:runSystemCheck,local1,134,<null>>,D,D>;
<org.sunflow.image.Color:madd,retrn,1,<>> = <<org.sunflow.image.Color:madd,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:madd,retrn,1,<null>>,D,D>;
<org.sunflow.image.Color:clinit,local1,28,<>> = <<org.sunflow.image.Color:clinit,local1,28,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,parmtr,4,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitiveRobust,argmnt,4,<null>>,D,D>;<<org.sunflow.core.IntersectionState:getRobustStack,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:toString,local1,5,<>> = <<org.sunflow.math.Vector3:toString,local1,5,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,319,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,319,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,parmtr,1,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:intersectTriangleKensler,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,471,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,861,<>> = <<org.sunflow.core.accel.KDTree:build,local1,861,<null>>,D,D>;
<org.dacapo.parser.ParseException:initialise,local1,327,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,local1,68,<>> = <<org.sunflow.SunflowAPI:light,local1,68,<null>>,E,E>;
<org.sunflow.core.ShadingState:iterator,parmtr,1,<>> = <<org.sunflow.core.ShadingState:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:iterator,callback,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:access$500,parmtr,2,<>> = <<org.sunflow.util.FastHashMap:access$500,argmnt,2,<null>>,D,D>;<<org.sunflow.util.FastHashMap:access$500,callback,2,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,local1,35,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,109,<>> = <<java.net.URLClassLoader:newInstance,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:outputClause,parmtr,4,<>> = <<org.dacapo.parser.ConfigFile:outputClause,argmnt,4,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:libraries,local1,2,<>> = <<java.util.ArrayList:init,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:toArray,argmnt,1,<null>>,D,D>;<<java.util.ArrayList:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:hasBytes,parmtr,2,<>> = <<org.dacapo.parser.Config:hasBytes,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.Config$OutputFile:init,parmtr,1,<>> = <<org.dacapo.parser.Config$OutputFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,local1,42,<>> = <<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,59,<>> = <<java.util.jar.Attributes$Name:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$InterpolationType:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$InterpolationType:init,argmnt,1,<null>>,D,D>;<<java.lang.Enum:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.MissingArgumentException:getOption,retrn,3,<>> = <<org.apache.commons.cli.MissingArgumentException:getOption,retrn,3,<null>>,D,D>;<<org.apache.commons.cli.MissingArgumentException:getOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,308,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,308,<null>>,D,D>;
<Harness:makeHarnessClassLoader,local1,51,<>> = <<java.io.File:toURI,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:init,local1,30,<>> = <<org.sunflow.core.primitive.TriangleMesh:init,local1,30,<null>>,D,D>;
<org.dacapo.harness.TeePrintStream:version,local1,3,<>> = <<org.dacapo.harness.TeeOutputStream:version,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.TeePrintStream:version,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,960,<>> = <<org.sunflow.core.accel.KDTree:build,local1,960,<null>>,E,E>;
<org.dacapo.harness.Callback:start,local1,14,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printReleaseNotes,local1,12,<>> = <<java.lang.ClassLoader:getResourceAsStream,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,local1,46,<>> = <<org.sunflow.core.ParameterList:clear,local1,46,<null>>,E,E>;
<org.sunflow.RenderObjectMap:remove,local1,173,<>> = <<org.sunflow.RenderObjectMap:remove,local1,173,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,177,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa3_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa3_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopStringLiteralDfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa4_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStartNfaWithStates_0,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:rmdir,local1,67,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getArea,local1,6,<>> = <<org.sunflow.math.BoundingBox:getArea,local1,6,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3800,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3800,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3800,retrn,3,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,509,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,509,<null>>,D,D>;
<org.sunflow.core.ParameterList:setVertexCount,parmtr,1,<>> = <<org.sunflow.core.ParameterList:setVertexCount,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,50,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,50,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,19,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:init,local1,19,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:prepareShadingState,local1,22,<>> = <<org.sunflow.core.Instance:getModifier,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:getShader,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformNormalObjectToWorld,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,9,<>> = <<org.dacapo.harness.Callback:runAgain,local1,9,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,9,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,231,<>> = <<org.sunflow.core.Instance:update,local1,231,<null>>,D,D>;
<org.sunflow.image.Color:mul,parmtr,3,<>> = <<org.sunflow.image.Color:mul,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getBeginLine,parmtr,1,<>> = <<org.dacapo.parser.SimpleCharStream:getBeginLine,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,379,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,379,<null>>,E,E>;
<org.dacapo.parser.ParseException:initialise,local1,264,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,401,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,401,<null>>,E,E>;
<org.sunflow.core.shader.GlassShader:init,local1,25,<>> = <<org.sunflow.core.shader.GlassShader:init,local1,25,<null>>,E,E>;
<org.apache.commons.cli.PosixParser:burstToken,local1,20,<>> = <<org.apache.commons.cli.PosixParser:burstToken,local1,20,<null>>,D,D>;
<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,49,<>> = <<org.sunflow.core.shader.DiffuseShader:scatterPhoton,local1,49,<null>>,D,D>;
<org.sunflow.core.LightServer$1:run,local1,223,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupOptions,parmtr,1,<>> = <<org.sunflow.SunflowAPI:lookupOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,953,<>> = <<org.dacapo.harness.Benchmark:validate,local1,953,<null>>,E,E>;
<org.dacapo.harness.Benchmark:prepare,local1,29,<>> = <<org.dacapo.harness.Benchmark:prepare,local1,29,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs$Methodology:values,local1,2,<>> = <<org.dacapo.harness.CommandLineArgs$Methodology:values,local1,2,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:init,parmtr,2,<>> = <<org.dacapo.harness.CommandLineArgs:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,48,<>> = <<org.dacapo.harness.Benchmark:unpackZipFileResource,local1,48,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:update,parmtr,2,<>> = <<org.sunflow.core.tesselatable.BezierMesh:update,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ParameterList:getInt,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:setVertexCount,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getBoolean,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getPointArray,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:clear,local1,34,<>> = <<org.sunflow.core.ParameterList:clear,local1,34,<null>>,D,D>;
<org.dacapo.parser.Config:setJars,parmtr,2,<>> = <<org.dacapo.parser.Config:setJars,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:setJars,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:update,parmtr,1,<>> = <<org.sunflow.core.primitive.Sphere:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:addFloats,parmtr,1,<>> = <<org.sunflow.core.ParameterList:addFloats,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:add,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:ExpandBuff,local1,139,<>> = <<org.dacapo.parser.SimpleCharStream:ExpandBuff,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:geometry,local1,7,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:geometry,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:init,parmtr,1,<>> = <<org.dacapo.harness.Callback:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,70,<>> = <<org.dacapo.harness.Benchmark:preIteration,local1,70,<null>>,E,E>;
<org.sunflow.core.Scene:render,local1,162,<>> = <<org.sunflow.core.Scene:render,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:clinit,local1,31,<>> = <<org.sunflow.image.RGBSpace:clinit,local1,31,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,508,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:init,parmtr,3,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:init,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,198,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,198,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,581,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,581,<null>>,D,D>;
<org.sunflow.math.Matrix4:determinant,parmtr,1,<>> = <<org.sunflow.math.Matrix4:determinant,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,162,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,162,<null>>,E,E>;
<org.sunflow.core.ShadingState:createState,retrn,2,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:createState,retrn,2,<null>>,D,D>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:access$000,parmtr,2,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:access$000,argmnt,2,<null>>,D,D>;
<org.sunflow.system.UI:taskStart,local1,2,<>> = <<org.sunflow.system.UI:taskStart,local1,2,<null>>,E,E>;
<org.sunflow.math.OrthoNormalBasis:makeFromW,local1,68,<>> = <<org.sunflow.math.OrthoNormalBasis:init,argmnt,1,<null>>,D,D>;<<org.sunflow.math.Vector3:normalize,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,111,<>> = <<org.sunflow.core.shader.GlassShader:getRadiance,local1,111,<null>>,D,D>;
<org.apache.commons.cli.Option:getValues,retrn,29,<>> = <<org.apache.commons.cli.Option:getValues,retrn,29,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,1178,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:configOption,local1,125,<>> = <<org.dacapo.parser.ConfigFile:configOption,local1,125,<null>>,E,E>;
<org.dacapo.harness.Callback:complete,local1,89,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupGeometry,parmtr,1,<>> = <<org.sunflow.SunflowAPI:lookupGeometry,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap:remove,local1,149,<>> = <<org.sunflow.RenderObjectMap:remove,local1,149,<null>>,D,D>;
<org.sunflow.SunflowAPI:render,local1,167,<>> = <<org.sunflow.SunflowAPI:lookupCamera,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:render,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupInstance,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:lookupOptions,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,retrn,56,<>> = <<org.sunflow.core.primitive.TriangleMesh$BakingSurface:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:getBakingPrimitives,retrn,56,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,90,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,90,<null>>,D,D>;
<org.sunflow.RenderObjectMap:init,parmtr,1,<>> = <<org.sunflow.RenderObjectMap:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,563,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getArgList,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getArgList,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:setExists,parmtr,2,<>> = <<org.dacapo.parser.Config:setExists,argmnt,2,<null>>,D,D>;
<org.sunflow.math.BoundingBox:contains,parmtr,2,<>> = <<org.sunflow.math.BoundingBox:contains,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:light,local1,34,<>> = <<org.sunflow.SunflowAPI:light,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:clear,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:update,parmtr,2,<>> = <<org.sunflow.core.ParameterList:getString,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Geometry:update,argmnt,2,<null>>,D,D>;
<org.sunflow.SunflowAPI:modifier,parmtr,2,<>> = <<org.sunflow.SunflowAPI:modifier,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightSample:setShadowRay,parmtr,1,<>> = <<org.sunflow.core.LightSample:setShadowRay,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:getGlobalRadiance,local1,66,<>> = <<org.sunflow.core.gi.InstantGI:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:init,parmtr,1,<>> = <<org.dacapo.parser.Config:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,local1,108,<>> = <<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;
<org.sunflow.system.SearchPath:resolvePath,local1,57,<>> = <<java.util.LinkedList:iterator,argmnt,1,<null>>,D,D>;<<org.sunflow.system.SearchPath:resolvePath,argmnt,1,<null>>,D,D>;
<org.sunflow.core.gi.InstantGI:init,local1,189,<>> = <<org.sunflow.core.gi.InstantGI:init,local1,189,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,571,<>> = <<org.dacapo.harness.Benchmark:validate,local1,571,<null>>,D,D>;
<org.dacapo.harness.Sunflow:iterate,local1,11,<>> = <<org.dacapo.harness.Sunflow:iterate,local1,11,<null>>,D,D>;
<org.sunflow.system.UI:printError,local1,12,<>> = <<org.sunflow.system.UI:printError,local1,12,<null>>,E,E>;
<org.dacapo.parser.Config$OutputFile:init,parmtr,3,<>> = <<org.dacapo.parser.Config$OutputFile:init,argmnt,3,<null>>,D,D>;<<org.dacapo.parser.Config$OutputFile:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Parser:parse,parmtr,3,<>> = <<org.apache.commons.cli.Parser:parse,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.Config:filterScratch,parmtr,1,<>> = <<org.dacapo.parser.Config:filterScratch,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.Config:getSize,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:blend,local1,5,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,parmtr,1,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:digestOption,parmtr,3,<>> = <<org.dacapo.parser.ConfigFile:digestOption,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList$ParameterType:clinit,local1,108,<>> = <<org.sunflow.core.ParameterList$ParameterType:clinit,local1,108,<null>>,E,E>;
<org.sunflow.core.accel.KDTree:intersect,local1,884,<>> = <<org.sunflow.core.accel.KDTree:intersect,argmnt,1,<null>>,D,D>;<<org.sunflow.core.PrimitiveList:intersectPrimitive,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:hex,local1,10,<>> = <<org.dacapo.parser.ConfigFile:hex,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:correctShadingNormal,local1,7,<>> = <<org.sunflow.core.ShadingState:correctShadingNormal,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,726,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,726,<null>>,E,E>;
<org.sunflow.core.tesselatable.BezierMesh:tesselate,retrn,767,<>> = <<org.sunflow.core.RenderObject:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.QuadMesh:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:tesselate,retrn,767,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,331,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:occlusion,local1,19,<>> = <<org.sunflow.math.OrthoNormalBasis:transform,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:complete,local1,125,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,parmtr,2,<>> = <<org.dacapo.parser.Config:describeSizes,argmnt,2,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,290,<>> = <<org.sunflow.image.RGBSpace:toString,local1,290,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,53,<>> = <<org.sunflow.core.LightServer:lookupShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,local1,8,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,local1,8,<null>>,E,E>;
<org.dacapo.harness.Callback:start,local1,17,<>> = <<org.dacapo.harness.Callback:start,local1,17,<null>>,D,D>;
<org.sunflow.core.LightSample:traceShadow,parmtr,1,<>> = <<org.sunflow.core.LightSample:traceShadow,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,75,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,local1,75,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:addArg,parmtr,2,<>> = <<org.apache.commons.cli.CommandLine:addArg,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,568,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:calculatePhotons,local1,395,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,395,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,137,<>> = <<org.sunflow.core.accel.KDTree:build,local1,137,<null>>,E,E>;
<org.dacapo.harness.Callback:clinit,local1,2,<>> = <<org.dacapo.harness.Callback:clinit,local1,2,<null>>,E,E>;
<org.dacapo.parser.Config:printThreadModel,parmtr,2,<>> = <<org.dacapo.parser.Config:printThreadModel,argmnt,2,<null>>,D,D>;<<java.io.PrintStream:println,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1100,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1100,argmnt,2,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$1100,retrn,3,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,parmtr,2,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:add,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:set,argmnt,1,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer:computeSubPixel,argmnt,2,<null>>,D,D>;<<org.sunflow.core.renderer.BucketRenderer$ImageSample:scale,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:black,retrn,2,<>> = <<org.sunflow.image.Color:init,argmnt,1,<null>>,D,D>;<<org.sunflow.image.Color:black,retrn,2,<null>>,D,D>;
<org.sunflow.system.UI$Module:clinit,local1,348,<>> = <<org.sunflow.system.UI$Module:clinit,local1,348,<null>>,E,E>;
<org.sunflow.core.Scene:render,local1,318,<>> = <<org.sunflow.core.Scene:render,local1,318,<null>>,D,D>;
<org.sunflow.core.LightServer$1:init,parmtr,6,<>> = <<org.sunflow.core.LightServer$1:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$1:init,argmnt,6,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:isRemoved,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$Entry:isRemoved,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:setDebugStream,parmtr,2,<>> = <<org.dacapo.parser.ConfigFileTokenManager:setDebugStream,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:setDebugStream,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa4_0,local1,21,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjStartNfa_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa4_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.SimpleCharStream:readChar,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getUV,retrn,3,<>> = <<org.sunflow.core.ShadingState:getUV,retrn,3,<null>>,D,D>;<<org.sunflow.core.ShadingState:getUV,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:hasOption,local1,21,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;<<java.util.Map:containsKey,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:clinit,local1,99,<>> = <<org.dacapo.harness.CommandLineArgs:clinit,local1,99,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:string,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:string,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getArgList,local1,3,<>> = <<org.apache.commons.cli.CommandLine:getArgList,argmnt,1,<null>>,D,D>;<<org.dacapo.harness.CommandLineArgs:getArgList,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,local1,61,<>> = <<org.sunflow.core.renderer.BucketRenderer$ImageSample:bilerp,argmnt,6,<null>>,D,D>;
<org.sunflow.RenderObjectMap:put,parmtr,2,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,447,<>> = <<org.sunflow.core.LightServer:build,local1,447,<null>>,D,D>;
<org.sunflow.Benchmark:init,local1,60,<>> = <<org.sunflow.Benchmark:init,local1,60,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,140,<>> = <<org.dacapo.harness.Callback:runAgain,local1,140,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getValidationReport,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getValidationReport,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getScratchDir,retrn,10,<>> = <<org.dacapo.harness.CommandLineArgs:getScratchDir,retrn,10,<null>>,D,D>;
<org.sunflow.image.RGBSpace:init,parmtr,1,<>> = <<org.sunflow.image.RGBSpace:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.image.RGBSpace:gammaCorrect,argmnt,1,<null>>,D,D>;<<org.sunflow.image.RGBSpace:ungammaCorrect,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:setCommandLineOptions,local1,38,<>> = <<org.dacapo.harness.Benchmark:setCommandLineOptions,local1,38,<null>>,E,E>;
<org.sunflow.math.QMC:generateSigmaTable,local1,16,<>> = <<org.sunflow.math.QMC:generateSigmaTable,local1,16,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,local1,19,<>> = <<org.dacapo.parser.ConfigFileTokenManager:ReInitRounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:defineCallback,local1,128,<>> = <<org.dacapo.harness.CommandLineArgs:defineCallback,local1,128,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,7886,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,7886,<null>>,E,E>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,252,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,252,<null>>,E,E>;
<org.sunflow.core.ShadingState:createGlossyBounceState,parmtr,2,<>> = <<org.sunflow.core.ShadingState:createGlossyBounceState,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:preIteration,local1,49,<>> = <<org.dacapo.harness.Benchmark:preIteration,local1,49,<null>>,D,D>;
<org.sunflow.core.Camera:update,parmtr,1,<>> = <<org.sunflow.core.Camera:update,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,285,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,78,<>> = <<org.sunflow.core.LightServer:showStats,local1,78,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:init,local1,418,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:decode,local1,32,<>> = <<org.sunflow.math.Vector3:decode,local1,32,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,retrn,13,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,retrn,13,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getOptions,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:init,parmtr,1,<>> = <<org.dacapo.harness.Callback:init,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:processOptionToken,local1,7,<>> = <<org.apache.commons.cli.Options:hasOption,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:processOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.Options:getOption,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer:showStats,local1,176,<>> = <<org.sunflow.core.LightServer:showStats,local1,176,<null>>,E,E>;
<org.sunflow.Benchmark$BenchmarkScene:buildCornellBox,local1,936,<>> = <<org.sunflow.math.Matrix4:multiply,argmnt,1,<null>>,D,D>;
<org.sunflow.math.Vector3:toString,local1,14,<>> = <<org.sunflow.math.Vector3:toString,local1,14,<null>>,D,D>;
<org.dacapo.parser.Config:setDigest,parmtr,2,<>> = <<org.dacapo.parser.Config:setDigest,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:access$200,retrn,3,<>> = <<org.sunflow.core.primitive.TriangleMesh:access$200,argmnt,2,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:access$200,retrn,3,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,69,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,69,<null>>,D,D>;
<org.codehaus.janino.util.CausedException:printStackTrace,local1,8,<>> = <<org.codehaus.janino.util.CausedException:printStackTrace,callback,1,<null>>,D,D>;<<org.codehaus.janino.util.CausedException:printStackTrace,argmnt,1,<null>>,D,D>;<<java.lang.Throwable:printStackTrace,argmnt,1,<null>>,D,D>;<<java.lang.Throwable:printStackTrace,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,109,<>> = <<java.lang.StringBuffer:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Scene:getBounds,local1,3,<>> = <<org.sunflow.core.Scene:getBounds,argmnt,1,<null>>,D,D>;<<org.sunflow.core.InstanceList:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.FileDigest:getBinary,local1,10,<>> = <<java.io.FileInputStream:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,171,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,171,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,388,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,388,<null>>,D,D>;
<org.sunflow.image.Color:toLinear,local1,31,<>> = <<org.sunflow.image.Color:toLinear,local1,31,<null>>,E,E>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,71,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TeeOutputStream:version,local1,30,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:flatten,local1,114,<>> = <<org.apache.commons.cli.PosixParser:processNonOptionToken,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:init,argmnt,1,<null>>,D,D>;<<java.util.List:toArray,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.PosixParser:flatten,argmnt,1,<null>>,D,D>;<<java.util.List:add,argmnt,1,<null>>,D,D>;<<java.util.List:size,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,parmtr,7,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,argmnt,7,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,local1,71,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,local1,71,<null>>,D,D>;
<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,268,<>> = <<org.sunflow.core.accel.KDTree$BuildStats:printStats,local1,268,<null>>,E,E>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,185,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,185,<null>>,D,D>;
<org.sunflow.SunflowAPI:camera,local1,7,<>> = <<org.sunflow.RenderObjectMap:put,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap:has,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:camera,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:main,local1,271,<>> = <<org.dacapo.harness.TestHarness:main,local1,271,<null>>,D,D>;
<org.dacapo.harness.TestHarness:init,local1,121,<>> = <<org.dacapo.harness.TestHarness:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,780,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.math.BoundingBox:getExtents,retrn,17,<>> = <<org.sunflow.math.BoundingBox:getExtents,retrn,17,<null>>,D,D>;
<org.sunflow.util.IntArray:trim,retrn,24,<>> = <<org.sunflow.util.IntArray:trim,argmnt,1,<null>>,D,D>;<<org.sunflow.util.IntArray:trim,retrn,24,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,297,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,297,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_0,parmtr,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjStopAtPos,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa1_0,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,254,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:validate,local1,1,<>> = <<org.dacapo.harness.Benchmark:validate,local1,1,<null>>,E,E>;
<org.dacapo.parser.Config:setThreadModel,parmtr,1,<>> = <<org.dacapo.parser.Config:setThreadModel,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupCamera,parmtr,2,<>> = <<org.sunflow.SunflowAPI:lookupCamera,argmnt,2,<null>>,D,D>;
<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,338,<>> = <<org.dacapo.parser.ConfigFileTokenManager:clinit,local1,338,<null>>,E,E>;
<org.dacapo.harness.Callback:start,local1,91,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.PosixParser:burstToken,local1,55,<>> = <<org.apache.commons.cli.PosixParser:burstToken,local1,55,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.MirrorShader:getRadiance,local1,64,<>> = <<org.sunflow.core.shader.MirrorShader:getRadiance,local1,64,<null>>,D,D>;
<org.dacapo.harness.Callback$1:clinit,local1,26,<>> = <<org.dacapo.harness.Callback$1:clinit,local1,26,<null>>,E,E>;
<org.apache.commons.cli.CommandLine:resolveOption,local1,6,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:getAverage,parmtr,1,<>> = <<org.sunflow.image.Color:getAverage,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,425,<>> = <<org.sunflow.core.shader.GlassShader:scatterPhoton,local1,425,<null>>,D,D>;
<org.sunflow.math.BoundingBox:include,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:include,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Instance:transformNormalWorldToObject,local1,3,<>> = <<org.sunflow.math.Matrix4:transformTransposeV,argmnt,1,<null>>,D,D>;<<org.sunflow.core.Instance:transformNormalWorldToObject,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,516,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,516,<null>>,D,D>;
<org.sunflow.math.Vector3:decode,local1,22,<>> = <<org.sunflow.math.Vector3:decode,local1,22,<null>>,E,E>;
<org.sunflow.SunflowAPI:parameter,parmtr,3,<>> = <<org.sunflow.SunflowAPI:parameter,argmnt,3,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:description,local1,54,<>> = <<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:descElement,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:description,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:parameter,local1,3,<>> = <<org.sunflow.core.ParameterList:addFloat,argmnt,1,<null>>,D,D>;<<org.sunflow.SunflowAPI:parameter,argmnt,1,<null>>,D,D>;
<org.codehaus.janino.util.LocatedException:getMessage,retrn,10,<>> = <<org.codehaus.janino.util.LocatedException:getMessage,retrn,10,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,parmtr,2,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,argmnt,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.Teapot:clinit,local1,11,<>> = <<org.sunflow.core.tesselatable.Teapot:clinit,local1,11,<null>>,E,E>;
<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,parmtr,1,<>> = <<org.sunflow.core.primitive.TriangleMesh:intersectPrimitive,argmnt,1,<null>>,D,D>;<<org.sunflow.core.primitive.TriangleMesh:intersectTriangleKensler,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,7,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,7,<null>>,E,E>;
<org.sunflow.image.RGBSpace:toString,local1,466,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,local1,30,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:convertRGBtoXYZ,parmtr,2,<>> = <<org.sunflow.image.RGBSpace:convertRGBtoXYZ,argmnt,2,<null>>,D,D>;<<org.sunflow.image.Color:getRGB,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ParseException:add_escapes,local1,231,<>> = <<java.lang.String:length,argmnt,1,<null>>,D,D>;<<java.lang.String:substring,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,local1,7,<>> = <<org.sunflow.core.ParameterList$Parameter:init,local1,7,<null>>,E,E>;
<org.sunflow.core.LightServer:getGlobalRadiance,parmtr,1,<>> = <<org.sunflow.core.LightServer:getGlobalRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describe,parmtr,6,<>> = <<org.dacapo.parser.Config:describe,argmnt,6,<null>>,D,D>;
<org.dacapo.harness.Benchmark:extractFileResource,local1,8,<>> = <<org.dacapo.harness.Benchmark:extractFileResource,local1,8,<null>>,E,E>;
<org.sunflow.core.ShadingState:init,local1,108,<>> = <<org.sunflow.core.ShadingState:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,argmnt,2,<null>>,D,D>;<<org.sunflow.core.ShadingState:init,callback,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,54,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,54,<null>>,E,E>;
<org.sunflow.util.FastHashMap:resize,local1,115,<>> = <<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:resize,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap:alloc,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,186,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:buildHierarchy,local1,186,<null>>,D,D>;
<org.apache.commons.cli.Options:hasOption,local1,6,<>> = <<org.apache.commons.cli.Options:hasOption,local1,6,<null>>,D,D>;
<org.sunflow.util.FastHashMap$EntryIterator:readable,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$EntryIterator:readable,argmnt,1,<null>>,D,D>;<<org.sunflow.util.FastHashMap$EntryIterator:readable,callback,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,31,<>> = <<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,31,<null>>,D,D>;
<org.apache.commons.cli.Parser:processOption,local1,114,<>> = <<java.util.List:remove,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,332,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getTexCoordArray,local1,8,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getTexCoordArray,argmnt,1,<null>>,D,D>;
<org.sunflow.core.Geometry:tesselate,local1,30,<>> = <<org.sunflow.core.Geometry:tesselate,local1,30,<null>>,D,D>;
<org.dacapo.parser.Config:setKeep,parmtr,3,<>> = <<org.dacapo.parser.Config:setKeep,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Instance:update,local1,61,<>> = <<org.sunflow.core.Instance:update,local1,61,<null>>,D,D>;
<org.dacapo.parser.Config$ThreadModel:describe,parmtr,1,<>> = <<org.dacapo.parser.Config$ThreadModel:describe,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI$PrintLevel:clinit,local1,60,<>> = <<org.sunflow.system.UI$PrintLevel:clinit,local1,60,<null>>,E,E>;
<Harness:main,local1,39,<>> = <<org.dacapo.harness.TestHarness:main,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark:taskStop,parmtr,1,<>> = <<org.sunflow.Benchmark:taskStop,argmnt,1,<null>>,D,D>;
<org.sunflow.system.ui.ConsoleInterface:taskUpdate,local1,53,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,381,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,381,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:getFloats,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:getFloats,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.Options:getOption,local1,8,<>> = <<org.apache.commons.cli.Options:getOption,argmnt,1,<null>>,D,D>;<<java.util.Map:get,argmnt,1,<null>>,D,D>;<<java.util.Map:containsKey,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:build,local1,854,<>> = <<org.sunflow.core.accel.KDTree:build,local1,854,<null>>,E,E>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,21,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,21,<null>>,E,E>;
<org.dacapo.harness.TestHarness:init,local1,37,<>> = <<org.dacapo.harness.TestHarness:init,local1,37,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,1137,<>> = <<org.sunflow.core.accel.KDTree$BuildTask:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:init,parmtr,3,<>> = <<org.dacapo.parser.ConfigFile:init,argmnt,3,<null>>,D,D>;
<org.sunflow.core.Instance:getNumPrimitives,parmtr,1,<>> = <<org.sunflow.core.Instance:getNumPrimitives,argmnt,1,<null>>,D,D>;
<org.sunflow.util.FastHashMap:resize,local1,16,<>> = <<org.sunflow.util.FastHashMap:resize,local1,16,<null>>,E,E>;
<org.sunflow.core.Camera:updateCameraMatrix,local1,135,<>> = <<org.sunflow.core.Camera:updateCameraMatrix,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:sizeSpec,local1,19,<>> = <<org.dacapo.parser.ConfigFile:sizeSpec,local1,19,<null>>,D,D>;
<org.sunflow.core.LightServer:build,local1,477,<>> = <<org.sunflow.core.LightServer:build,local1,477,<null>>,E,E>;
<org.sunflow.core.LightServer:calculatePhotons,local1,404,<>> = <<org.sunflow.core.LightServer:calculatePhotons,local1,404,<null>>,D,D>;
<org.sunflow.core.ShadingState:getWorldToCamera,local1,3,<>> = <<org.sunflow.core.LightServer:getScene,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ShadingState:getWorldToCamera,argmnt,1,<null>>,D,D>;
<org.apache.commons.cli.OptionValidator:validateOption,local1,41,<>> = <<java.lang.StringBuffer:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,37,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,139,<>> = <<org.sunflow.image.RGBSpace:toString,local1,139,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,334,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,334,<null>>,D,D>;
<org.sunflow.system.Memory:sizeof,parmtr,2,<>> = <<org.sunflow.system.Memory:sizeof,argmnt,2,<null>>,D,D>;
<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,42,<>> = <<org.sunflow.core.primitive.TriangleMesh:prepareShadingState,local1,42,<null>>,D,D>;
<org.sunflow.core.ShadingState:createRefractionBounceState,local1,8,<>> = <<org.sunflow.core.ShadingState:createRefractionBounceState,argmnt,2,<null>>,D,D>;
<org.sunflow.core.LightServer:lookupShadingCache,local1,145,<>> = <<org.sunflow.math.Vector3:dot,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:getNormal,retrn,3,<>> = <<org.sunflow.core.ShadingState:getNormal,retrn,3,<null>>,D,D>;<<org.sunflow.core.ShadingState:getNormal,argmnt,1,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,2,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,2,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:init,parmtr,2,<>> = <<org.sunflow.core.tesselatable.BezierMesh:init,argmnt,1,<null>>,D,D>;<<java.lang.Object:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.tesselatable.BezierMesh:init,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.TestHarness:runBenchmark,local1,25,<>> = <<java.lang.Class:getConstructor,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:dumpObj,local1,714,<>> = <<org.sunflow.core.accel.KDTree:dumpObj,local1,714,<null>>,D,D>;
<org.sunflow.math.BoundingBox:init,parmtr,2,<>> = <<org.sunflow.math.BoundingBox:init,argmnt,2,<null>>,D,D>;
<org.sunflow.Benchmark$BenchmarkScene:sphere,local1,57,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ShadingState:traceRefractionPhoton,parmtr,3,<>> = <<org.sunflow.core.ShadingState:traceRefractionPhoton,argmnt,3,<null>>,D,D>;
<org.sunflow.SunflowAPI:options,local1,69,<>> = <<org.sunflow.SunflowAPI:options,local1,69,<null>>,D,D>;
<org.dacapo.parser.Config:print,local1,52,<>> = <<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<org.sunflow.core.shader.GlassShader:getRadiance,local1,496,<>> = <<org.sunflow.core.Ray:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Sunflow:init,local1,88,<>> = <<org.dacapo.harness.Sunflow:init,local1,88,<null>>,E,E>;
<Harness:makeHarnessClassLoader,local1,62,<>> = <<java.net.URI:init,argmnt,1,<null>>,D,D>;<<java.net.URI:toURL,argmnt,1,<null>>,D,D>;
<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,31,<>> = <<org.sunflow.core.primitive.Sphere:prepareShadingState,local1,31,<null>>,D,D>;
<org.sunflow.core.ShadingState:createGlossyBounceState,local1,8,<>> = <<org.sunflow.core.ShadingState:createGlossyBounceState,argmnt,2,<null>>,D,D>;
<org.apache.commons.cli.Option:getValue,retrn,18,<>> = <<org.apache.commons.cli.Option:getValue,retrn,18,<null>>,D,D>;
<org.sunflow.core.Instance:transformVectorWorldToObject,local1,3,<>> = <<org.sunflow.core.Instance:transformVectorWorldToObject,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,4,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,4,<null>>,D,D>;
<org.sunflow.core.Geometry:prepareShadingState,parmtr,2,<>> = <<org.sunflow.core.Geometry:prepareShadingState,argmnt,2,<null>>,D,D>;
<org.sunflow.util.FastHashMap$Entry:getValue,parmtr,1,<>> = <<org.sunflow.util.FastHashMap$Entry:getValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightSample:traceShadow,local1,12,<>> = <<org.sunflow.core.LightSample:traceShadow,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.ConfigFile:generateParseException,local1,194,<>> = <<org.dacapo.parser.ConfigFile:generateParseException,local1,194,<null>>,D,D>;
<org.dacapo.parser.ConfigFileConstants:clinit,local1,144,<>> = <<org.dacapo.parser.ConfigFileConstants:clinit,local1,144,<null>>,E,E>;
<org.sunflow.SunflowAPI:modifier,local1,68,<>> = <<org.sunflow.SunflowAPI:modifier,local1,68,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI$PointLightStore:store,local1,1,<>> = <<org.sunflow.core.gi.InstantGI$PointLightStore:store,local1,1,<null>>,E,E>;
<org.sunflow.core.Geometry:getPrimitiveList,parmtr,1,<>> = <<org.sunflow.core.Geometry:getPrimitiveList,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$1700,parmtr,2,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$1700,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getArgs,retrn,6,<>> = <<org.dacapo.harness.CommandLineArgs:getArgs,retrn,6,<null>>,D,D>;
<org.sunflow.core.LightSample:getSpecularRadiance,retrn,3,<>> = <<org.sunflow.core.LightSample:getSpecularRadiance,retrn,3,<null>>,D,D>;<<org.sunflow.core.LightSample:getSpecularRadiance,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Benchmark:enableValidationReport,local1,10,<>> = <<java.io.BufferedWriter:init,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.Callback:runAgain,local1,46,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:toString,local1,381,<>> = <<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;
<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,local1,31,<>> = <<org.sunflow.core.tesselatable.BezierMesh:getWorldBounds,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,53,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy:intersect,local1,53,<null>>,D,D>;
<org.dacapo.harness.Callback:init,local1,104,<>> = <<org.dacapo.harness.Callback:init,local1,104,<null>>,E,E>;
<org.sunflow.core.LightServer:build,local1,59,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;
<org.sunflow.SunflowAPI:lookupOptions,retrn,7,<>> = <<org.sunflow.SunflowAPI:lookupOptions,retrn,7,<null>>,D,D>;
<org.sunflow.Benchmark:print,local1,42,<>> = <<org.sunflow.Benchmark:print,local1,42,<null>>,E,E>;
<org.dacapo.harness.CommandLineArgs:getSize,local1,3,<>> = <<org.dacapo.harness.CommandLineArgs:getSize,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.core.LightServer$1:init,parmtr,8,<>> = <<org.sunflow.core.LightServer$1:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$1:init,argmnt,8,<null>>,D,D>;
<org.sunflow.core.InstanceList:intersectPrimitive,parmtr,4,<>> = <<org.sunflow.core.InstanceList:intersectPrimitive,argmnt,4,<null>>,D,D>;
<org.sunflow.core.ParameterList:getPointArray,local1,8,<>> = <<org.sunflow.util.FastHashMap:get,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:getPointArray,argmnt,1,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight$TriangleLight:getSamples,local1,384,<>> = <<org.sunflow.math.Vector3:init,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.TokenMgrError:LexicalError,local1,58,<>> = <<org.dacapo.parser.TokenMgrError:LexicalError,local1,58,<null>>,D,D>;
<org.sunflow.image.Color:sub,parmtr,2,<>> = <<org.sunflow.image.Color:sub,argmnt,2,<null>>,D,D>;
<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,304,<>> = <<org.sunflow.core.accel.BoundingIntervalHierarchy$BuildStats:printStats,local1,304,<null>>,D,D>;
<org.sunflow.system.Timer:toString,local1,28,<>> = <<org.sunflow.system.Timer:toString,local1,28,<null>>,D,D>;
<org.sunflow.core.light.TriangleMeshLight:access$3900,retrn,3,<>> = <<org.sunflow.core.light.TriangleMeshLight:access$3900,retrn,3,<null>>,D,D>;<<org.sunflow.core.light.TriangleMeshLight:access$3900,argmnt,2,<null>>,D,D>;
<org.dacapo.harness.Benchmark:getURL,local1,2,<>> = <<org.dacapo.harness.Benchmark:getURL,local1,2,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:update,parmtr,1,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:update,argmnt,1,<null>>,D,D>;
<org.sunflow.core.ParameterList:getFloatParameter,parmtr,1,<>> = <<org.sunflow.core.ParameterList:getFloatParameter,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList:isValidParameter,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.SimpleCharStream:getEndColumn,local1,3,<>> = <<org.dacapo.parser.SimpleCharStream:getEndColumn,argmnt,1,<null>>,D,D>;
<org.sunflow.core.renderer.BucketRenderer:prepare,local1,814,<>> = <<org.sunflow.core.renderer.BucketRenderer:prepare,local1,814,<null>>,D,D>;
<org.sunflow.core.LightServer:addShadingCache,local1,93,<>> = <<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer$Sample:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.LightServer:addShadingCache,argmnt,1,<null>>,D,D>;
<org.sunflow.image.Color:mul,retrn,11,<>> = <<org.sunflow.image.Color:mul,retrn,11,<null>>,D,D>;
<org.dacapo.parser.Config:setThreadFactor,local1,65,<>> = <<org.dacapo.parser.Config:setThreadFactor,local1,65,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:main,local1,31,<>> = <<org.dacapo.parser.ConfigFile:main,local1,31,<null>>,E,E>;
<org.dacapo.parser.ConfigFile:description,parmtr,1,<>> = <<org.dacapo.parser.ConfigFile:description,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_ntk,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:jj_consume_token,argmnt,1,<null>>,D,D>;<<org.dacapo.parser.ConfigFile:descElement,argmnt,1,<null>>,D,D>;
<org.sunflow.core.accel.KDTree:buildTree,local1,1665,<>> = <<org.sunflow.core.accel.KDTree:buildTree,local1,1665,<null>>,E,E>;
<org.sunflow.core.LightServer:showStats,local1,151,<>> = <<org.sunflow.core.LightServer:showStats,local1,151,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,25,<>> = <<org.dacapo.harness.CommandLineArgs:printBenchmarks,local1,25,<null>>,E,E>;
<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa10_0,local1,1,<>> = <<org.dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa10_0,local1,1,<null>>,E,E>;
<org.sunflow.math.BoundingBox:getBound,parmtr,1,<>> = <<org.sunflow.math.BoundingBox:getBound,argmnt,1,<null>>,D,D>;
<org.dacapo.parser.Config:describeSizes,local1,26,<>> = <<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.CommandLineArgs:getSizes,parmtr,1,<>> = <<org.dacapo.harness.CommandLineArgs:getSizes,argmnt,1,<null>>,D,D>;
<org.dacapo.harness.TestHarness:dump,local1,37,<>> = <<org.dacapo.harness.TestHarness:dump,local1,37,<null>>,E,E>;
<org.sunflow.math.BoundingBox:getCenter,retrn,17,<>> = <<org.sunflow.math.BoundingBox:getCenter,retrn,17,<null>>,D,D>;
<org.apache.commons.cli.CommandLine:getOptionObject,parmtr,1,<>> = <<org.apache.commons.cli.CommandLine:getOptionObject,argmnt,1,<null>>,D,D>;<<org.apache.commons.cli.CommandLine:getParsedOptionValue,argmnt,1,<null>>,D,D>;
<org.sunflow.system.UI:printWarning,parmtr,3,<>> = <<org.sunflow.system.UI:printWarning,argmnt,3,<null>>,D,D>;
<org.sunflow.core.ParameterList$Parameter:init,parmtr,1,<>> = <<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;<<org.sunflow.core.ParameterList$Parameter:init,argmnt,1,<null>>,D,D>;
<org.sunflow.image.RGBSpace:main,local1,17,<>> = <<org.sunflow.image.RGBSpace:main,local1,17,<null>>,E,E>;
<org.sunflow.core.gi.InstantGI:getIrradiance,local1,227,<>> = <<org.sunflow.core.gi.InstantGI:getIrradiance,local1,227,<null>>,D,D>;
<org.sunflow.RenderObjectMap$1:clinit,local1,59,<>> = <<org.sunflow.RenderObjectMap$1:clinit,local1,59,<null>>,E,E>;
<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,retrn,13,<>> = <<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,argmnt,1,<null>>,D,D>;<<org.sunflow.RenderObjectMap$RenderObjectHandle:getGeometry,retrn,13,<null>>,D,D>;
<org.sunflow.SunflowAPI:compile,local1,91,<>> = <<org.sunflow.SunflowAPI:compile,local1,91,<null>>,E,E>;
