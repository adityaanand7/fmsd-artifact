//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> "<"
 * f1 -> EvalStatus()
 * f2 -> ","
 * f3 -> ClassName()
 * f4 -> ":"
 * f5 -> MethodName()
 * f6 -> ","
 * f7 -> TypeTag()
 * f8 -> ","
 * f9 -> ParmNumber()
 * f10 -> ","
 * f11 -> FieldList()
 * f12 -> ">"
 */
public class ProgramElement implements Node {
   public NodeToken f0;
   public EvalStatus f1;
   public NodeToken f2;
   public ClassName f3;
   public NodeToken f4;
   public MethodName f5;
   public NodeToken f6;
   public TypeTag f7;
   public NodeToken f8;
   public ParmNumber f9;
   public NodeToken f10;
   public FieldList f11;
   public NodeToken f12;

   public ProgramElement(NodeToken n0, EvalStatus n1, NodeToken n2, ClassName n3, NodeToken n4, MethodName n5, NodeToken n6, TypeTag n7, NodeToken n8, ParmNumber n9, NodeToken n10, FieldList n11, NodeToken n12) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
      f8 = n8;
      f9 = n9;
      f10 = n10;
      f11 = n11;
      f12 = n12;
   }

   public ProgramElement(EvalStatus n0, ClassName n1, MethodName n2, TypeTag n3, ParmNumber n4, FieldList n5) {
      f0 = new NodeToken("<");
      f1 = n0;
      f2 = new NodeToken(",");
      f3 = n1;
      f4 = new NodeToken(":");
      f5 = n2;
      f6 = new NodeToken(",");
      f7 = n3;
      f8 = new NodeToken(",");
      f9 = n4;
      f10 = new NodeToken(",");
      f11 = n5;
      f12 = new NodeToken(">");
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

