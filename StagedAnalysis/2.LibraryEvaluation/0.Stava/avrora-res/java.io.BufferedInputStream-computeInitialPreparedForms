<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,127,<>> = <<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,127,<null>>,D,D>;<<java.lang.StringBuilder:toString,argmnt,1,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,2,<>> = <<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,2,<null>>,D,D>;<<java.lang.invoke.MemberName$Factory:getMethods,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,2,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,70,<>> = <<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,70,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,130,<>> = <<java.lang.String:equals,argmnt,2,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,130,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,11,<>> = <<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,11,<null>>,D,D>;<<java.util.List:iterator,argmnt,1,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,102,<>> = <<java.lang.String:equals,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,102,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,94,<>> = <<java.lang.String:substring,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:init,argmnt,2,<null>>,D,D>;<<java.lang.String:indexOf,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,94,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,94,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,30,<>> = <<java.lang.invoke.MethodTypeForm:setCachedLambdaForm,argmnt,3,<null>>,D,D>;<<java.lang.invoke.MemberName:getMethodType,argmnt,1,<null>>,D,D>;<<java.lang.invoke.MemberName:isPackage,argmnt,1,<null>>,D,D>;<<java.lang.invoke.MemberName:getName,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,30,<null>>,D,D>;<<java.lang.invoke.MemberName:isStatic,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:init,argmnt,1,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,60,<>> = <<java.lang.invoke.MethodType:parameterType,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,60,<null>>,D,D>;<<java.lang.invoke.MethodType:parameterCount,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:basicTypeSignature,argmnt,2,<null>>,D,D>;<<java.lang.invoke.MethodType:form,argmnt,1,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,79,<>> = <<java.lang.String:startsWith,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,79,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,114,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,114,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,164,<>> = <<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,164,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,local1,139,<>> = <<java.lang.invoke.LambdaForm:computeInitialPreparedForms,local1,139,<null>>,E,E>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,124,<>> = <<java.lang.StringBuilder:append,argmnt,2,<null>>,D,D>;<<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,124,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,local1,105,<>> = <<java.lang.StringBuilder:append,argmnt,1,<null>>,D,D>;<<java.lang.StringBuilder:init,argmnt,1,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,local1,147,<>> = <<java.lang.invoke.MethodTypeForm:setCachedLambdaForm,argmnt,3,<null>>,D,D>;<<java.lang.invoke.LambdaForm:init,argmnt,1,<null>>,D,D>;
<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,19,<>> = <<java.lang.invoke.LambdaForm:computeInitialPreparedForms,retrn,19,<null>>,D,D>;<<java.util.Iterator:hasNext,argmnt,1,<null>>,D,D>;<<java.util.Iterator:next,argmnt,1,<null>>,D,D>;
