<java.lang.Class:newReflectionData,local1,52,<>> = <<java.lang.Class:newReflectionData,local1,52,<null>>,D,D>;
<java.lang.Class:newReflectionData,parmtr,2,<>> = <<java.lang.Class$Atomic:casReflectionData,argmnt,3,<null>>,D,D>;<<java.lang.Class:newReflectionData,argmnt,2,<null>>,D,D>;
<java.lang.Class:newReflectionData,local1,41,<>> = <<java.lang.ref.SoftReference:get,argmnt,1,<null>>,D,D>;<<java.lang.Class:newReflectionData,argmnt,1,<null>>,D,D>;<<java.lang.Class$Atomic:casReflectionData,argmnt,2,<null>>,D,D>;<<java.lang.Class$Atomic:casReflectionData,argmnt,3,<null>>,D,D>;
<java.lang.Class:newReflectionData,local1,21,<>> = <<java.lang.Class$Atomic:casReflectionData,argmnt,4,<null>>,D,D>;<<java.lang.ref.SoftReference:init,argmnt,1,<null>>,D,D>;
<java.lang.Class:newReflectionData,retrn,10,<>> = <<java.lang.Class:newReflectionData,retrn,10,<null>>,D,D>;<<java.lang.Class$ReflectionData:init,argmnt,1,<null>>,D,D>;<<java.lang.ref.SoftReference:init,argmnt,2,<null>>,D,D>;
<java.lang.Class:newReflectionData,parmtr,1,<>> = <<java.lang.Class$Atomic:casReflectionData,argmnt,2,<null>>,D,D>;<<java.lang.Class:newReflectionData,argmnt,1,<null>>,D,D>;
