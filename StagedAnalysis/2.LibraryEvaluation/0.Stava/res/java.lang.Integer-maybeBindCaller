<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,parmtr,2,<>> = <<java.lang.invoke.MethodHandleNatives:isCallerSensitive,argmnt,2,<null>>,D,D>;<<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,argmnt,2,<null>>,D,D>;
<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,local1,23,<>> = <<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,argmnt,1,<null>>,D,D>;<<java.lang.invoke.MethodHandleImpl:bindCaller,argmnt,3,<null>>,D,D>;
<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,retrn,3,<>> = <<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,argmnt,3,<null>>,D,D>;<<java.lang.invoke.MethodHandleImpl:bindCaller,argmnt,2,<null>>,D,D>;<<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,retrn,3,<null>>,D,D>;
<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,parmtr,4,<>> = <<java.lang.invoke.MethodHandleImpl:bindCaller,argmnt,3,<null>>,D,D>;<<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,argmnt,4,<null>>,D,D>;
<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,parmtr,1,<>> = <<java.lang.invoke.MethodHandles$Lookup:hasPrivateAccess,argmnt,1,<null>>,D,D>;<<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,argmnt,1,<null>>,D,D>;
<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,retrn,41,<>> = <<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,retrn,41,<null>>,D,D>;<<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,retrn,41,<null>>,D,D>;<<java.lang.invoke.MethodHandles$Lookup:maybeBindCaller,retrn,41,<null>>,D,D>;
